{
  "id": 1954535,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTU0NTM1",
  "url": "https://hackerone.com/reports/1954535",
  "title": "OpenSSL engines can be used to bypass and/or disable the permission model",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-04-19T10:00:30.640Z",
  "submitted_at": "2023-04-19T10:00:30.773Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tniessen",
    "url": "/tniessen",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-30586"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-06-22T11:45:34.136Z",
  "bug_reporter_agreed_on_going_public_at": "2023-06-22T11:45:34.022Z",
  "team_member_agreed_on_going_public_at": "2023-06-20T20:58:10.550Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** Node.js 20 allows loading arbitrary OpenSSL engines even when the permission model is enabled, which can bypass and/or disable the permission model.\n\n**Description:** The permission model implementation permits loading arbitrary native code, e.g., through `crypto.setEngine()`, even when native addons are disallowed, which is the default configuration. Not only can this code bypass the permission system, it can also disable the permission system entirely, effectively allowing JavaScript code to escalate its own privileges.\n\n## Steps To Reproduce:\n\n  1. Enable the permission model.\n  2. Call, for example, `crypto.setEngine()` with a compatible OpenSSL engine.\n  3. Arbitrary code execution occurs, unaffected by the permission model.\n\n## Impact\n\nThe permission model is supposed to restrict the capabilities of running code. However, exploiting this vulnerability allows an attacker to easily bypass the permission model entirely. The OpenSSL engine can, for example, disable the permission model in the host process, and subsequently executed JavaScript code will be unaffected by the previously enabled permission model. This allows running JavaScript code to effectively elevate its own permissions.",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2023-07-20T20:58:10.627Z",
  "allow_singular_disclosure_after": -5565387.993999412,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "zy9ard3"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 21431925,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "So, this is also a vulnerability in the `--no-addons` flag, isn't it?",
      "automated_response": false,
      "created_at": "2023-04-19T11:48:18.224Z",
      "updated_at": "2023-04-19T11:48:18.224Z",
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 21431936,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Thanks for reporting. I just don't agree with 9.9 severity since is not clear to me how an attacker can exploit it to get sensitive information.",
      "automated_response": false,
      "created_at": "2023-04-19T11:50:16.227Z",
      "updated_at": "2023-04-19T11:50:16.227Z",
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 21432268,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "> So, this is also a vulnerability in the --no-addons flag, isn't it?\n\nI don't think `--no-addons` was meant as a security mechanism. OpenSSL engines are not Node.js native addons.\n\n> I just don't agree with 9.9 severity since is not clear to me how an attacker can exploit it to get sensitive information.\n\nYeah, that score is what HackerOne determined automatically after I filled out the CVSS v3.0 Calculator parameters. I will manually downgrade it.",
      "automated_response": false,
      "created_at": "2023-04-19T12:22:37.466Z",
      "updated_at": "2023-04-19T12:22:37.466Z",
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 21432269,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2023-04-19T12:22:48.372Z",
      "updated_at": "2023-04-19T12:22:48.372Z",
      "additional_data": {
        "old_severity": "Critical (9.9)",
        "new_severity": "High",
        "old_severity_id": 1960263,
        "new_severity_id": 1960382
      },
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 21717446,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @tniessen. I'm not familiar with the crypto API (crypto.setEngine specifically). How can I reproduce it locally? \n\n>  The OpenSSL engine can, for example, disable the permission model in the host process\n\nThis case specifically",
      "automated_response": false,
      "created_at": "2023-05-06T17:42:54.355Z",
      "updated_at": "2023-05-06T17:42:54.355Z",
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 21717645,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Within the Node.js repository, you can use `test/addons/openssl-test-engine` as the basis for a proof-of-concept. Since the engine itself (`testsetengine.cc`) can execute arbitrary code regardless of the permission model, any execution of the engine's `bind_fn` should be considered a vulnerability (unless explicitly allowed somehow).\n\n> disable the permission model in the host process\n\nThis is slightly tricky because the malicious code must be tailored to the specific Node.js version and the operating system. When I first discovered the vulnerability, I wrote this code and added it to `bind_fn` in `testsetengine.cc` to disable the permission model in my local build of Node.js. It traverses the host process's stack memory to locate the permission model's `bool Permission::enabled_` in the host process's heap memory.\n\n```cpp\n// These values depend on the Node.js version and the compiler. For an attacker,\n// they are easy to obtain for official Node.js binary distributions.\nconstexpr size_t kEnvironmentPointerOffset = 0x1d8;\nconstexpr size_t kPermissionStructOffset = 0x590;\nconstexpr size_t kPermissionEnabledOffset = 0x38;\n\n// Now retrieve the environment pointer from the host process's stack.\nuint8_t* frame_offset = static_cast<uint8_t*>(__builtin_frame_address(0));\nvoid** env_ptr = reinterpret_cast<void**>(frame_offset + kEnvironmentPointerOffset);\n// Locate the Environment object.\nuint8_t* env = static_cast<uint8_t*>(*env_ptr);\n// Locate the permission struct.\nuint8_t* permission = env + kPermissionStructOffset;\n// Locate Permission::enabled_.\nbool* enabled = reinterpret_cast<bool*>(permission + kPermissionEnabledOffset);\n// Disable the permission model.\n*enabled = false;\n```\n\nOf course, this won't work as-is in most builds of Node.js, but it would be relatively easy to write a similar exploit for any given Node.js build.\n\nIf necessary, I can try to put together an exploit that works with a recent official release, but it is mostly pointless: any OpenSSL engine can run arbitrary code, so disabling the permission model is just one of infinitely many malicious actions that the engine could perform. Disabling the permission model would only be necessary to elevate the permissions of subsequently running JavaScript code (which, admittedly, is bad enough), but most attackers would probably just implement their malicious logic in C/C++/Rust/anything else at this point instead of messing with Node.js internal data structures.",
      "automated_response": false,
      "created_at": "2023-05-06T18:30:08.818Z",
      "updated_at": "2023-05-06T18:30:08.818Z",
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22303641,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-12T14:12:26.108Z",
      "updated_at": "2023-06-12T14:12:26.108Z",
      "additional_data": {
        "old_severity": "High",
        "new_severity": "Medium (6.3)",
        "old_severity_id": 1960382,
        "new_severity_id": 2040468
      },
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22305100,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-12T14:28:42.323Z",
      "updated_at": "2023-06-12T14:28:42.323Z",
      "additional_data": {
        "old_severity": "Medium (6.3)",
        "new_severity": "High (7.5)",
        "old_severity_id": 2040468,
        "new_severity_id": 2040683
      },
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22308588,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-12T17:22:06.413Z",
      "updated_at": "2023-06-12T17:22:06.413Z",
      "additional_data": {
        "old_severity": "High (7.5)",
        "new_severity": "Medium (6.3)",
        "old_severity_id": 2040683,
        "new_severity_id": 2040957
      },
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22309853,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-12T18:37:28.064Z",
      "updated_at": "2023-06-12T18:37:28.064Z",
      "cve_ids": [
        "CVE-2023-30586"
      ],
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22436205,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-20T20:58:02.788Z",
      "updated_at": "2023-06-20T20:58:02.788Z",
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "tniessen",
        "url": "/tniessen"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22436208,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-20T20:58:10.580Z",
      "updated_at": "2023-06-20T20:58:10.580Z",
      "first_to_agree": true,
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22463934,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-22T11:45:34.065Z",
      "updated_at": "2023-06-22T11:45:34.065Z",
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 22463935,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-22T11:45:34.266Z",
      "updated_at": "2023-06-22T11:45:34.266Z",
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}