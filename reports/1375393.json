{
  "id": 1375393,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzc1Mzkz",
  "url": "https://hackerone.com/reports/1375393",
  "title": "\"External status checks\" can be accepted by users below developer access if the user is either author or assignee of the target merge request",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2021-10-20T07:03:56.355Z",
  "submitted_at": "2021-10-20T07:03:56.531Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "joaxcar",
    "url": "/joaxcar",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYEWFC242%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070231Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQDEVwk7bxj1jglcYZLYXzEC13a%2FALjR54pLU%2FsBVt%2BZvAIgC1t081Aw5%2Bk7M7ZEU46AUFdO2DKTk5ZGnZDVBCMCHrMqsgUIIxADGgwwMTM2MTkyNzQ4NDkiDFtHwxOGkBPnYOBRcSqPBVOxjjASsIMug1nG7flVJUOFjNYk1525RkW7LpVGnfwJCFqcRkxO7pg%2F21JoyOO0HhQZDZVVeszIiThWSZDq3NvJkB3qEuSUHpgRrf%2FnadR72Y%2BgiPjZe0wY28Mwo98IaXaBR2kAWH2jC5rgUu9K2q%2FlW17IoTDHjB6%2Fs6IiiYCM%2BBcZFOw%2BWNqlFB%2BhjRw%2Bl7ZWlMkB1NM8%2F5FbP2BcpsO%2F9Si0a6DME7X%2F%2F4wHjkgfN4uBLTAXkCLgsUV%2Fd0PWvkyBSUIk1pfG7445ZT7jtmecNppsPJUT3daU4IufUbhM0Bajh0xFUbz%2F6j2R3iLuC0tjdipLvzDrwqBFdboB81c00HUWDxuMeDWXJr1OzB5SmxU3r75UoJ17ZBIPH5Jni%2Fxkm2%2F8U0yz5xmgrxAk2vuUtz9zW7pi2yRVxUv5Wb9vv8qzixUSpqolUBTHLBKjT0B7%2BH3XMdeSk7Yi8WEozyMfM6D3w9LpbvL1RjxX3HuvwFYEAbcnxKAuzPpuQOGpLqPWWdEP2QWb3%2BSf%2Fgjs797aPbdT2QubyUYuu6UawYh1RmPFTRbCJPMZa52EH6ExFXqzZNf2d6v35uXrT4ABVJaSQubDhIPFwGOW%2BXNcSuwi1YtoSepyZ01fNUCYLRnnv0Bzi4LIk%2BG0z3DuyL0V%2F3E7QeFHRgEkG84oRSWaFDeZaphiA8XqToJX%2Bugp9oBVG73IrvySXQ%2FszZJr670iLVDVA9Y2RXPhniZYGTqkRa2wGAqvq196imVU9XvuGUdntO7kcfehxUYH%2FNtGdGjR58bchUt7dwOYEjG2%2FUu4%2BFgag7VHHeHbLo46FHwAuNXBAR%2FRJklmecinxbREWqIH674S%2Bb2Bbz5iIcPIRNBm4T8wmYW5qAY6sQFc1K0fy6ipqcqMoJ9yELh17%2FzVcNxI%2FZQvaf2ePD8FIi6hcDtz%2FxKA9t0JO9BF4fjWmWRzvibzEfJHmi4fR%2BRudIzFC8%2FgV2YYkqUzH8GODOztA5ppSWNx1pqMKvJF3Kp5esr234z2Pke3gjKaQhNZhGAxhptYSvZPsk4XY1dB%2BiT%2FT3R4Gvu8TkS1V%2FJ6HsVN5mbVqJJsWVAFnWsqzCKj8NgJCCI5s8B7vTpsDlASx9A%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=85328815bb4ae4ca75aa450ec1075bacde95140d9597cf0faad371d768d5626f"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-06-08T14:04:26.012Z",
  "bug_reporter_agreed_on_going_public_at": "2022-05-25T11:46:41.219Z",
  "team_member_agreed_on_going_public_at": "2022-06-08T14:04:25.776Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nAny user who is either author or assignee of a merge request can approve that merge request's `external status checks`. This includes users with `Guest` access that creates MR's either through email or through a fork of the project. It also includes users with `Guest` or `Reporter` access getting assigned to an MR, which is not uncommon in public projects.\n\nThere exists a tiny overlap with my report [1375376](https://hackerone.com/reports/1375376) which is yet not triaged. I describe this overlap in the end of this summary. The reports look similar, but the vulnerabilities are not related. A fix in 1375376 would not fix this report, only the overlap.\n\nThe `external status check` documentation does not offer too much information about how the feature is supposed to function. But the developer discussions and the unit tests suggests that approving an `external status check` should be restricted for users with at least `Developer` access in the project. Here is the issue tracking the development https://gitlab.com/gitlab-org/gitlab/-/issues/267519\n\nIn this [thread](https://gitlab.com/gitlab-org/gitlab/-/merge_requests/59137#note_567776066) the possibility of users abusing the fact that a status check is not tied to any special token. Rather they use regular PAT's, these discussion mentions\n\n> find_merge_request_with_access will at least mean that only those with developer+ access to the project in question would be able to exploit the feature in this way.\n\nThe [unit tests](https://gitlab.com/gitlab-org/gitlab/-/blob/master/ee/spec/requests/api/status_checks_spec.rb#L29) for this feature checks this assumption with these lines\n\n```\ndescribe 'permissions' do\n    before do\n      stub_licensed_features(external_status_checks: true)\n    end\n\n    it { expect { subject }.to be_allowed_for(:maintainer).of(project) }\n    it { expect { subject }.to be_allowed_for(:developer).of(project) }\n    it { expect { subject }.to be_denied_for(:reporter).of(project) }\n  end\n```\n\nValidating if the user making the request is developer+.\n\nSo to enforce this they have put an authentication block checking if the user have permission to respond to `external status checks` using the function called `find_merge_request_with_access` in this way\n```\nmerge_request = find_merge_request_with_access(params[:merge_request_iid], :approve_merge_request)\n```\nChecking the permission `:approve_merge_request` which is enabled for developers. But as it turns out, this permission is also enabled for users with the permission `:update_merge_request`. In https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/policies/merge_request_policy.rb there is this rule\n\n```\n rule { can?(:update_merge_request) }.policy do\n    enable :approve_merge_request\n  end\n```\nThat enables the permission for anyone that are allowed to update the MR. And in https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/policies/issuable_policy.rb there exists this rule\n\n```\nrule { can?(:guest_access) & assignee_or_author }.policy do\n    enable :read_issue\n    enable :update_issue\n    enable :reopen_issue\n    enable :read_merge_request\n    enable :update_merge_request\n    enable :reopen_merge_request\n  end\n```\nenabling `:update_merge_request` for anyone that have `:guest_access` and is either assignee or author.\n\nThis is probably the root of the problem. And as far as I could make out this is not the intended behavior. A user with `Guest` access can create an MR by forking and directly send approval for all `external status checks` to lure the developers that the MR have been checked. It leads to at least two problems:\n\n* A user with no membership can create a MR in a public project and then \"approve\" the `external status check's without any membership\n* A user who is demoted to `Reporter` in a private project can still \"approve\" `external status check's in MR's where the user is either author or assignee\n\nand at the moment thanks to the vulnerability that I have reported in [1375376](https://hackerone.com/reports/1375376) at present it is also possible to:\n* A user who is demoted to `Guest` in a private project can still \"approve\" `external status check's in MR's where the user is either author or assignee while not being able to actually view the MR\n\n### Steps to reproduce\n\nExternal status checks is an `Ultimate` feature, so make sure the project is created in such an environment\n\n1. Create two users `owner01` and `guest01`\n2. Log in as `owner01` and create a public project `project01` by visiting https://gitlab.com/projects/new#blank_project and take a note of the project ID\n3. Go to the project settings page and expand the tab `merge requests` and scroll down to `external status checks`, settings page https://gitlab.com/owner01/project01/edit\n4. Create a status check with any name and endpoint, and leave the \n5. Log out and log in as `guest01`\n6. Go to the project page https://gitlab.com/owner01/project01 and create a fork with the `fork` button, call it `fork01`.\n7. When the fork is created, create a new branch in the fork https://gitlab.com/guest01/fork01/-/branches/new called `new_branch`\n8. When the fork is created directly click on the option \"create a merge request\", in the \"New merge request\" page click `Change branches` and select the target branch as any branch on the original `project01`\n9. Click \"Create\" and a new MR should be created in `project01` (this is a guest contribution and a normal open-source flow, but note that the `guest01` user is NOT a member of `project01`)\n10. Go to https://gitlab.com/-/profile/personal_access_tokens and create an access token for the API for `guest01`\n11. Open a terminal and make this request to get the ID of the status check (user `project01` ID and MR IID which is probably 1 and `guest01` token), take a note of the returned ID of the status check\n```\ncurl \"https://gitlab.███/api/v4/projects/<PROJECT_ID>/merge_requests/<MR_IID>/status_checks\" -H \"Authorization: Bearer <TOKEN>\"\n```\n12. Send this request to check for the SHA, the request will fail with a message telling you which SHA to use, in this request we use a dummy SHA=a (make sure to also replace CHECK_ID to the found ID from step 12)\n```\ncurl --request POST \\\n  --url 'https://gitlab.com/api/v4/projects/<PROJECT_ID>/merge_requests/<MR_IID>/status_check_responses?sha=a&external_status_check_id=<CHECK_ID>' \\\n  --header 'Authorization: Bearer <TOKEN>'\n```\n13. Now use the returned SHA in this request to finally \"approve\" the status check for the MR\n```\ncurl --request POST \\\n  --url 'https://gitlab.domain.com/api/v4/projects/<PROJECT_ID>/merge_requests/<MR_IID>/status_check_responses?sha=<SHA>&external_status_check_id=<CHECK_ID>' \\\n  --header 'Authorization: Bearer <TOKEN>'\n```\n14. Go to the MR page and verify that the status check is now green and checked, https://gitlab.com/owner01/project01/-/merge_requests/1\n\n### Impact\n\nA `Guest` user can send acknowledge messages to \"approve\" `external status checks` on MR's where the user is either author or assignee. This makes it possible for a malicious user to \"spoof\" acceptance of MR's in projects where the user should not be able to do this. In public projects this mean that any guest contribution from non-members can have its `external status checks` checked by the author itself even if not a member of the project.\n\n### What is the current *bug* behavior?\n\nUsers with access level below `Developer` can accept `external status checks` if they are either author or assignee of the MR\n\n### What is the expected *correct* behavior?\n\nOnly `Developer`+ users that are members of the project should be able to user their PAT to \"approve\" the `external status check`\n\n### Output of checks\n\nThis bug happens on GitLab.com\n\n## Impact\n\nA `Guest` (or `Reporter`) user can send acknowledge messages to \"approve\" `external status checks` on MR's where the user is either author or assignee. This makes it possible for a malicious user to \"spoof\" acceptance of MR's in projects where the user should not be able to do this. In public projects this mean that any guest contribution from non-members can have its `external status checks` checked by the author itself even if not a member of the project.",
  "bounty_amount": "610.0",
  "formatted_bounty": "$610",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 11,
  "voters": [
    "yukusawa18",
    "awararesearcher",
    "zy9ard3",
    "yassinek3ch",
    "rzx007x",
    "bl4de",
    "cametome006",
    "shivammusic",
    "hangone",
    "psychopathic13",
    "and 1 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 4.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 14002613,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportVulnerabilityTypesUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2021-10-22T00:49:54.981Z",
      "updated_at": "2021-10-22T00:49:54.981Z",
      "additional_data": {
        "added_weaknesses": [
          {
            "id": 26,
            "name": "Improper Access Control - Generic"
          }
        ],
        "removed_weaknesses": [
          {
            "id": 65,
            "name": "Business Logic Errors"
          }
        ]
      },
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14002622,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi Johan,\n\nThanks again for another quality report.\n\nWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at https://gitlab.com/gitlab-org/gitlab/-/issues/343604.  This issue will be made public 30 days following the release of a patch.\n\nWe're holding off on awarding a time-of-triage bounty at this point, as the team might decide this is a documentation update vs. a medium severity vulnerability.\n\nWe will continue to update you via HackerOne as a patch is scheduled for release.\n\nBest regards,\nNick\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2021-10-22T00:54:32.780Z",
      "updated_at": "2021-10-22T00:54:32.780Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14083262,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "(Apologies - forgot to change the state)",
      "automated_response": false,
      "created_at": "2021-10-27T20:48:07.087Z",
      "updated_at": "2021-10-27T20:48:07.087Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14084850,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "ETA for fix:\n\nHi @joaxcar,\n\nThe issue you reported is currently scheduled to be fixed by 2021-12-31.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n",
      "automated_response": true,
      "created_at": "2021-10-28T04:03:52.964Z",
      "updated_at": "2021-10-28T04:03:52.964Z",
      "actor": {
        "username": "gitlab-securitybot",
        "cleared": false,
        "verified": false,
        "url": "/gitlab-securitybot",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14600982,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "ETA for fix:\n\nHi @joaxcar,\n\nThe issue you reported is currently scheduled to be fixed by 2022-01-31.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n",
      "automated_response": true,
      "created_at": "2021-12-09T04:04:38.597Z",
      "updated_at": "2021-12-09T04:04:38.597Z",
      "actor": {
        "username": "gitlab-securitybot",
        "cleared": false,
        "verified": false,
        "url": "/gitlab-securitybot",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14682708,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Hi,\n\nThank you again for the report. As it's been over 30 days since we received this report, we are awarding a bounty prior the release of a patch. Congratulations!\n\nWe will continue to keep you updated via HackerOne as a fix is scheduled.\n\nBest regards,\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2021-12-15T03:07:03.211Z",
      "updated_at": "2021-12-15T03:07:03.211Z",
      "actor": {
        "url": "/gitlab",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "GitLab"
        }
      },
      "bounty_amount": "610.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "gitlab",
      "collaborator": {
        "username": "joaxcar",
        "url": "/joaxcar"
      }
    },
    {
      "id": 15274014,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "ETA for fix:\n\nHi @joaxcar,\n\nThe issue you reported is currently scheduled to be fixed by 2022-02-28.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n",
      "automated_response": true,
      "created_at": "2022-02-01T04:07:01.863Z",
      "updated_at": "2022-02-01T04:07:01.863Z",
      "actor": {
        "username": "gitlab-securitybot",
        "cleared": false,
        "verified": false,
        "url": "/gitlab-securitybot",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15324169,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hi @joaxcar,\n\nThank you again for the report! Your finding has been patched in GitLab version 14.7.1. Congratulations! \n\nhttps://about.gitlab.com/releases/2022/02/03/security-release-gitlab-14-7-1-released/#external-status-checks-can-be-accepted-by-users-below-developer-access-if-the-user-is-either-author-or-assignee-of-the-target-merge-request\n\nPlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab's issue tracker. If you'd like to publicly disclose this report or details of it in a blog post or elsewhere, please allow 30 days to pass before doing so to give time to our customers to upgrade to a patched version.\n\nWe look forward to your next report!\n\nBest regards,\nNick Malcolm\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-02-04T00:03:14.858Z",
      "updated_at": "2022-02-04T00:03:14.858Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "joaxcar",
        "url": "/joaxcar"
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 16856860,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Maybe we could disclose this one as well @nmalcolm_gitlab ? If possible we can redact my gitlab link in step 11, it should be gitlab.example.com (or gitlab.com, same goes for step 12, and 13), but it is not super important\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2022-05-25T11:46:41.276Z",
      "updated_at": "2022-05-25T11:46:41.276Z",
      "first_to_agree": true,
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYEWFC242%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070231Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQDEVwk7bxj1jglcYZLYXzEC13a%2FALjR54pLU%2FsBVt%2BZvAIgC1t081Aw5%2Bk7M7ZEU46AUFdO2DKTk5ZGnZDVBCMCHrMqsgUIIxADGgwwMTM2MTkyNzQ4NDkiDFtHwxOGkBPnYOBRcSqPBVOxjjASsIMug1nG7flVJUOFjNYk1525RkW7LpVGnfwJCFqcRkxO7pg%2F21JoyOO0HhQZDZVVeszIiThWSZDq3NvJkB3qEuSUHpgRrf%2FnadR72Y%2BgiPjZe0wY28Mwo98IaXaBR2kAWH2jC5rgUu9K2q%2FlW17IoTDHjB6%2Fs6IiiYCM%2BBcZFOw%2BWNqlFB%2BhjRw%2Bl7ZWlMkB1NM8%2F5FbP2BcpsO%2F9Si0a6DME7X%2F%2F4wHjkgfN4uBLTAXkCLgsUV%2Fd0PWvkyBSUIk1pfG7445ZT7jtmecNppsPJUT3daU4IufUbhM0Bajh0xFUbz%2F6j2R3iLuC0tjdipLvzDrwqBFdboB81c00HUWDxuMeDWXJr1OzB5SmxU3r75UoJ17ZBIPH5Jni%2Fxkm2%2F8U0yz5xmgrxAk2vuUtz9zW7pi2yRVxUv5Wb9vv8qzixUSpqolUBTHLBKjT0B7%2BH3XMdeSk7Yi8WEozyMfM6D3w9LpbvL1RjxX3HuvwFYEAbcnxKAuzPpuQOGpLqPWWdEP2QWb3%2BSf%2Fgjs797aPbdT2QubyUYuu6UawYh1RmPFTRbCJPMZa52EH6ExFXqzZNf2d6v35uXrT4ABVJaSQubDhIPFwGOW%2BXNcSuwi1YtoSepyZ01fNUCYLRnnv0Bzi4LIk%2BG0z3DuyL0V%2F3E7QeFHRgEkG84oRSWaFDeZaphiA8XqToJX%2Bugp9oBVG73IrvySXQ%2FszZJr670iLVDVA9Y2RXPhniZYGTqkRa2wGAqvq196imVU9XvuGUdntO7kcfehxUYH%2FNtGdGjR58bchUt7dwOYEjG2%2FUu4%2BFgag7VHHeHbLo46FHwAuNXBAR%2FRJklmecinxbREWqIH674S%2Bb2Bbz5iIcPIRNBm4T8wmYW5qAY6sQFc1K0fy6ipqcqMoJ9yELh17%2FzVcNxI%2FZQvaf2ePD8FIi6hcDtz%2FxKA9t0JO9BF4fjWmWRzvibzEfJHmi4fR%2BRudIzFC8%2FgV2YYkqUzH8GODOztA5ppSWNx1pqMKvJF3Kp5esr234z2Pke3gjKaQhNZhGAxhptYSvZPsk4XY1dB%2BiT%2FT3R4Gvu8TkS1V%2FJ6HsVN5mbVqJJsWVAFnWsqzCKj8NgJCCI5s8B7vTpsDlASx9A%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=93738d8b1c1ffe7f3493744c51b0f5f127f5c69be5fc2c7624b98705329e9fee"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17047530,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "I can't modify the existing text to replace with `example.com` but I redacted the domain from step 11.",
      "automated_response": false,
      "created_at": "2022-06-08T14:04:25.804Z",
      "updated_at": "2022-06-08T14:04:25.804Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17047532,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-08T14:04:26.080Z",
      "updated_at": "2022-06-08T14:04:26.080Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}