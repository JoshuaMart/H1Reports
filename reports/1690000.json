{
  "id": 1690000,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjkwMDAw",
  "url": "https://hackerone.com/reports/1690000",
  "title": "Weak randomness in WebCrypto keygen",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-09-02T19:03:49.714Z",
  "submitted_at": "2022-09-02T19:03:49.776Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bnoordhuis",
    "url": "/bnoordhuis",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-35255"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-10-26T08:18:10.825Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-09-26T08:18:02.360Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "https://github.com/nodejs/node/pull/35093 introduced a call to `EntropySource()` in `SecretKeyGenTraits::DoKeyGen()` in `src/crypto/crypto_keygen.cc`. There are two problems with this:\n\n1. It does not check the return value, it assumes `EntropySource()` always succeeds, but it can (and sometimes will) fail.\n\n2. The random data returned by`EntropySource()` may not be cryptographically strong and therefore not suitable as keying material.\n\nAn example is a freshly booted system or a system without `/dev/random` or `getrandom(2)`.\n\n## Impact\n\n`EntropySource()` calls out to openssl's `RAND_poll()` and `RAND_bytes()` in a best-effort attempt to obtain random data.\n\nOpenSSL has a built-in CSPRNG but that can fail to initialize, in which case it's possible either:\n\n1. No random data gets written to the output buffer, i.e., the output is unmodified, or\n\n2. Weak random data is written. It's theoretically possible for the output to be fully predictable because the CSPRNG starts from a predictable state.\n\nThe output buffer is allocated in `SecretKeyGenTraits::DoKeyGen()` using `OPENSSL_malloc()` (alias for `CRYPTO_malloc()`), which in turn calls `malloc()`.\n\n`malloc()` does not zero the buffer but its contents may be predicted or manipulated by an external attacker, e.g. by manipulating an arraybuffer, then forcing the GC to reclaim it.\n\nUsers can override the CSPRNG (and do) so there are probably more failure modes. A buggy CSPRNG could write out only zeroes, for example, comparable to (2).\n\nI have a (trivial!) patch available. H1 gives this a really high CVSS score but I suppose that's appropriate when the worst case failure mode is a complete breakdown of confidentiality and integrity.",
  "weakness": {
    "id": 44,
    "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2022-10-26T08:18:02.454Z",
  "allow_singular_disclosure_after": -28680071.872132108,
  "singular_disclosure_allowed": true,
  "vote_count": 10,
  "voters": [
    "martinvw",
    "freedfr0md3sire",
    "godtengri",
    "the_thinking_machine",
    "shivammusic",
    "ruy_to",
    "azdpsi",
    "rayjolt",
    "optimus_101",
    "mr500"
  ],
  "severity": {
    "rating": "high",
    "score": 8.4,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 18234828,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Forgot to add, this change was introduced in commit https://github.com/nodejs/node/commit/dae283d96f from August 2020 and seems to affect all releases starting with v15.0.0.",
      "automated_response": false,
      "created_at": "2022-09-02T19:11:12.382Z",
      "updated_at": "2022-09-02T19:11:12.382Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18234887,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "thanks for reporting this. This is pretty serious problem. Would you mind including the patch so we can ship this in the upcoming security release.",
      "automated_response": false,
      "created_at": "2022-09-02T19:22:37.723Z",
      "updated_at": "2022-09-02T19:22:37.723Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18234942,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Coincidentally, I was going to create a public PR addressing this as a follow-up to [#44479](https://github.com/nodejs/node/pull/44479) and [#44493](https://github.com/nodejs/node/pull/44493), but I think it's fair to treat this as a vulnerability. Once these two PRs are merged, checking the return value of `EntropySource` and returning `KeyGenJobStatus::FAILED` should be sufficient, I think. In the long term, I was going to remove calls to `EntropySource` altogether.",
      "automated_response": false,
      "created_at": "2022-09-02T19:35:31.905Z",
      "updated_at": "2022-09-02T19:35:31.905Z",
      "actor": {
        "username": "tniessen",
        "cleared": false,
        "verified": false,
        "url": "/tniessen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18235023,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Of course! I spotted another instance of the same bug in `RandomBytesTraits::DeriveBits()`.\n\nThis patch conflicts with https://github.com/nodejs/node/pull/44493 (which was the lead that put me on the trail.)\n```diff\ndiff --git a/src/crypto/crypto_keygen.cc b/src/crypto/crypto_keygen.cc\nindex af489967144..57eeff6aef6 100644\n--- a/src/crypto/crypto_keygen.cc\n+++ b/src/crypto/crypto_keygen.cc\n@@ -81,8 +81,10 @@ KeyGenJobStatus SecretKeyGenTraits::DoKeyGen(\n     SecretKeyGenConfig* params) {\n   CHECK_LE(params->length, INT_MAX);\n   params->out = MallocOpenSSL<char>(params->length);\n-  EntropySource(reinterpret_cast<unsigned char*>(params->out), params->length);\n-  return KeyGenJobStatus::OK;\n+  unsigned char* out = reinterpret_cast<unsigned char*>(params->out);\n+  if (EntropySource(out, params->length))\n+    return KeyGenJobStatus::OK;\n+  return KeyGenJobStatus::FAILED;\n }\n \n Maybe<bool> SecretKeyGenTraits::EncodeKey(\ndiff --git a/src/crypto/crypto_random.cc b/src/crypto/crypto_random.cc\nindex d0736a9cf12..504ddbdcbea 100644\n--- a/src/crypto/crypto_random.cc\n+++ b/src/crypto/crypto_random.cc\n@@ -66,8 +66,7 @@ bool RandomBytesTraits::DeriveBits(\n     Environment* env,\n     const RandomBytesConfig& params,\n     ByteSource* unused) {\n-  CheckEntropy();  // Ensure that OpenSSL's PRNG is properly seeded.\n-  return RAND_bytes(params.buffer, params.size) != 0;\n+  return EntropySource(params.buffer, params.size);\n }\n \n void RandomPrimeConfig::MemoryInfo(MemoryTracker* tracker) const {\ndiff --git a/src/crypto/crypto_util.cc b/src/crypto/crypto_util.cc\nindex 324dd11e301..6ed0814f015 100644\n--- a/src/crypto/crypto_util.cc\n+++ b/src/crypto/crypto_util.cc\n@@ -76,10 +76,8 @@ void CheckEntropy() {\n bool EntropySource(unsigned char* buffer, size_t length) {\n   // Ensure that OpenSSL's PRNG is properly seeded.\n   CheckEntropy();\n-  // RAND_bytes() can return 0 to indicate that the entropy data is not truly\n-  // random. That's okay, it's still better than V8's stock source of entropy,\n-  // which is /dev/urandom on UNIX platforms and the current time on Windows.\n-  return RAND_bytes(buffer, length) != -1;\n+  // Return true only when the data is suitable for cryptographic purposes.\n+  return RAND_bytes(buffer, length) == 1;\n }\n \n int PasswordCallback(char* buf, int size, int rwflag, void* u) {\ndiff --git a/src/crypto/crypto_util.h b/src/crypto/crypto_util.h\nindex 4afae1884fe..5353cb71817 100644\n--- a/src/crypto/crypto_util.h\n+++ b/src/crypto/crypto_util.h\n@@ -133,8 +133,8 @@ struct MarkPopErrorOnReturn {\n // do anything about.\n void CheckEntropy();\n \n-// Generate length bytes of random data. If this returns false, the data\n-// may not be truly random but it's still generally good enough.\n+// Generate |length| bytes of random data. If this returns false,\n+// the data is not suitable for cryptographic purposes.\n bool EntropySource(unsigned char* buffer, size_t length);\n \n int PasswordCallback(char* buf, int size, int rwflag, void* u);\n```",
      "automated_response": false,
      "created_at": "2022-09-02T19:49:09.046Z",
      "updated_at": "2022-09-02T19:49:09.046Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18235037,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Oops, sorry Tobias, missed your comment. Yes, I think it'd be good to eventually get rid of `EntropySource()` because it's clearly easy to misuse (but sadly so are direct `RAND_bytes()` calls...)",
      "automated_response": false,
      "created_at": "2022-09-02T19:52:28.700Z",
      "updated_at": "2022-09-02T19:52:28.700Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18243439,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Should we include this in the upcoming security release? @tniessen @bnoordhuis would you mind doing a PR against node-private?",
      "automated_response": false,
      "created_at": "2022-09-04T07:38:56.959Z",
      "updated_at": "2022-09-04T07:38:56.959Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18246783,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Can do if you add me.",
      "automated_response": false,
      "created_at": "2022-09-04T10:28:36.982Z",
      "updated_at": "2022-09-04T10:28:36.982Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18247721,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "> Can do if you add me.\n\nhttps://github.com/nodejs/TSC/issues/1278",
      "automated_response": false,
      "created_at": "2022-09-04T14:09:23.420Z",
      "updated_at": "2022-09-04T14:09:23.420Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18330423,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "https://github.com/nodejs-private/node-private/pull/346",
      "automated_response": false,
      "created_at": "2022-09-11T09:06:34.813Z",
      "updated_at": "2022-09-11T09:06:34.813Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18342930,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@bnoordhuis should I credit you on the blogpost for this one? :) ",
      "automated_response": false,
      "created_at": "2022-09-12T13:47:43.665Z",
      "updated_at": "2022-09-12T13:47:43.665Z",
      "actor": {
        "username": "vdeturckheim",
        "cleared": false,
        "verified": false,
        "url": "/vdeturckheim",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18352246,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Yes, please. I'll take my bug bounty in gold Kruger rands if you don't mind.\n\n(I kid, I kid. Can I suggest donating it to the GiveWell Foundation, their malaria programs in particular?)",
      "automated_response": false,
      "created_at": "2022-09-13T07:28:04.265Z",
      "updated_at": "2022-09-13T07:28:04.265Z",
      "actor": {
        "username": "bnoordhuis",
        "cleared": false,
        "verified": false,
        "url": "/bnoordhuis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18359572,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Unfortunately we can't claim the bounty ourselves. You'd need to claim yourself and then send it to the GiveWell Foundation.",
      "automated_response": false,
      "created_at": "2022-09-13T14:50:50.837Z",
      "updated_at": "2022-09-13T14:50:50.837Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18408076,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2022-09-16T19:58:00.419Z",
      "updated_at": "2022-09-16T19:58:00.419Z",
      "cve_ids": [
        "CVE-2022-35255"
      ],
      "actor": {
        "username": "vdeturckheim",
        "cleared": false,
        "verified": false,
        "url": "/vdeturckheim",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18526497,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2022-09-26T08:17:16.668Z",
      "updated_at": "2022-09-26T08:17:16.668Z",
      "actor": {
        "username": "vdeturckheim",
        "cleared": false,
        "verified": false,
        "url": "/vdeturckheim",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "bnoordhuis",
        "url": "/bnoordhuis"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18526560,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-09-26T08:18:02.384Z",
      "updated_at": "2022-09-26T08:18:02.384Z",
      "first_to_agree": true,
      "actor": {
        "username": "vdeturckheim",
        "cleared": false,
        "verified": false,
        "url": "/vdeturckheim",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/161/010/6f383ac0f9296c13b5ac0d38741f0685dbace58c_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 18960634,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-10-26T08:18:11.468Z",
      "updated_at": "2022-10-26T08:18:11.468Z",
      "actor": {
        "url": "/nodejs",
        "ibb": true,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Node.js"
        }
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}