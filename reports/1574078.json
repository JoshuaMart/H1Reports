{
  "id": 1574078,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTc0MDc4",
  "url": "https://hackerone.com/reports/1574078",
  "title": "DNS rebinding in --inspect (again) via invalid IP addresses ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-05-18T05:48:02.126Z",
  "submitted_at": "2022-05-18T05:48:02.207Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "haxatron1",
    "url": "/haxatron1",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-32212"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-08-11T16:38:13.629Z",
  "bug_reporter_agreed_on_going_public_at": "2023-08-11T16:38:13.546Z",
  "team_member_agreed_on_going_public_at": "2023-08-11T15:32:52.361Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The IsAllowedHost check in https://github.com/nodejs/node/blob/fdf0a84e826d3a9ec0ce6f5a3f5adc967fe99408/src/inspector_socket.cc#L580 can easily be bypassed because IsIPAddress does not properly check if an IP address is invalid or not. When an invalid IPv4 address is provided (for instance 10.0.2.555 is provided), the browser will make a DNS requests to the DNS server, providing a vector for an attacker-controlled DNS server to perform a rebinding attack and hence access the JSON file containing the WebSocket file.\n\n## Steps To Reproduce:\nThe steps to reproduce is mostly the same as https://hackerone.com/reports/1069487, but replace localhost6 with 10.0.2.555, I am copying it here for reference.\n\n1. Victim runs node with --inspect option\n2. Victim visits attacker's webpage\n3. The attacker's webpage redirects to http://10.0.2.555:9229 \n4. 10.0.2.555 is not a valid IP address so the browser asks the malicious DNS server and gets <attacker's-IP> with a short TTL.\n5. Victim loads webpage http://10.0.2.555:9229 from <attacker's-IP>.\n6. The webpage http://10.0.2.555:9229 tries to load http://10.0.2.555:9229/json from attacker's server. \n7. Due to a short TTL, the DNS server will be soon asked again about an entry for “10.0.2.555”. This time, the DNS server responds “127.0.0.1”.\nThe http://10.0.2.555:9229 website (i.e., the one hosted on <attacker's IP>) will retrieve http://10.0.2.555:9229/json from 127.0.0.1, including webSocketDebuggerUrl. Now, the attacker knows the webSocketDebuggerUrl and can connect to is using WebSocket. Note that WebSocket is not restricted by same-origin-policy. By doing so, they can gain the privileges of the Node.js instance.\n8. In https://github.com/nodejs/node/blob/fdf0a84e826d3a9ec0ce6f5a3f5adc967fe99408/src/inspector_socket.cc#L164L175, the debugger does not recognise that 10.0.2.555 is not a valid IP address and so will allow disclosure of /json file.\n\nTo confirm this issue, I will just show two things (let me know if this is not enough):\nA) That when 10.0.2.555 is keyed into the browser (Firefox used), a DNS resolution request will be made by a browser to a DNS server, (thus, allowing the DNS rebinding vector to occur,\n1. Open Wireshark \n2. Add a redirector\n````\n<?php\n\nheader(\"Location: http://10.0.2.555:9229/json\");\n````\n3: In the browser visit the the redirector\n4. In Wireshark, see that DNS resolution request is being made for 10.0.2.555\n\nB) That when 10.0.2.555 is resolved, the browser will send a Host: 10.0.2.555 which the NodeJS debugger accepts and exposes the /json file.\n1. Modify /etc/hosts file\n````\n10.0.2.555      127.0.0.1\n````\n2. Visit the redirector in A) to get redirected to the /json file.\n\n## Impact: \nAttacker can gain access to the Node.js debugger, which can result in remote code execution.\n\n## References:\nhttps://hackerone.com/reports/1069487\nhttps://nodejs.org/en/docs/guides/debugging-getting-started/\n\n## Recommended Fix\nThe isIPAddress() check in https://github.com/nodejs/node/blob/fdf0a84e826d3a9ec0ce6f5a3f5adc967fe99408/src/inspector_socket.cc#L164L175 should be more stricter in validation.\n\n## Impact\n\nAttacker can gain access to the Node.js debugger, which can result in remote code execution.",
  "weakness": {
    "id": 59,
    "name": "OS Command Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2023-09-10T15:32:52.466Z",
  "allow_singular_disclosure_after": -1092053.690511866,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "zy9ard3",
    "freedfr0md3sire",
    "shivammusic",
    "abc123789",
    "testwlp",
    "shell3d",
    "ken0xc"
  ],
  "severity": {
    "rating": "high",
    "score": 7.1,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 16749501,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportTitleUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2022-05-18T05:49:07.308Z",
      "updated_at": "2022-05-18T05:49:07.308Z",
      "additional_data": {
        "old_title": "DNS rebinding in --inspect DNS (again) via invalid IP addresses ",
        "new_title": "DNS rebinding in --inspect (again) via invalid IP addresses "
      },
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16749537,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Just realised I specified an old branch, https://github.com/nodejs/node/blob/master/src/inspector_socket.cc#L164L175 is the vulnerable code in master branch",
      "automated_response": false,
      "created_at": "2022-05-18T05:57:38.773Z",
      "updated_at": "2022-05-18T05:57:38.773Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16749565,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Just realised I messed up the /etc/hosts file in B) of the reproduction step, should be:\n`````\n127.0.0.1       10.0.2.555     \n`````",
      "automated_response": false,
      "created_at": "2022-05-18T06:01:24.110Z",
      "updated_at": "2022-05-18T06:01:24.110Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16762317,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I have here a preliminary patch for the problem, which checks each octet and returns false when an octet > 255. (I am currently building node with this patch to see if it works)\n`````\ndiff --git a/src/inspector_socket.cc b/src/inspector_socket.cc                                                                                             \nindex 1650c3fe01..25f1a8d145 100644                                                                                                                        \n--- a/src/inspector_socket.cc                                                                                                                              \n+++ b/src/inspector_socket.cc                                                                                                                              \n@@ -165,12 +165,27 @@ static bool IsIPAddress(const std::string& host) {                                                                                   \n   if (host.length() >= 4 && host.front() == '[' && host.back() == ']')                                                                                    \n     return true;                                                                                                                                          \n   int quads = 0;                                                                                                                                          \n+  std::string octet = \"\";                                                                                                                                 \n   for (char c : host) {                                                                                                                                   \n-    if (c == '.')                                                                                                                                         \n+    if (c == '.') {                                                                                                                                       \n       quads++;                                                                                                                                            \n-    else if (!isdigit(c))                                                                                                                                 \n+      // check the octets                                                                                                                                 \n+      int int_octet = std::stoi(octet);                                                                                                                   \n+      if (int_octet > 255)                                                                                                                                \n+        return false;                                                                                                                                     \n+      octet = \"\";                                                                                                                                         \n+    }                                                                                                                                                     \n+    else if (isdigit(c))                                                                                                                                  \n+      octet += c;                                                                                                                                         \n+    else                                                                                                                                                  \n       return false;                                                                                                                                       \n   }                                                                                                                                                       \n+  // check the final octet                                                                                                                                \n+  int int_octet = std::stoi(octet);                                                                                                                       \n+  if (int_octet > 255)                                                                                                                                    \n+    return false;                                                                                                                                         \n+                                                                                                                                                          \n+  // check only 4 octets                                                                                                                                  \n   return quads == 3;                                                                                                                                      \n } \n`````\nThankfully in my testing malformed IPv6 addresses do not cause a resolution So only IPv4 need validation.",
      "automated_response": false,
      "created_at": "2022-05-18T11:11:41.613Z",
      "updated_at": "2022-05-18T11:11:41.613Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16763064,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Can confirm that the proposed patch fixes the problem for every octet.\n````    \n➜  ~ curl -H \"Host: 256.0.0.0\" http://127.0.0.1:9229/json\nWebSockets request was expected\n➜  ~ curl -H \"Host: 0.256.0.0\" http://127.0.0.1:9229/json\nWebSockets request was expected\n➜  ~ curl -H \"Host: 0.0.256.0\" http://127.0.0.1:9229/json\nWebSockets request was expected\n➜  ~ curl -H \"Host: 0.0.0.256\" http://127.0.0.1:9229/json\nWebSockets request was expected\n➜  ~ curl -H \"Host: 0.0.0.255\" http://127.0.0.1:9229/json\n[ {\n  \"description\": \"node.js instance\",\n  \"devtoolsFrontendUrl\": \"devtools://devtools/bundled/js_app.html?experiments=true&v8only=true&ws=0.0.0.255/368c9308-964b-432c-a399-27809dd23b32\",\n  \"devtoolsFrontendUrlCompat\": \"devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=0.0.0.255/368c9308-964b-432c-a399-27809dd23b32\",\n  \"faviconUrl\": \"https://nodejs.org/static/images/favicons/favicon.ico\",\n  \"id\": \"[ID]\",\n  \"title\": \"node[3531]\",\n  \"type\": \"node\",\n  \"url\": \"file://\",\n  \"webSocketDebuggerUrl\": \"ws://0.0.0.255/[ID]\"\n} ]\n````    \n",
      "automated_response": false,
      "created_at": "2022-05-18T11:46:54.294Z",
      "updated_at": "2022-05-18T11:46:54.294Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16764292,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Found an error with the patch, it will cause a DoS in std::stoi() if empty octet after '.' (ie. curl -H \"Host: 127.\" http://127.0.0.1:9229/json). Improved patch:\n````\ndiff --git a/src/inspector_socket.cc b/src/inspector_socket.cc\nindex 1650c3fe01..e726209fb8 100644\n--- a/src/inspector_socket.cc\n+++ b/src/inspector_socket.cc\n@@ -161,16 +161,35 @@ static std::string TrimPort(const std::string& host) {\n   return host;\n }\n \n+// check for invalid IPv4 octet > 255\n+static bool isInvalidOctet(const std::string& octet) {\n+  return (octet == \"\" || std::stoi(octet) > 255);\n+}\n+\n static bool IsIPAddress(const std::string& host) {\n   if (host.length() >= 4 && host.front() == '[' && host.back() == ']')\n     return true;\n   int quads = 0;\n+  std::string octet = \"\";\n   for (char c : host) {\n-    if (c == '.')\n+    if (c == '.') {\n       quads++;\n-    else if (!isdigit(c))\n+      // check the octets\n+      if (isInvalidOctet(octet))\n+        return false;\n+      octet = \"\";\n+    }\n+    else if (isdigit(c))\n+      octet += c;\n+    else\n       return false;\n   }\n+\n+  // check final octet\n+  if (isInvalidOctet(octet))\n+      return false;\n+\n+  // check only 4 octets\n   return quads == 3;\n }\n````",
      "automated_response": false,
      "created_at": "2022-05-18T12:39:54.258Z",
      "updated_at": "2022-05-18T12:39:54.258Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16769589,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi, @haxatron1. Thanks for the report. We're reviewing this and there is active discussion going on behind the scenes. More soon. Thanks for all the detailed information and your patience.",
      "automated_response": false,
      "created_at": "2022-05-18T20:59:59.535Z",
      "updated_at": "2022-05-18T20:59:59.535Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16780501,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": null,
      "automated_response": false,
      "created_at": "2022-05-19T14:09:00.304Z",
      "updated_at": "2022-05-19T14:09:00.304Z",
      "additional_data": {
        "old_severity": "High",
        "new_severity": "Low (2.0)",
        "old_severity_id": 1506475,
        "new_severity_id": 1508543
      },
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16780508,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2022-05-19T14:09:35.210Z",
      "updated_at": "2022-05-19T14:09:35.210Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16801248,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @trott thanks for that. But I have a question regarding the CVSS, why is it low only for confidentiality when this can achieve code execution as per the previous report - https://hackerone.com/reports/1069487, I think it should be High for Confidentiality, Integrity and Availability components. And why is the privileges required High when the attacker does not need any privileges to perform this attack?\n",
      "automated_response": false,
      "created_at": "2022-05-21T06:06:05.052Z",
      "updated_at": "2022-05-21T06:09:48.562Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805293,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "CVSS I originally based this on -https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H - 7.5, which matches the score for https://hackerone.com/reports/1069487 (CVE-2021-22884) and is what NVD and RedHat also assessed that vulnerability to be.",
      "automated_response": false,
      "created_at": "2022-05-21T14:56:11.386Z",
      "updated_at": "2022-05-21T14:56:11.386Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805581,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I assessed privileges required as \"High\" because the attacker needs to either control DNS resolution settings on the target machine or else control the DNS service that the target machine is configured to use. I believe the previous CVE is inflated. NVD and RedHat no doubt copied the CVE scores/settings we provided.",
      "automated_response": false,
      "created_at": "2022-05-21T16:10:46.266Z",
      "updated_at": "2022-05-21T16:10:46.266Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805642,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@trott Thanks, but it is also possible that the attacker can also spoof the DNS response as mentioned in the previous report (meaning that the attacker only needs to be able MITM the connection, as DNS is not protected by SSL/TLS), so I do not believe Privileges should be \"High\" but rather Attack Vector to \"Network\" and Attack Complexity to \"High\" to reflect a MITM attack\n\nAnd what about Confidentiality/Integrity/Availability, I don't think it makes sense that the Impact component is only Low confidentiality, considering that the impact of this is code execution.",
      "automated_response": false,
      "created_at": "2022-05-21T16:20:22.586Z",
      "updated_at": "2022-05-21T16:25:46.242Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805769,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": null,
      "automated_response": false,
      "created_at": "2022-05-21T16:50:37.924Z",
      "updated_at": "2022-05-21T16:50:37.924Z",
      "additional_data": {
        "old_severity": "Low (2.0)",
        "new_severity": "Low (3.1)",
        "old_severity_id": 1508543,
        "new_severity_id": 1510974
      },
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805822,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": null,
      "automated_response": false,
      "created_at": "2022-05-21T16:59:54.596Z",
      "updated_at": "2022-05-21T16:59:54.596Z",
      "additional_data": {
        "old_severity": "Low (3.1)",
        "new_severity": "High (7.5)",
        "old_severity_id": 1510974,
        "new_severity_id": 1510984
      },
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805837,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "I've restored the previous CVE calculator settings. In my opinion, the calculation loses a lot of context and nuance, but such is the way of these things.",
      "automated_response": false,
      "created_at": "2022-05-21T17:04:50.440Z",
      "updated_at": "2022-05-21T17:04:50.440Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805845,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": null,
      "automated_response": false,
      "created_at": "2022-05-21T17:06:50.348Z",
      "updated_at": "2022-05-21T17:06:50.348Z",
      "additional_data": {
        "old_severity": "High (7.5)",
        "new_severity": "High (7.1)",
        "old_severity_id": 1510984,
        "new_severity_id": 1510989
      },
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16805853,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "(Changed Availability to Low but I'm also not sure I want to split hairs on this, so I'm going to stop myself right here.)",
      "automated_response": false,
      "created_at": "2022-05-21T17:08:31.574Z",
      "updated_at": "2022-05-21T17:08:31.574Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16971064,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I found a problem with my proposed patch, if the octet is too large :\n\n(ie. `curl -H \"Host: 1111111111111111111111111111111111111111111.com\" http://localhost:9229`), \n\ncalling `stoi` can result in integer overflow, crashing  `node:inspector` / `node --inspect`\n\nThe solution to this is to just check that the octet is no more than 3 chars:\n````\nstatic bool isInvalidOctet(const std::string& octet) {\n  return (octet == \"\" || octet.length() > 3 || std::stoi(octet) > 255); \n}\n````\nFull diff:\n```````\ndiff --git a/src/inspector_socket.cc b/src/inspector_socket.cc\nindex 1650c3fe01..80ba6c928e 100644\n--- a/src/inspector_socket.cc\n+++ b/src/inspector_socket.cc\n@@ -161,16 +161,35 @@ static std::string TrimPort(const std::string& host) {\n   return host;\n }\n \n+// check for invalid IPv4 octet > 255\n+static bool isInvalidOctet(const std::string& octet) {\n+  return (octet == \"\" || octet.length() > 3 || std::stoi(octet) > 255); \n+}\n+\n static bool IsIPAddress(const std::string& host) {\n   if (host.length() >= 4 && host.front() == '[' && host.back() == ']')\n     return true;\n   int quads = 0;\n+  std::string octet = \"\";\n   for (char c : host) {\n-    if (c == '.')\n+    if (c == '.') {\n       quads++;\n-    else if (!isdigit(c))\n+      // check the octets\n+      if (isInvalidOctet(octet))\n+        return false;\n+      octet = \"\";\n+    }\n+    else if (isdigit(c))\n+      octet += c;\n+    else\n       return false;\n   }\n+\n+  // check final octet\n+  if (isInvalidOctet(octet))\n+      return false;\n+\n+  // check only 4 octets\n   return quads == 3;\n }\n```````",
      "automated_response": false,
      "created_at": "2022-06-02T13:06:24.697Z",
      "updated_at": "2022-06-02T13:06:24.697Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 16999651,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "The patch we're evaluating right now doesn't use `stoi` but thank you for following up!",
      "automated_response": false,
      "created_at": "2022-06-05T15:53:38.508Z",
      "updated_at": "2022-06-05T15:53:38.508Z",
      "actor": {
        "username": "trott",
        "cleared": false,
        "verified": false,
        "url": "/trott",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17150289,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@haxatron1  Soon as the fix is released, we'll create a blog post to announce the Security Release. Would you like to be credited on the announcement?\n\nIt will look like this:\n\n`Thank you to @haxatron1  for reporting this vulnerability.`",
      "automated_response": false,
      "created_at": "2022-06-15T15:23:23.963Z",
      "updated_at": "2022-06-15T15:23:23.963Z",
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17150320,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi, you can use this:\n\n`Thank you to Axel Chong for reporting this vulnerability.`\n\nThanks!",
      "automated_response": false,
      "created_at": "2022-06-15T15:26:08.149Z",
      "updated_at": "2022-06-15T15:26:08.149Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17210517,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-20T13:27:14.231Z",
      "updated_at": "2022-06-20T13:27:14.231Z",
      "cve_ids": [
        "CVE-2022-32212"
      ],
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17467098,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi, I just read the advisory notes for this vulnerability,  it LGTM, but I have a few minor changes I would like to suggest:\n\n\"an attacker-controlled DNS server\" => it should be \"an attacker-controlled DNS server or an MITM who can spoof the DNS responses\"\n\n\"hence access the JSON file containing the WebSocket file.\" => it should be \"hence connect to the WebSocket debugger and execute arbitrary code. This is a bypass of CVE-2021-22884.\" \n\nThanks!",
      "automated_response": false,
      "created_at": "2022-07-07T15:58:29.478Z",
      "updated_at": "2022-07-07T15:59:11.790Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17467654,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "This was released as part of our July 2022 security release: https://nodejs.org/en/blog/vulnerability/july-2022-security-releases/",
      "automated_response": false,
      "created_at": "2022-07-07T17:01:29.746Z",
      "updated_at": "2022-07-07T17:01:29.746Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "haxatron1",
        "url": "/haxatron1"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17467656,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-07T17:01:46.856Z",
      "updated_at": "2022-07-07T17:01:46.856Z",
      "first_to_agree": true,
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17468579,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@haxatron1 if you would like to make a change to the blog post, could you send a PR to https://github.com/nodejs/nodejs.org/blob/main/locale/en/blog/vulnerability/july-2022-security-releases.md? Thanks",
      "automated_response": false,
      "created_at": "2022-07-07T17:44:27.689Z",
      "updated_at": "2022-07-07T17:44:27.689Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17468770,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I have submitted a PR at https://github.com/nodejs/nodejs.org/pull/4707.\n\nThanks!",
      "automated_response": false,
      "created_at": "2022-07-07T18:01:36.100Z",
      "updated_at": "2022-07-07T18:01:36.100Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 17877641,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CancelledDisclosureRequest",
      "message": ".",
      "automated_response": false,
      "created_at": "2022-08-06T16:24:58.341Z",
      "updated_at": "2022-08-06T16:24:58.341Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 23273058,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-08-11T15:32:52.410Z",
      "updated_at": "2023-08-11T15:32:52.410Z",
      "first_to_agree": true,
      "actor": {
        "username": "rafaelgss",
        "cleared": false,
        "verified": false,
        "url": "/rafaelgss",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 23273651,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-08-11T16:38:13.599Z",
      "updated_at": "2023-08-11T16:38:13.599Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 23273652,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-08-11T16:38:13.700Z",
      "updated_at": "2023-08-11T16:38:13.700Z",
      "actor": {
        "username": "haxatron1",
        "cleared": false,
        "verified": false,
        "url": "/haxatron1",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}