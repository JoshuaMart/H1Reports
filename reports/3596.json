{
  "id": 3596,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNTk2",
  "url": "https://hackerone.com/reports/3596",
  "title": "OAuth access_token stealing in Phabricator",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2014-03-10T12:03:49.078Z",
  "submitted_at": "2014-03-10T12:03:49.078Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "krangbuster",
    "url": "/krangbuster",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/495/375adba2f29a55536eac05aedcef905aad42ff64_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 18,
    "url": "https://hackerone.com/phabricator",
    "handle": "phabricator",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Phabricator",
      "twitter_handle": "phabricator",
      "website": "http://phacility.com/phabricator/",
      "about": "Phabricator is a collection of open source web applications that help software companies build better software."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2014-04-11T14:23:15.622Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2014-03-12T14:34:14.479Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\r\n\r\nI found that an attacker is able to steal access_tokens of facebook users via Phabricator App (184510521580034).\r\n\r\nwhen users login to phabricator, they can choose to login via Facebook (https://secure.phabricator.com/login/) attaching pic, In this case an attacker is able to exploit this behavior to steal facebook access_tokens via phabricator app.\r\n\r\nFull Reproduce, Exploit:\r\n\r\n1. Create a blog on phabricator https://secure.phabricator.com/phame/blog/new/\r\nand provide a custom domain, in this case: files.nirgoldshlager.com\r\n\r\n2. send a malicious link to the victim: https://www.facebook.com/dialog/oauth?client_id=184510521580034&response_type=token&redirect_uri=https://secure.phabricator.com/phame/live/47/ , Click Continue\r\n\r\nwhen the victim will click continue, his access token will be send to my malicious server, saved in a log file under: http://files.nirgoldshlager.com\r\n\r\nPoC Video:\r\n\r\nhttps://drive.google.com/file/d/0B2-5ltUODX1LWHV6R3gxSFAwNzQ/edit?usp=sharing\r\n",
  "bounty_amount": "450.0",
  "formatted_bounty": "$450",
  "weakness": {
    "id": 53,
    "name": "Open Redirect"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 4207,
      "file_name": "loginviafacebook.jpg",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/004/207/b20351f991d93b5a0182edb6ac0b6ba090621240/loginviafacebook.jpg?response-content-disposition=attachment%3B%20filename%3D%22loginviafacebook.jpg%22%3B%20filename%2A%3DUTF-8%27%27loginviafacebook.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5PYIVGUM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T083057Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJHMEUCIQCxbKVFfwxvn2aMDuXVLe1QzQK3TCJpdEoanp1JuiXzCgIgLG404Fpz8ZdPE%2BVxOGyXkaneEtoAwPvWzebl2kOqeJoqsQUIKRADGgwwMTM2MTkyNzQ4NDkiDNffnc3v799tsQTD4CqOBWdOP%2BfWq5y3voATniH3LEZIyCon5M%2BAmx0Zm37wkxRFF%2FGkbHL3PJgkI%2B%2FW9YgllfnrqRSyjZfMg%2BTDyRA8F75E6xAHAd8tlxenAYYgPBc2Dhc10X5ihoe3kwtwp19Wx0D7ueWQP8WZaoCaIhS2IvaPsTRktad2Ktwh9UAa3S8SoD1%2FsOiixEVomorIRINMrfb5oKlJkxrMIJDUXq4Aw%2B0RvXG%2FtwAeVTAJ3yBLxBuNWln%2B7EAJYVeHBtYlSzj4tCTJYjTlXtd7lcxJ1sT4GXVQI%2BGcHuZmdCJA4oZf0z%2FZxRJEV6hSqncwVJnLfvHolXneHrT%2BXXcikChEhjO5HFl%2FkTXo2GYWiWUvGHcmJKjvLeJ8XHI%2FKv6b2mX75Z5yw1BdwAp1xl2CTJV2gO3CR9QODsl5mRi8ahtEHG7fNwG1p%2F9YuaVJYfpuP4Feni90I3zw3%2B125VtZ44CRAtbFs4unZlyKY3PMJXc57Rcxfe3zsUP4I5MnViqXBHRmG%2FbHd2X2JKW1302xUa5cpZgFTD8W9CqfDkw1e%2FGDSSftnTeY4oKYb3HcCiFq5dkdKw%2FzMlT%2BB1QBKKiuc%2FvFGwnfmKB4lNNJa%2FN8NwKD7AaLKAzbHNr4OZvnFLS9hi%2B1e2dRmU1sV3LJs6XFeaP1JhazIFAoyQKcFOFC02TgXs8J3H2cED2GpEGT4U%2BfRmNZajta8lvt1npglMNITLcS3AuAJHkqfC6ILLXZOhwBT4Mx2o%2BLQkmtdPnTGHBCv7xvHoJ5cLFwINIuuMxbBL6PgRjU2lsln6AwdKTaLJvpfjkSH9b%2Bce9wesNIXxAywsTFMlk1bbfxl54y5eYq5lS%2FTa1U%2BG9rL8OsVzxzJ5hrftXJkjDTqrqoBjqxARQvnFu2w0Y14KlU4OBcpKuBHgzD3VkvYuMrn2OwVRTK1BsM8eGnFJy3RMGIyvD3HxaV91qaLN6dJyWbWdFNjJUpVZZAZhSewXXr4iDQtR49zDh1kW%2BZ79UTOWlipVMpq05B2bgf%2BRpW5mvBV7A3o1UYWNTTyRAaEuMJGFPe%2BjNeLFL9KIMEBPbvxeLdMzzfZcVvy7s54UQ8C5hdT3QZ0MY3WW5ab3CN8d5Ntn1fJlIuoA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=02b17d7e05907f6fcd0036275e967382391ffda8c8a3eb45f7f27860bb75e83d",
      "file_size": 199867,
      "type": "image/jpeg",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2014-04-11T13:23:13.149Z",
  "allow_singular_disclosure_after": -298235264.38450783,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "fantam1",
    "japz",
    "shivammusic",
    "satyamdixit"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 14798,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "To clarify, the log file in question is logging HTTP referrers? I don't see a way to get the redirect to work with normal GET parameters. Am I misunderstanding that part of the attack?\n\nI have some offsite meetings this morning so I may not get a chance to fix this until later today.",
      "automated_response": false,
      "created_at": "2014-03-10T14:05:38.730Z",
      "updated_at": "2014-03-10T14:05:38.730Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14801,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi Evan,\n\nAbout the log script,  it's not via http referrers, it works with combination of javascript code with server side logger,\n\nBTW, \n\nthe data file ( leaked access tokens) stored in:\n\n http://files.nirgoldshlager.com/log.txt,\n\nSo if you want to reproduce:\n\nclick on the malicious link, + Continue:\n\nhttps://www.facebook.com/dialog/oauth?client_id=184510521580034&response_type=token&redirect_uri=https://secure.phabricator.com/phame/live/47/\n\nthen you will see your access_token in my log file under http://files.nirgoldshlager.com/log.txt\n\n\nBest,\n\nNir\n",
      "automated_response": false,
      "created_at": "2014-03-10T14:23:21.094Z",
      "updated_at": "2014-03-10T14:23:21.094Z",
      "actor": {
        "username": "krangbuster",
        "cleared": false,
        "verified": false,
        "url": "/krangbuster",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/495/375adba2f29a55536eac05aedcef905aad42ff64_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14805,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Ah, okay, I think I understand. I was confused at first because this does not work in Safari, which is my primary browser.\n\nSpecifically, what's happening is:\n\n  - The form with no \"action\" attribute preserves the anchor.\n  - Most browsers preserve the anchor after a 302 (Safari does not, but Firefox does).\n  - The attacker can read the anchor information once the victim arrives at his site.\n\nIs that right?\n\nI'm going to make these changes:\n\n  - Stop using implicit `action` on forms. It looks like `action=\"#\"` works as a safe alternative, although it would be nice to generate forms explicitly with the correct URI. We never expect the anchor to survive a POST.\n  - Get rid of the 302 to arbitrary external URIs after POST in Phame. I assumed this was safe because we CSRF it, but there's no reason this needs to exist.",
      "automated_response": false,
      "created_at": "2014-03-10T14:49:38.508Z",
      "updated_at": "2014-03-10T14:49:38.508Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14813,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I think this prevents the attack, although I'd like to do more to mitigate similar attacks before considering this resolved:\n\nhttps://secure.phabricator.com/D8481",
      "automated_response": false,
      "created_at": "2014-03-10T15:18:27.649Z",
      "updated_at": "2014-03-10T15:18:27.649Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14816,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Great,\n\nThis attack works with Chrome, Firefox, You use safari?, I'm guess you are a mac fun :),\n\nabout your solution, it should work, but I think the best solution is to make  a whitelist on phabricator facebook redirect_uri,\n\nthis could be done via https://developers.facebook.com/x/apps/184510521580034/settings/advanced/\n\nyou should see  Valid OAuth redirect URIs in advanced settings, just make sure you provide the right redirect_uri endpoint, after that, an attacker will not be able to manipulate the redirect_uri to a non endpoint url.",
      "automated_response": false,
      "created_at": "2014-03-10T15:23:27.959Z",
      "updated_at": "2014-03-10T15:23:27.959Z",
      "actor": {
        "username": "krangbuster",
        "cleared": false,
        "verified": false,
        "url": "/krangbuster",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/495/375adba2f29a55536eac05aedcef905aad42ff64_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14818,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Yeah -- we can do that ourselves (and I will), but I think there's no way we can get all installs of Phabricator to do that, and I think there's no way to check it with an API to see if they've done it or not, and not all OAuth2 providers have that option, so I still want to build more general-purpose mitigations against this.",
      "automated_response": false,
      "created_at": "2014-03-10T15:29:43.657Z",
      "updated_at": "2014-03-10T15:29:43.657Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 14819,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Sure, I understand,\n\n\nThanks Evan!",
      "automated_response": false,
      "created_at": "2014-03-10T15:33:32.043Z",
      "updated_at": "2014-03-10T15:33:32.043Z",
      "actor": {
        "username": "krangbuster",
        "cleared": false,
        "verified": false,
        "url": "/krangbuster",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/495/375adba2f29a55536eac05aedcef905aad42ff64_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 15948,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "This should be fixed in HEAD:\n\nhttps://secure.phabricator.com/rP5854de8c1c475913765cb0d6c836a0f692a146cc\n\nI've filed this to follow up with further mitigations:\n\nhttps://secure.phabricator.com/T4593",
      "automated_response": false,
      "created_at": "2014-03-12T14:23:13.237Z",
      "updated_at": "2014-03-12T14:23:13.237Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "krangbuster",
        "url": "/krangbuster"
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 15949,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "In setting an award amount, I'm considering these factors:\n\n  - This is a clever attack which exploited issues I was not previously aware of (e.g. anchors surviving POST, anchor reattachment after 302).\n  - Stealing OAuth tokens is severe and allows an attacker to do a lot of damage.\n\nHowever, the attack is mitigated by these factors:\n\n  - Primarily, the attacker must have access to create a Phame blog and set a custom domain. This requires they have an account, and that \"Beta\" applications be enabled on an install. You can not execute this attack blind against an install you don't already have significant access to.\n  - The victim must click through an unusual dialog.\n  - The attack only affects some authentication providers.\n  - The victim must be logged in, and either already connected or must click through an approval dialog.\n  - The attack works in most browsers, but not all of them.",
      "automated_response": false,
      "created_at": "2014-03-12T14:29:26.925Z",
      "updated_at": "2014-03-12T14:29:26.925Z",
      "actor": {
        "url": "/phabricator",
        "ibb": true,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "Phabricator"
        }
      },
      "bounty_amount": "450.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "phabricator",
      "collaborator": {
        "username": "krangbuster",
        "url": "/krangbuster"
      }
    },
    {
      "id": 15952,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "This can be disclosed at any time.",
      "automated_response": false,
      "created_at": "2014-03-12T14:34:14.493Z",
      "updated_at": "2014-03-12T14:34:14.493Z",
      "actor": {
        "username": "epriestley",
        "cleared": false,
        "verified": false,
        "url": "/epriestley",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/043/3ebca5250ea5abd54b49ccc9d69c636af4585b2e_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    },
    {
      "id": 28809,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2014-04-11T14:23:16.037Z",
      "updated_at": "2014-04-11T14:23:16.037Z",
      "actor": {
        "url": "/phabricator",
        "ibb": true,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/018/61446f7e6f0684c8c9f7c36c918b7ecd58183588_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "Phabricator"
        }
      },
      "genius_execution_id": null,
      "team_handle": "phabricator"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}