{
  "id": 1785378,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzg1Mzc4",
  "url": "https://hackerone.com/reports/1785378",
  "title": "Double evaluation in .bash_prompt of dotfiles allows a malicious repository to execute arbitrary commands",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-11-28T03:59:20.682Z",
  "submitted_at": "2022-11-28T04:31:43.121Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ryotak",
    "url": "/ryotak",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 162,
    "url": "https://hackerone.com/iandunn-projects",
    "handle": "iandunn-projects",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ian Dunn",
      "twitter_handle": "",
      "website": "",
      "about": "I'm a WordPress developer who maintains several small open source projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-12-01T04:00:35.979Z",
  "bug_reporter_agreed_on_going_public_at": "2022-12-01T04:00:35.911Z",
  "team_member_agreed_on_going_public_at": "2022-11-30T17:12:54.713Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nDue to the improper usage of the `PS1` environment variable in [`.bash_prompt` of dotfiles](https://github.com/iandunn/dotfiles/blob/16a432681077362f263cb926737ad5cca5df6307/.bash_prompt), a malicious repository can execute arbitrary commands when changed the current directory to it.\n\n## Description\nThe `PS1` environment variable of bash supports command substitutions. For example, setting `PS1` to `$(echo hello)` executes `echo hello` each time the prompt is displayed.\n\nBecause [`.bash_prompt` of dotfiles](https://github.com/iandunn/dotfiles/blob/16a432681077362f263cb926737ad5cca5df6307/.bash_prompt) uses the following code to display the VCS information, if any outputs of these commands contain command substitution syntaxes, it'll be evaluated while printing the prompt.\n\n[`.bash_prompt` line 264-266](https://github.com/iandunn/dotfiles/blob/16a432681077362f263cb926737ad5cca5df6307/.bash_prompt#L264-L266)\n``` bash\n\texport PS1=\"\\n${command_mark}${color_user_host}\\u${color_reset} @ ${color_user_host}$hostname${color_reset} in ${color_folder}\\w${color_reset} \\\n\t$(vcs_prompt) \\\n\t\\n> \"\n```\n\nSince `vcs_prompt` contains the information of Git or SVN, a malicious repository with a crafted branch name can execute arbitrary commands.\n\n[`.bash_prompt` line 241-254](https://github.com/iandunn/dotfiles/blob/16a432681077362f263cb926737ad5cca5df6307/.bash_prompt#L241-L254)\n``` bash\nfunction vcs_prompt {\n\tGIT_PROMPT=$(git_status)\n\tSVN_PROMPT=$(svn_status)\n\n\tif [[ -n $GIT_PROMPT ]]; then\n\t\techo -n \"\\n$GIT_PROMPT\"\n\n\t\tif [[ -n $SVN_PROMPT ]]; then\n\t\t\techo -n \", $SVN_PROMPT\"\n\t\tfi\n\telif [[ -n $SVN_PROMPT ]]; then\n\t\techo \"\\n$SVN_PROMPT\"\n\tfi\n}\n```\n\n## Steps to reproduce\n1. Set up dotfiles. (For the minimal setup, I used {F2051541} to set up `.bash_prompt`.)\n2. Create a git repository with a crafted name: `git init -b '$(touch${IFS}/tmp/pwned)' repo`\n3. Enter the repository: `cd repo`\n4. Confirm that `touch /tmp/pwned` is executed.\n\n{F2051546}\n\n## Impact\nAn attacker can execute arbitrary commands by tricking the victim into entering a malicious directory.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 2051541,
      "file_name": "setup.sh",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wympyptozt7rr81nzqjnqhlc1hb5?response-content-disposition=attachment%3B%20filename%3D%22setup.sh%22%3B%20filename%2A%3DUTF-8%27%27setup.sh&response-content-type=application%2Fx-sh&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065837Z&X-Amz-Expires=2584&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e14cdee06d85c5f37d094d2fd26cb58092760de2f41374584c8ba27859056439",
      "file_size": 187,
      "type": "application/x-sh",
      "moderated": null
    },
    {
      "id": 2051546,
      "file_name": "2022-11-28_13-27-48.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/a4mrqaj58mm4k6934lzis619xaid?response-content-disposition=attachment%3B%20filename%3D%222022-11-28_13-27-48.mp4%22%3B%20filename%2A%3DUTF-8%27%272022-11-28_13-27-48.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065837Z&X-Amz-Expires=2584&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cc64cafe2990230eb5b82c2b8bbbd0f967eb54d71c4ed1f2cbbe6bca24a93c20",
      "file_size": 386495,
      "type": "video/mp4",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2022-12-30T17:12:54.843Z",
  "allow_singular_disclosure_after": -23031942.48561864,
  "singular_disclosure_allowed": true,
  "vote_count": 44,
  "voters": [
    "nopurposeinlife",
    "jumpydata",
    "similardisaster",
    "hg_real",
    "foobar7",
    "zy9ard3",
    "polem4rch",
    "address_below0",
    "mehdisadir",
    "sudi",
    "and 34 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2358,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "GitHub repositories",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 19376759,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Hey, that's pretty clever, thanks! I was able to reproduce it and am looking into a fix.\n\nI trust the output of iTerm/git/svn themselves, but user input like branch names are definitely worth sanitizing. It doesn't look like GitHub sanitizes them during push/pull either. It's somewhat obvious from seeing the branch name, but that's also easy to overlook, and the impact is RCE.",
      "automated_response": false,
      "created_at": "2022-11-28T22:23:14.726Z",
      "updated_at": "2022-11-28T22:23:14.726Z",
      "actor": {
        "url": "/iandunn-projects",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "Ian Dunn"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "iandunn-projects",
      "collaborator": {
        "username": "ryotak",
        "url": "/ryotak"
      }
    },
    {
      "id": 19376764,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2022-11-28T22:24:30.808Z",
      "updated_at": "2022-11-28T22:24:30.808Z",
      "actor": {
        "username": "iandunn",
        "cleared": false,
        "verified": false,
        "url": "/iandunn",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19377208,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I've used `printf %q` to try and fix this, does that look like a secure solution to you? I've attached a full copy in {F2052905}\n\n```diff\ndiff --git a/.bash_prompt b/.bash_prompt\nindex 606df97..d47f077 100644\n--- a/.bash_prompt\n+++ b/.bash_prompt\n@@ -156,10 +156,12 @@ function git_status {\n                bisecting=\" (bisecting)\";\n        fi\n\n-       branch=\"${color_branch}${location}${color_reset}\"\n+       # Branch names are unsafe user input.\n+       branch=$(printf \"%s%q%s\" $color_branch $location $color_reset)\n@@ -201,7 +203,8 @@ function svn_status {\n        if [[ -z $branch ]]; then\n                branch=\"trunk\"\n        fi\n-       branch=\"${color_branch}$branch${color_reset}\"\n+       # Branch names are unsafe user input.\n+       branch=$(printf \"%s%q%s\" $color_branch $branch $color_reset)\n```\n\nThe other alternative I considered was something like `branch=\"{$branch//[^a-zA-Z0-9]}\"`, but escaping it with `printf` made it more obvious that the branch name contained a payload.",
      "automated_response": false,
      "created_at": "2022-11-29T01:03:33.783Z",
      "updated_at": "2022-11-29T01:03:33.783Z",
      "actor": {
        "username": "iandunn",
        "cleared": false,
        "verified": false,
        "url": "/iandunn",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 2052905,
          "filename": ".bash_prompt",
          "type": "application/x-sh",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fcla5hcyqpvhhdh3prdncg791uda?response-content-disposition=attachment%3B%20filename%3D%22.bash_prompt%22%3B%20filename%2A%3DUTF-8%27%27.bash_prompt&response-content-type=application%2Fx-sh&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065837Z&X-Amz-Expires=2584&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=09a7fa3abd2bd2e9a2554783132088de468eae2b9cda2ce8062d252124dbeaef"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19377357,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hello @iandunn,\nThank you for your response!\n\nActually, `printf %q` does not appropriately escape shell characters for bash prompts.\n\nSince bash prompts don't support `$''` syntax, it's still possible to execute commands by using a branch name like `あ$(touch${IFS}/tmp/pwned)` even after the patch: `git init -b 'あ$(touch${IFS}/tmp/pwned)' repo`\nThis is because `printf '%q' 'あ$(touch${IFS}/tmp/pwned)'` would output `$'\\343\\201\\202$(touch${IFS}/tmp/pwned)'` but as bash prompt doesn't support `$''` syntax, `$(touch${IFS}/tmp/pwned)` will be expanded.\n\n{F2052930}\n\n\n> The other alternative I considered was something like branch=\"{$branch//[^a-zA-Z0-9]}\", but escaping it with printf made it more obvious that the branch name contained a payload.\n\nYes, that should work fine. Another possible solution would be disabling `promptvars` in shell options: `shopt -u promptvars`, but it may have side effects if you use this behavior elsewhere.\n\nBest regards,\nRyotaK",
      "automated_response": false,
      "created_at": "2022-11-29T02:10:55.509Z",
      "updated_at": "2022-11-29T02:10:55.509Z",
      "actor": {
        "username": "ryotak",
        "cleared": false,
        "verified": false,
        "url": "/ryotak",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 2052930,
          "filename": "temp.png",
          "type": "image/png",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/l8c94sg4jan35hjx8cq38o2qadu1?response-content-disposition=attachment%3B%20filename%3D%22temp.png%22%3B%20filename%2A%3DUTF-8%27%27temp.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065837Z&X-Amz-Expires=2584&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cdc5722d4d5f1b2d34c8e268736393f89d2bc7befd2b6a145fbdc80df0148713"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19398326,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Ah, that's very helpful, thanks! Especially the recommendation to disable `promptvars`, since I didn't come across that in my searching. I decided to use that, and committed it in https://github.com/iandunn/dotfiles/commit/878a44438fafa7d0f738e40c0445170d7673487b\n\nThanks so much for the great report, and for finding a bypass in my initial solution!",
      "automated_response": false,
      "created_at": "2022-11-30T17:10:09.116Z",
      "updated_at": "2022-11-30T17:10:09.116Z",
      "actor": {
        "username": "iandunn",
        "cleared": false,
        "verified": false,
        "url": "/iandunn",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "ryotak",
        "url": "/ryotak"
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19398346,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-11-30T17:12:54.744Z",
      "updated_at": "2022-11-30T17:12:54.744Z",
      "first_to_agree": true,
      "actor": {
        "username": "iandunn",
        "cleared": false,
        "verified": false,
        "url": "/iandunn",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/974/01bc1d097002b7eff8eddba98990e094553b1eac_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19403371,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hello @iandunn,\n\nThat patch looks good. Thank you so much for fixing it!\n\nBest regards,\nRyotaK",
      "automated_response": false,
      "created_at": "2022-12-01T04:00:10.772Z",
      "updated_at": "2022-12-01T04:00:10.772Z",
      "actor": {
        "username": "ryotak",
        "cleared": false,
        "verified": false,
        "url": "/ryotak",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19403373,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-12-01T04:00:35.943Z",
      "updated_at": "2022-12-01T04:00:35.943Z",
      "actor": {
        "username": "ryotak",
        "cleared": false,
        "verified": false,
        "url": "/ryotak",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    },
    {
      "id": 19403374,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-12-01T04:00:36.049Z",
      "updated_at": "2022-12-01T04:00:36.049Z",
      "actor": {
        "username": "ryotak",
        "cleared": false,
        "verified": false,
        "url": "/ryotak",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "iandunn-projects"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}