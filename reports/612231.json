{
  "id": 612231,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MTIyMzE=",
  "url": "https://hackerone.com/reports/612231",
  "title": "Github Token Leaked publicly for https://github.com/mopub",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-06-13T18:05:27.945Z",
  "submitted_at": "2019-06-13T18:05:27.945Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "moro139",
    "url": "/moro139",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/eu9iQHCxE66FxVmqLsitgMCy/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 61,
    "url": "https://hackerone.com/x",
    "handle": "x",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "X (Formerly Twitter)",
      "twitter_handle": "XSecurity",
      "website": "https://x.com",
      "about": "X helps you create and share ideas and information instantly, without barriers."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-08-15T23:05:07.900Z",
  "bug_reporter_agreed_on_going_public_at": "2019-07-20T02:56:21.848Z",
  "team_member_agreed_on_going_public_at": "2019-08-15T23:05:07.836Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "##Description :\n\nGitHub is a truly awesome service but it is unwise to put any sensitive data in code that is hosted on GitHub and similar services as i was able to find github token indexed 4 days Ago by user\nDravya Nataraj \n\n##Issue & POC :\n\nYou can find the leak in this link :\nhttps://github.com/dravyan/Sample/blob/725ac6be32530197aa5cb29239d6d6fb5c3ef8f2/android-automate-release.sh\n> #!/usr/bin/env bash\n# ==================================================== #\n### Set up gitsubmodules to run gradle build ###\n#git submodule update --recursive --remote\n#git add submodules https://github.com/mopub/mopub-android-sdk.git\n#git add submodules https://github.com/mopub/mopub-android.git\n#git add submodules https://github.com/mopub/mopub-pso-tools.git\n#export FIREBASE_TOKEN=█████\necho \"running script testing\"\nUSER_NAME=dravyan\nAPI_KEY=████████\n# Networks this script checks for\nNETWORKS=( \n    AdColony\n    AdMob\n    AppLovin \n    Chartboost\n    FacebookAudienceNetwork\n    Flurry \n    IronSource\n    OnebyAOL\n    Tapjoy\n    UnityAds\n    Verizon\n    Vungle\n)\n### Function to get display name for Firebase update ###\nfunction get_display_name {\n    key=$1\n    out=$2\n    name=$key\n    case \"$key\" in\n        AdMob ) name=\"Google (AdMob)\";;\n        FacebookAudienceNetwork ) name=\"Facebook Audience Network\";;\n        Flurry ) name=\"Yahoo! Flurry\";;\n        IronSource ) name=\"ironSource\";;\n        OnebyAOL ) name=\"One by AOL\";;\n        UnityAds ) name=\"Unity Ads\";;\n    esac\n    eval \"$out='$name'\"\n}\n### Function to read Adapter version from AdapterConfiguration ###\nfunction read_networkAdapter_version\n{\n versionnumber=`grep -r \"project.version = \" ./$1/ | awk '{print $3}' | sed s/\\'//g | sed s/\\;//g`\n echo $versionnumber\n sdkverion=`echo $versionnumber | cut -d'.' -f 1-3`\n echo $sdkverion\n lowercaseselection=$(echo \"$1\" | tr '[:upper:]' '[:lower:]')\n mv ./libs/mopub-$lowercaseselection-adapters-*.aar ./libs/$lowercaseselection-$versionnumber.aar\n ### Generate pom file for adapter version ###\necho '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.mopub.mediation</groupId>\n  <artifactId>'\"$lowercaseselection\"'</artifactId>\n  <version>'\"$versionnumber\"'</version>\n  <packaging>aar</packaging>\n</project>' >> ./libs/sample.pom\n  ls ./libs\n  echo $lowercaseselection\n  echo $versionnumber\n  mv ./libs/*.pom ./libs/$lowercaseselection-$versionnumber.pom\n  ### CREATING TAG RELEASE IN GITHUB ###\n  commitId= git rev-parse HEAD\n  echo $commitId\n  tagname=\"$lowercaseselection-$versionnumber\"\n  echo $tagname\n  #git tag -a $lowercaseselection-$versionnumber -m \"new tag\" $commitId\n  #git push origin $versionnumber\n  ### Publish release in Github [TO_DO]\n  #curl -H \"Authorization: token ██████████\" --data '{\"tag_name\": \"$lowercaseselection-$versionnumber\",\"target_commitish\": \"$commitId\",\"name\": \"$versionnumber\",\"body\": \"Release of version $versionnumber. Refer https://github.com/mopub/mopub-android-mediation/blob/master/$1/CHANGELOG.md.\", \"draft\": false, \"prerelease\": false}' https://api.github.com/repos/mopub/mopub-android-mediation/releases\n  #curl -H \"Authorization: token ████████\" --data '{\"tag_name\": \"'\"$tagname\"'\",\"target_commitish\": \"'\"$commitId\"'\",\"name\": \"'\"$versionnumber\"'\",\"body\": \"Refer https://github.com/mopub/mopub-android-mediation/blob/master/$1/CHANGELOG.md.\",\"draft\": false,\"prerelease\": false}' https://api.github.com/repos/mopub/mopub-android-mediation/releases\n  ### RELEASING aar AND pom TO BINTRAY ###\n  ##curl -T <FILE.EXT> -udravyan:<API_KEY> https://api.bintray.com/content/mopub/mopub-android-mediation/<YOUR_COOL_PACKAGE_NAME>/<VERSION_NAME>/<FILE_TARGET_PATH>\n  #curl -T ./libs/$lowercaseselection-$versionnumber.aar -u$USER_NAME:$API_KEY https://api.bintray.com/content/mopub/mopub-android-mediation/com.mopub.mediation.$lowercaseselection/$versionnumber/com/mopub/mediation/$lowercaseselection/$versionnumber/\n  #curl -T ./libs/$lowercaseselection-$versionnumber.pom -u$USER_NAME:$API_KEY https://api.bintray.com/content/mopub/mopub-android-mediation/com.mopub.mediation.$lowercaseselection/$versionnumber/com/mopub/mediation/$lowercaseselection/$versionnumber/\n  if [ $? -eq 0 ]; then\n    ### UPDATE FIREBASE ###\n    echo \"Updating firebase JSON...\"\n    firebase_project=\"mopub-mediation\"\n    FIREBASE_TOKEN=\"██████████\"\n    get_display_name $i name\n    json_path=\"/releaseInfo/$name/Android/version\"\n    echo $i\n    echo $versionnumber\n    if [ -z \"$FIREBASE_TOKEN\" ]; then\n        print_red_line \"\\$FIREBASE_TOKEN environment variable not set!\"\n    else\n        #firebase database:set --confirm \"/releaseInfo/$name/Android/version/adapter/\" --data \"\\\"$versionnumber\\\"\" --project $firebase_project --token $FIREBASE_TOKEN\n        #firebase database:set --confirm \"/releaseInfo/$name/Android/version/sdk/\" --data \"\\\"$sdkverion\\\"\" --project $firebase_project --token $FIREBASE_TOKEN\n        if [[ $? -ne 0 ]]; then\n            echo \"ERROR: Failed to run firebase commands; please follow instructions at: https://firebase.google.com/docs/cli/\"\n        else\n            echo \"Done updating firebase JSON\"\n        fi\n      fi\nelse\n    echo Failed to Push to bintray. Please update bintray before updating Firebase.\nfi\n### CLEAN UP /LIBS FOLDER ###\n rm -r ./libs/*.pom\n}\nfor i in \"${NETWORKS[@]}\"\ndo\n    changed=$(git log --name-status -1 --oneline ./ | grep $i)\n    if [[ ! -z \"$changed\" ]]; then\n        echo \"$changed\"\n        read_networkAdapter_version  $i\n    fi  \ndone\n\n## Impact\n\nI didn't try anything with the token, and dont know what access it has, and i know that in order to login to https://github.com/mopub/mopub-android.git \nhttps://github.com/mopub/mopub-pso-tools.git",
  "weakness": {
    "id": 33,
    "name": "Cleartext Storage of Sensitive Information"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2019-08-19T02:56:21.944Z",
  "allow_singular_disclosure_after": -129271473.27890252,
  "singular_disclosure_allowed": true,
  "vote_count": 89,
  "voters": [
    "p1stachios",
    "sameerphad72",
    "stealthy",
    "spam404",
    "ali",
    "mik317",
    "psatoshi",
    "asad0x01_",
    "amad3u6",
    "sodium_",
    "and 79 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 1074,
    "asset_type": "URL",
    "asset_identifier": "mopub.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 5086430,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thank you for your report, @muhammad139.\n\nWe are evaluating the information you discovered and will get back to you when we have more information.\n\nThank you for thinking of Twitter security.",
      "automated_response": false,
      "created_at": "2019-06-13T22:19:39.858Z",
      "updated_at": "2019-06-13T22:19:39.858Z",
      "actor": {
        "username": "bugtriage-alex",
        "cleared": false,
        "verified": false,
        "url": "/bugtriage-alex",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5095513,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Thank you for your report. We believe it may be a valid security issue and will investigate it further. It could take some time to find and update the root cause for an issue, so we thank you for your patience.\n\nThank you for helping keep Twitter secure!",
      "automated_response": false,
      "created_at": "2019-06-14T15:50:16.607Z",
      "updated_at": "2019-06-14T15:50:16.607Z",
      "actor": {
        "username": "acamacho",
        "cleared": false,
        "verified": false,
        "url": "/acamacho",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5095841,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "We consider this issue to be fixed now. Can you please confirm?\n\nThank you for helping keep Twitter secure!",
      "automated_response": false,
      "created_at": "2019-06-14T16:14:15.931Z",
      "updated_at": "2019-06-14T16:14:15.931Z",
      "actor": {
        "username": "acamacho",
        "cleared": false,
        "verified": false,
        "url": "/acamacho",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "moro139",
        "url": "/moro139"
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5095904,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thanks for quick response . The issue has been fixed .i really didn't want to highlight this as high or critical as i prefer always in such findings not to escalate or try something that might impact target, so its up to you to asses the risk.",
      "automated_response": false,
      "created_at": "2019-06-14T16:32:47.951Z",
      "updated_at": "2019-06-14T16:41:57.943Z",
      "actor": {
        "username": "moro139",
        "cleared": false,
        "verified": false,
        "url": "/moro139",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/eu9iQHCxE66FxVmqLsitgMCy/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5219978,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "What about boundy?!!!",
      "automated_response": false,
      "created_at": "2019-06-29T08:51:03.976Z",
      "updated_at": "2019-06-29T08:51:03.976Z",
      "actor": {
        "username": "moro139",
        "cleared": false,
        "verified": false,
        "url": "/moro139",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/eu9iQHCxE66FxVmqLsitgMCy/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5302221,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "any \nupdate here !!!!!!!?",
      "automated_response": false,
      "created_at": "2019-07-11T19:21:29.902Z",
      "updated_at": "2019-07-11T19:21:29.902Z",
      "actor": {
        "username": "moro139",
        "cleared": false,
        "verified": false,
        "url": "/moro139",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/eu9iQHCxE66FxVmqLsitgMCy/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5336048,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@muhammad139 we'll review this in an upcoming payouts meeting, thank you for your patience. ",
      "automated_response": false,
      "created_at": "2019-07-16T17:09:09.480Z",
      "updated_at": "2019-07-16T17:09:09.480Z",
      "actor": {
        "username": "acamacho",
        "cleared": false,
        "verified": false,
        "url": "/acamacho",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5373816,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Thanks again for helping us keep Twitter safe and secure for our users!",
      "automated_response": false,
      "created_at": "2019-07-19T21:02:44.229Z",
      "updated_at": "2019-07-19T21:02:44.229Z",
      "actor": {
        "url": "/x",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "X (Formerly Twitter)"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "x",
      "collaborator": {
        "username": "moro139",
        "url": "/moro139"
      }
    },
    {
      "id": 5375372,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Thanks for the bounty!, public disclosure please?",
      "automated_response": false,
      "created_at": "2019-07-20T02:56:21.895Z",
      "updated_at": "2019-07-20T02:56:21.895Z",
      "first_to_agree": true,
      "actor": {
        "username": "moro139",
        "cleared": false,
        "verified": false,
        "url": "/moro139",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/eu9iQHCxE66FxVmqLsitgMCy/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5587382,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-08-15T23:05:07.861Z",
      "updated_at": "2019-08-15T23:05:07.861Z",
      "actor": {
        "username": "petrilli",
        "cleared": false,
        "verified": false,
        "url": "/petrilli",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/157/270/e17bf41da2f7dc28ecbf5c996c5a98efd95bd67c_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    },
    {
      "id": 5587383,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-08-15T23:05:07.925Z",
      "updated_at": "2019-08-15T23:05:07.925Z",
      "actor": {
        "username": "petrilli",
        "cleared": false,
        "verified": false,
        "url": "/petrilli",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/157/270/e17bf41da2f7dc28ecbf5c996c5a98efd95bd67c_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "x"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}