{
  "id": 885031,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODUwMzE=",
  "url": "https://hackerone.com/reports/885031",
  "title": "[commit-msg] RCE via insecure command formatting",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-05-28T19:08:57.534Z",
  "submitted_at": "2020-05-28T19:08:57.534Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mik317",
    "url": "/mik317",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-09-24T19:25:32.402Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-08-25T19:25:13.878Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report a `RCE` issue in the `commit-msg` module.\nIt allows to execute `arbitrary commands remotely inside the victim's PC`\n\n# Module\n**module name:** `commit-msg`\n**version:** `0.2.3`\n**npm page:** `https://www.npmjs.com/package/commit-msg`\n\n## Module Description\n> commit-msg is a customizable git commit message parser and validator written in Node.js. It validates a given string based on best practices and can be used as a git hook, command line tool and/or directly through the API.\n\n## Module Stats\n[103] downloads in the last week\n\n## Vulnerability Description\nThe issue occurs because a `user input` is formatted inside a `command` that will be executed without any check. The issue arises here: https://github.com/clns/node-commit-msg/blob/master/bin/validate#L128\n\n## Steps To Reproduce:\n1. Check there aren't files called `HACKED` \n1. Execute the following commands in another terminal:\n\n```bash\nnpm i commit-msg -g # Install affected module\ngit init # Init the current dir as *git*\necho \"test||reboot\" | commit-msg stdin # Your machine will be rebooted because `reboot` command is injected\nnode poc.js #  Run the PoC\n```\n1. Recheck the files: now `HACKED` has been created :)\n\n## Patch\n> Don't format `commands` using insecure `user's inputs` :)\n\n## Supporting Material/References:\n- [OPERATING SYSTEM VERSION]: Kali Linux\n- [NODEJS VERSION]: v12.16.1\n- [NPM VERSION]: 6.13.4\n\n# Wrap up\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N]\n\n## Impact\n\n`RCE` via command formatting on `commit-msg`",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2020-09-24T19:25:14.276Z",
  "allow_singular_disclosure_after": -94478284.46484865,
  "singular_disclosure_allowed": true,
  "vote_count": 0,
  "voters": [

  ],
  "severity": {
    "rating": "medium",
    "score": 6.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "high",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 8144082,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hi @mik317,\n\nAssuming a user has this module installed, how would an attacker craft the input so that `commit-msg` is ran with the attacker's input. While there may be an RCE possible, it's unclear how this can be achieved when a website is involved. \n\nShouldn't the website developer be responsible to escape any characters that are being sent to a shell command?\n\nI might be missing something here, so please let me know if you disagree and please don't hesitate to leave as many details as possible :)\n\nThanks, \n@ktistai",
      "automated_response": false,
      "created_at": "2020-05-29T11:38:47.548Z",
      "updated_at": "2020-05-29T11:38:47.548Z",
      "actor": {
        "username": "ktistai",
        "cleared": false,
        "verified": false,
        "url": "/ktistai",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8144685,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Hi @ktistai :),\nI know it's a bit confusing, however other issues like this have been previously accepted, like #846953 and #843632.\n\nThis is my view (let me know what you think about it, I'm always happy to see different views :)):\n\n* the node modules aren't used only for web, which means it could be really different the implementation logic (that's the interesting thing of modules: they're implementation indipendent)\n\n* the module it-self should avoid concatenating user supplied inputs, and instead opt for the safe usage of `execFile` function, which could delete every risk. Before being a security risk, it's also a bad pattern of programming software and could lead to unexcepted behaviors (like the RCE I shown). In my opinion, also the website/program developer should validate every input, however the module creator should avoid mistake which could lead to RCE (the malicious behavior is due to the creator of the module, not by developer who's using it: \nnot check input wouldn't anyway lead to RCE if it was used another module).\n\n* Note also the malicious program is inside the `/bin` directory of the module. This means this piece of code could be used in different places/ways and be implemented without be modified, leading to RCE without being called inside a specific tool/program.\n\nLet me know if you need any other info :)\n\nBest, \nMik",
      "automated_response": false,
      "created_at": "2020-05-29T12:29:50.339Z",
      "updated_at": "2020-05-29T12:29:50.339Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8179293,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @mik317,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@ktistai",
      "automated_response": false,
      "created_at": "2020-06-02T13:48:37.967Z",
      "updated_at": "2020-06-02T13:48:37.967Z",
      "actor": {
        "username": "ktistai",
        "cleared": false,
        "verified": false,
        "url": "/ktistai",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8179328,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2020-06-02T13:50:41.602Z",
      "updated_at": "2020-06-02T13:50:41.602Z",
      "additional_data": {
        "old_severity": "Critical",
        "new_severity": "Medium (6.4)",
        "old_severity_id": 734783,
        "new_severity_id": 738914
      },
      "actor": {
        "username": "ktistai",
        "cleared": false,
        "verified": false,
        "url": "/ktistai",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/322/520/01cd21dce301646646276fd9125cffd448fbffd6_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8179363,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thank you so much :)\n\nBest, Mik",
      "automated_response": false,
      "created_at": "2020-06-02T13:53:55.378Z",
      "updated_at": "2020-06-02T13:53:55.378Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9037485,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "So far the invitation to join this report was not accepted by the maintainer, Going to request the disclosure.",
      "automated_response": false,
      "created_at": "2020-08-25T19:25:03.871Z",
      "updated_at": "2020-08-25T19:25:03.871Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "mik317",
        "url": "/mik317"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9037491,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-08-25T19:25:13.909Z",
      "updated_at": "2020-08-25T19:25:13.909Z",
      "first_to_agree": true,
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9322389,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-09-24T19:25:34.636Z",
      "updated_at": "2020-09-24T19:25:34.636Z",
      "actor": {
        "url": "/nodejs-ecosystem",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Node.js third-party modules"
        }
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}