{
  "id": 185899,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODU4OTk=",
  "url": "https://hackerone.com/reports/185899",
  "title": "Invalid memory write caused by incorrect upper bound in array_copy",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-11-28T00:31:39.611Z",
  "submitted_at": "2016-11-28T00:31:39.611Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "haquaman",
    "url": "/haquaman",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-12-18T13:23:23.939Z",
  "bug_reporter_agreed_on_going_public_at": "2016-12-17T20:12:15.128Z",
  "team_member_agreed_on_going_public_at": "2016-12-18T13:23:23.903Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Ok, here is a weird one!\n\nIt only crashes in mruby, and can't be made to crash in mruby-engine as max memory possible to extend to is 256M which this requires more.\n\nThe file is:\n\n```\nvalues = [3,5,8]\ntest = [1,6]\nresults,= [1.2]\nvalues.each do |value|\n  case value\n    when *test\n      results << value\n    when *test*= results <<=value\n  end\nend\n```\n\n```\n$ ./dev/bin/mruby crash.rb\nSegmentation fault: 11\n```\n\n```\n$ lldb ./dev/bin/mruby crash.rb\n(lldb) target create \"./dev/bin/mruby\"\nCurrent executable set to './dev/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 93838 launched: './dev/bin/mruby' (x86_64)\nProcess 93838 stopped\n* thread #1: tid = 0x78effc5, 0x000000010000222d mruby`array_copy + 61, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x16f000000)\n    frame #0: 0x000000010000222d mruby`array_copy + 61\nmruby`array_copy:\n->  0x10000222d <+61>: movq   %rdx, (%rax)\n    0x100002230 <+64>: movq   0x8(%rcx), %rcx\n    0x100002234 <+68>: movq   %rcx, 0x8(%rax)\n    0x100002238 <+72>: movl   -0x18(%rbp), %eax\n(lldb) bt\n* thread #1: tid = 0x78effc5, 0x000000010000222d mruby`array_copy + 61, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x16f000000)\n  * frame #0: 0x000000010000222d mruby`array_copy + 61\n    frame #1: 0x0000000100004437 mruby`mrb_ary_times + 295\n    frame #2: 0x000000010003fc13 mruby`mrb_vm_exec + 6739\n    frame #3: 0x000000010003e1a7 mruby`mrb_vm_run + 135\n    frame #4: 0x0000000100046604 mruby`mrb_top_run + 100\n    frame #5: 0x0000000100071adf mruby`load_exec + 1183\n    frame #6: 0x0000000100071623 mruby`mrb_load_file_cxt + 67\n    frame #7: 0x00000001000017d8 mruby`main + 904\n    frame #8: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb) register read\nGeneral Purpose Registers:\n       rax = 0x000000016f000000\n       rbx = 0x0000000000000000\n       rcx = 0x000000010082a600\n       rdx = 0x0000000000000001\n       rdi = 0x000000016eff6800\n       rsi = 0x0000000100820e00\n       rbp = 0x00007fff5fbfc9d0\n       rsp = 0x00007fff5fbfc9d0\n        r8 = 0x0000000100110000\n        r9 = 0x0000000000000003\n       r10 = 0x0000000000000000\n       r11 = 0x0000000000000246\n       r12 = 0x0000000000000000\n       r13 = 0x0000000000000000\n       r14 = 0x0000000000000000\n       r15 = 0x0000000000000000\n       rip = 0x000000010000222d  mruby`array_copy + 61\n    rflags = 0x0000000000010206\n        cs = 0x000000000000002b\n        fs = 0x0000000000000000\n        gs = 0x0000000000000000\n\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n\n```\n\nA lldb process that we have symbols compiled in:\n\n```\n$ lldb ./mruby/bin/mruby crash.rb\n(lldb) target create \"./mruby/bin/mruby\"\nCurrent executable set to './mruby/bin/mruby' (x86_64).\n(lldb) settings set -- target.run-args  \"crash.rb\"\n(lldb) r\nProcess 30719 launched: './mruby/bin/mruby' (x86_64)\nProcess 30719 stopped\n* thread #1: tid = 0x78f948b, 0x0000000100001c5d mruby`array_copy(dst=0x000000016e7f6800, src=0x0000000101825c00, size=5184) + 61 at array.c:74, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x16e800000)\n    frame #0: 0x0000000100001c5d mruby`array_copy(dst=0x000000016e7f6800, src=0x0000000101825c00, size=5184) + 61 at array.c:74\n   71     mrb_int i;\n   72\n   73     for (i = 0; i < size; i++) {\n-> 74       dst[i] = src[i];\n   75     }\n   76   }\n   77\n(lldb) up\nframe #1: 0x0000000100003e67 mruby`mrb_ary_times(mrb=0x0000000100300390, self=mrb_value @ 0x00007fff5fbfca10) + 295 at array.c:350\n   347    a2 = ary_new_capa(mrb, a1->len * times);\n   348    ptr = a2->ptr;\n   349    while (times--) {\n-> 350      array_copy(ptr, a1->ptr, a1->len);\n   351      ptr += a1->len;\n   352      a2->len += a1->len;\n   353    }\n(lldb) p times\n(mrb_int) $0 = 51781\n(lldb) bt\n* thread #1: tid = 0x78f948b, 0x0000000100001c5d mruby`array_copy(dst=0x000000016e7f6800, src=0x0000000101825c00, size=5184) + 61 at array.c:74, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x16e800000)\n    frame #0: 0x0000000100001c5d mruby`array_copy(dst=0x000000016e7f6800, src=0x0000000101825c00, size=5184) + 61 at array.c:74\n  * frame #1: 0x0000000100003e67 mruby`mrb_ary_times(mrb=0x0000000100300390, self=mrb_value @ 0x00007fff5fbfca10) + 295 at array.c:350\n    frame #2: 0x000000010003f643 mruby`mrb_vm_exec(mrb=0x0000000100300390, proc=0x0000000101004df0, pc=0x000000010060f530) + 6739 at vm.c:1165\n    frame #3: 0x000000010003dbd7 mruby`mrb_vm_run(mrb=0x0000000100300390, proc=0x0000000101004e80, self=mrb_value @ 0x00007fff5fbfd6b0, stack_keep=0) + 135 at vm.c:766\n    frame #4: 0x0000000100046034 mruby`mrb_top_run(mrb=0x0000000100300390, proc=0x0000000101004e80, self=mrb_value @ 0x00007fff5fbfd720, stack_keep=0) + 100 at vm.c:2458\n    frame #5: 0x000000010007150f mruby`load_exec(mrb=0x0000000100300390, p=0x0000000101811420, c=0x000000010060ed90) + 1183 at parse.y:5747\n    frame #6: 0x0000000100071053 mruby`mrb_load_file_cxt(mrb=0x0000000100300390, f=0x00007fff7cda6050, c=0x000000010060ed90) + 67 at parse.y:5756\n    frame #7: 0x0000000100001208 mruby`main(argc=2, argv=0x00007fff5fbfdb40) + 904 at mruby.c:226\n    frame #8: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n(lldb) q\nQuitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n\n```\n\nSo this is showing that we are trying to write to `0x16e800000`, which is within the bounds of the allocation. I added the following patch temporarily to further debug:\n\n```\ndiff --git a/src/array.c b/src/array.c\nindex 106353c..a880c61 100644\n--- a/src/array.c\n+++ b/src/array.c\n@@ -346,6 +346,7 @@ mrb_ary_times(mrb_state *mrb, mrb_value self)\n   }\n   a2 = ary_new_capa(mrb, a1->len * times);\n   ptr = a2->ptr;\n+  printf(\"ptr = %p, ptr + len*times = %p\\n\", ptr, ptr + a1->len * times);\n   while (times--) {\n     array_copy(ptr, a1->ptr, a1->len);\n     ptr += a1->len;\n\n```\n\nwhich gives the output of `ptr = 0x106aee000, ptr + len*times = 0x2732ee000` just before the segfault, which clearly shows that the allocation includes the address it is failing on.\n\nSo here is where I get lost, as I was confused why realloc didn't fail when it couldn't allocate the memory... BUT I figured out what was wrong. When checking possible size, we are using the `ARY_MAX_SIZE` macro, which is set to either `SIZE_MAX / sizeof(mrb_value)` or `MRB_INT_MAX`, whichever is smallest. Now you can see here that one divides by the size of `mrb_value`, and one doesn't. On my system (64bit), the MRB_INT_MAX is smaller, so it is using that. I suggest the following patch to fix this, by dividing that by the size of `mrb_value` as well. \n\n```\ndiff --git a/src/array.c b/src/array.c\nindex 106353c..ed2b346 100644\n--- a/src/array.c\n+++ b/src/array.c\n@@ -14,7 +14,8 @@\n #define ARY_DEFAULT_LEN   4\n #define ARY_SHRINK_RATIO  5 /* must be larger than 2 */\n #define ARY_C_MAX_SIZE (SIZE_MAX / sizeof(mrb_value))\n-#define ARY_MAX_SIZE ((ARY_C_MAX_SIZE < (size_t)MRB_INT_MAX) ? (mrb_int)ARY_C_MAX_SIZE : MRB_INT_MAX-1)\n+#define ARY_INT_MAX_SIZE ((size_t)MRB_INT_MAX / sizeof(mrb_value))\n+#define ARY_MAX_SIZE ((ARY_C_MAX_SIZE < ARY_INT_MAX_SIZE) ? (mrb_int)ARY_C_MAX_SIZE : (mrb_int)ARY_INT_MAX_SIZE)\n \n static struct RArray*\n ary_new_capa(mrb_state *mrb, mrb_int capa)\n```\n\nApplying this patch no longer crashes, and instead complains that the array size is too big.\n\n```\ntrace:\n        [0] crash.rb:8:in Object.call\n        [1] /Users/<snip>/mruby-engine/mruby/mrblib/array.rb:17:in Array.each\n        [2] crash.rb:4\ncrash.rb:8: array size too big (ArgumentError)\n```\n\nCheers,\n\nHugh",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2017-01-16T20:12:15.170Z",
  "allow_singular_disclosure_after": -210859173.4097916,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "eveeez",
    "ymy_frontegg",
    "c1231665",
    "japz",
    "spetr0x",
    "xcom"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 1322087,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Crashfile and patch.",
      "automated_response": false,
      "created_at": "2016-11-28T00:33:17.045Z",
      "updated_at": "2016-11-28T00:33:17.045Z",
      "actor": {
        "username": "haquaman",
        "cleared": false,
        "verified": false,
        "url": "/haquaman",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 137671,
          "filename": "crash-185899.rb",
          "type": "text/plain",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/137/671/54dc9398196f5a877c535e32cc267dbc5ee65a7b/crash-185899.rb?response-content-disposition=attachment%3B%20filename%3D%22crash-185899.rb%22%3B%20filename%2A%3DUTF-8%27%27crash-185899.rb&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6MB2MFGG%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T081148Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJIMEYCIQCYIr2SSYJfi35%2Bx%2Fejzst0Y9ig0v%2FJscMh9NmdM4t5VAIhAM3tVHHjt2e0sz7iLl%2BDuXOX6%2B7Qkvgs1KealcH7ElMXKrIFCCkQAxoMMDEzNjE5Mjc0ODQ5IgxubweTaMPp5L8Q1YQqjwX98aLIa%2F1BpdVLQC%2BToIBwbGklZ8ygTNCI4x1qYQEmOGsQ1%2F6p4MCPMLXSqoXVF5QxpRt%2BdZrK%2FNcRu%2FY3QoE9gFJoqRHKBQN0hea7VJkz7uo3Rwjv0%2Bs1TjLNvF9Gx9DxVw5gmaNJzFBUsDj05h8b86dmkhqjUzC21gXGs9t4qXslxrGTOenOwfga0eb8fEHnz%2FUG0yD%2FjVQklap45v4C30R4WSycoTBHd2IKfDAZJaqt3smArxbtWItscCWCfFJ5YbB9hQ02lZMGvLB8srO38zC0kWDBR3RWPsI8%2FCT9AQl3xDcTmEbRo8%2BEfRAGkXLHOo5AKqatyHEmPm882mSsghu%2Brspdz%2FeqOhEpYUj4ySBMH0b17ZliROXJKxLzh%2BCpk4fUxbvq89yWnq1oE%2FG%2BGZ8LqH%2BHdDoUgMjnt03ecbuj8wAqebD0M9EeKqj1vXVd7ZWocJ%2FV6oYrm7S7UQivyKhDfuckG4YQxqwGm504IsXFkkTNFI0%2FbAlQyc8oZWIdoVgeThWvi6pw0uZ7M%2BmXEBvYfmy7YzbRIQolLeZ2Ib2tXdc%2Bn5HFgml1zzqu2ZZ8UvtnGce7z5fSnCBmszEnO8llVSoINOleTxGjyvKpO7VdXBdZ6vHaJIqLP4SNZcKEx5MZL7DunikcKcJc1Dh%2BeVNTGBTEwRQo2kmUtWbkmUUiASlDd8HgSnAP4RZOLdiDukVkx7gl6gOh42A5qWddn32TVRG2IDpeFfTYENewkfdTm7VCYmxkxmsP3Y%2Fcw%2BNkYV5PmiGgPIv2Zg9PDt27P3dzVbO0BkrT2UairLaxhj6VzUa%2BsdGMoet2DUfQzKVnGNHKxUFEljtFY%2FFiJHinwQ9Y75x2c9j9UzL1wI6TMI2luqgGOrABYyeNRUxeluFl7y58tZIFLbCliCc92oq3AvL8gskghuI3JnKg7R1ezYwY7GVa14ik6vEtnhisXGNuJh6mNjwDpIIr2%2BnDJR4O60ugIm%2B2U5%2B3g%2BQpzkDorZygbT57TjRGr122tik3dcMk17NAyWA%2FDaZNLlJwiU%2BS%2FxyTsJLLALvI9zlCoPT7U9wokT6nPEdV1VKFKSAm9jewkYUEeI%2FFWCVu2DqEd9C51abS8Y6I8lw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b414345970215d754ac0099ff1c90bd4a653467b323f96c7390c7706f5646bc6"
        },
        {
          "id": 137670,
          "filename": "bug-185899.patch",
          "type": "text/x-diff",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/137/670/20a0358271996ee1ee49bdd140b42c77a129df6f/bug-185899.patch?response-content-disposition=attachment%3B%20filename%3D%22bug-185899.patch%22%3B%20filename%2A%3DUTF-8%27%27bug-185899.patch&response-content-type=text%2Fx-diff&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ6MB2MFGG%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T081148Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJIMEYCIQCYIr2SSYJfi35%2Bx%2Fejzst0Y9ig0v%2FJscMh9NmdM4t5VAIhAM3tVHHjt2e0sz7iLl%2BDuXOX6%2B7Qkvgs1KealcH7ElMXKrIFCCkQAxoMMDEzNjE5Mjc0ODQ5IgxubweTaMPp5L8Q1YQqjwX98aLIa%2F1BpdVLQC%2BToIBwbGklZ8ygTNCI4x1qYQEmOGsQ1%2F6p4MCPMLXSqoXVF5QxpRt%2BdZrK%2FNcRu%2FY3QoE9gFJoqRHKBQN0hea7VJkz7uo3Rwjv0%2Bs1TjLNvF9Gx9DxVw5gmaNJzFBUsDj05h8b86dmkhqjUzC21gXGs9t4qXslxrGTOenOwfga0eb8fEHnz%2FUG0yD%2FjVQklap45v4C30R4WSycoTBHd2IKfDAZJaqt3smArxbtWItscCWCfFJ5YbB9hQ02lZMGvLB8srO38zC0kWDBR3RWPsI8%2FCT9AQl3xDcTmEbRo8%2BEfRAGkXLHOo5AKqatyHEmPm882mSsghu%2Brspdz%2FeqOhEpYUj4ySBMH0b17ZliROXJKxLzh%2BCpk4fUxbvq89yWnq1oE%2FG%2BGZ8LqH%2BHdDoUgMjnt03ecbuj8wAqebD0M9EeKqj1vXVd7ZWocJ%2FV6oYrm7S7UQivyKhDfuckG4YQxqwGm504IsXFkkTNFI0%2FbAlQyc8oZWIdoVgeThWvi6pw0uZ7M%2BmXEBvYfmy7YzbRIQolLeZ2Ib2tXdc%2Bn5HFgml1zzqu2ZZ8UvtnGce7z5fSnCBmszEnO8llVSoINOleTxGjyvKpO7VdXBdZ6vHaJIqLP4SNZcKEx5MZL7DunikcKcJc1Dh%2BeVNTGBTEwRQo2kmUtWbkmUUiASlDd8HgSnAP4RZOLdiDukVkx7gl6gOh42A5qWddn32TVRG2IDpeFfTYENewkfdTm7VCYmxkxmsP3Y%2Fcw%2BNkYV5PmiGgPIv2Zg9PDt27P3dzVbO0BkrT2UairLaxhj6VzUa%2BsdGMoet2DUfQzKVnGNHKxUFEljtFY%2FFiJHinwQ9Y75x2c9j9UzL1wI6TMI2luqgGOrABYyeNRUxeluFl7y58tZIFLbCliCc92oq3AvL8gskghuI3JnKg7R1ezYwY7GVa14ik6vEtnhisXGNuJh6mNjwDpIIr2%2BnDJR4O60ugIm%2B2U5%2B3g%2BQpzkDorZygbT57TjRGr122tik3dcMk17NAyWA%2FDaZNLlJwiU%2BS%2FxyTsJLLALvI9zlCoPT7U9wokT6nPEdV1VKFKSAm9jewkYUEeI%2FFWCVu2DqEd9C51abS8Y6I8lw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=470a83f2b05b82361c3c1adcc33af7b4f6121ff010b0a152a2029aab5d5f1b93"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1326528,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2016-11-29T15:42:18.886Z",
      "updated_at": "2016-11-29T15:42:18.886Z",
      "additional_data": {
        "old_severity": null,
        "new_severity": "Low",
        "old_severity_id": null,
        "new_severity_id": 10132
      },
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1326556,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hi @haquaman, and thanks for your report! It turns out that this issue does not affect mruby-engine because we build it with 64-bit integers:\n\nhttps://github.com/Shopify/mruby-engine/blob/53591f75fcfcddef30900820023c1a243b3d3240/ext/mruby_engine/flag_helper.rb#L22\n\nHowever, we would like to get bugs in MRuby fixed even if they don't currently affect mruby-engine, so we've submitted a patch: https://github.com/mruby/mruby/pull/3304",
      "automated_response": false,
      "created_at": "2016-11-29T15:48:37.990Z",
      "updated_at": "2016-11-29T15:48:37.990Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1328127,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi,\n\nNot sure that patch is quite correct, though it doesn't segfault for me anymore, but instead just runs forever (most likely allocating memory). That second check would be the only thing to take advantage of the type change, so changing the type would just change what is sent to realloc, and doesn't look like that is ever checked for bounds after that point.\n\nI really think the important part to change here is the test against ARY_MAX_SIZE, which would be incorrect in same cases, as that check is used in other places, like `ary_expand_capa`, and indirectly in `mrb_ary_plus` and `mrb_ary_times` (both of which just end up calling `ara_new_capa`). I'm sure that I could find a case that would affect `ary_expand_capa`, potentially with `mrb_ary_resize`, after this current patch is applied.\n\nHope that helps.\n\nCheers,\n\nHugh",
      "automated_response": false,
      "created_at": "2016-11-29T23:58:05.543Z",
      "updated_at": "2016-11-29T23:58:05.543Z",
      "actor": {
        "username": "haquaman",
        "cleared": false,
        "verified": false,
        "url": "/haquaman",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1329944,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@haquaman It seems to me that the check against `MRB_INT_MAX` is only there because the array is indexed by an `mrb_int`, not because the allocated memory size needs to be less than `MRB_INT_MAX`.\n\nMost of the other malloc / realloc calls are already using a `size_t` but I did just notice that this one is using an `mrb_int`, so it likely needs to be patched: https://github.com/mruby/mruby/blob/8461a31cb491f272524d14a9e54fcc9fae7a22c1/src/array.c#L124-L128\n\nI'll check into that and open a second pull request if appropriate.",
      "automated_response": false,
      "created_at": "2016-11-30T15:21:45.799Z",
      "updated_at": "2016-11-30T15:21:45.799Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1329956,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Oops, wrong lines. I meant to point here: https://github.com/mruby/mruby/blob/8461a31cb491f272524d14a9e54fcc9fae7a22c1/src/array.c#L121-L125",
      "automated_response": false,
      "created_at": "2016-11-30T15:23:33.135Z",
      "updated_at": "2016-11-30T15:23:33.135Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1330971,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "This PR covers that bug, plus another overflow: https://github.com/mruby/mruby/pull/3309",
      "automated_response": false,
      "created_at": "2016-11-30T19:31:29.016Z",
      "updated_at": "2016-11-30T19:31:29.016Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1331008,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Cool, will test that against a crash i just found yesterday against concat, may be that",
      "automated_response": false,
      "created_at": "2016-11-30T19:38:29.800Z",
      "updated_at": "2016-11-30T19:38:29.800Z",
      "actor": {
        "username": "haquaman",
        "cleared": false,
        "verified": false,
        "url": "/haquaman",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1348961,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hi again. The integer overflow issues have now been resolved upstream. Since the issues never affected Shopify it might not be eligible for a bounty. We'll get back to you once we make a final decision.",
      "automated_response": false,
      "created_at": "2016-12-07T21:54:04.513Z",
      "updated_at": "2016-12-07T21:54:04.513Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "haquaman",
        "url": "/haquaman"
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1370104,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Thanks for helping improve the security of Shopify Scripts and the mruby project!",
      "automated_response": false,
      "created_at": "2016-12-16T20:07:43.803Z",
      "updated_at": "2016-12-16T20:07:43.803Z",
      "actor": {
        "url": "/shopify-scripts",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "shopify-scripts"
        }
      },
      "bounty_amount": "1000.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "shopify-scripts",
      "collaborator": {
        "username": "haquaman",
        "url": "/haquaman"
      }
    },
    {
      "id": 1371662,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Thanks for the bounty! Disclose?",
      "automated_response": false,
      "created_at": "2016-12-17T20:12:15.146Z",
      "updated_at": "2016-12-17T20:12:15.146Z",
      "first_to_agree": true,
      "actor": {
        "username": "haquaman",
        "cleared": false,
        "verified": false,
        "url": "/haquaman",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1372522,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2016-12-18T13:23:23.921Z",
      "updated_at": "2016-12-18T13:23:23.921Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    },
    {
      "id": 1372523,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2016-12-18T13:23:23.955Z",
      "updated_at": "2016-12-18T13:23:23.955Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify-scripts"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}