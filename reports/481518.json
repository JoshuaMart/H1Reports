{
  "id": 481518,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80ODE1MTg=",
  "url": "https://hackerone.com/reports/481518",
  "title": "Bypass GraphQL rate limit by abusing negative cost queries",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-01-17T16:51:07.923Z",
  "submitted_at": "2019-01-17T16:51:07.923Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "emitrani",
    "url": "/emitrani",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/bbbf913458c48565d99f975f7ab9fc18ad1e989aa4f8811c1209ed725333d1ec"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-01-24T15:29:24.263Z",
  "bug_reporter_agreed_on_going_public_at": "2019-01-24T15:25:50.147Z",
  "team_member_agreed_on_going_public_at": "2019-01-24T15:29:24.068Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi security team,\n\nWhile looking into the graphql app I noticed an interesting implementation where each app has a bucket of query cost they are allowed to used in a given time with a certain refresh rate associated with it.\n\nThe details can be found at https://help.shopify.com/en/api/graphql-admin-api/call-limit\n\nNow Using the app I noticed by calling something like `first(-100)` will give you a negative cost \n{F408086}\n\nThis doesn't give you more than the maximum amount however you can deplete your resources down to 50 and then use a negative query to fill it back up to a maximum of 1000 to keep querying indefinitely.\n\nIn order to reproduce I used a high cost query like:\n```\n{\n  appInstallations(first: 10) {\n    edges {\n      node {\n        id\n        uninstallUrl\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        accessScopes {\n          description\n          handle\n        }\n        launchUrl\n        app {\n          pricingDetailsSummary\n          apiKey\n          banner {\n            altText\n            metafields(first: 2) {\n              edges {\n                node {\n                  description\n                  value\n                  namespace\n                  id\n                }\n              }\n            }\n          }\n          handle\n          features\n          pricingDetails\n          published\n          feedback {\n            messages {\n              message\n            }\n            link {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```\nAnd hit sent 10-15 times at https://emitrani.myshopify.com/admin/apps/shopify-graphiql-app\n\nAfter that change one of the `first` parameters into `(first: -1000)` and try a regular query again and you will see it succeeds as the pool will be back up to full.\n\n## Impact\n\nIt is possible to leverage the logic error to bypass GraphQL rate limiting.\n\nBest,\nEray",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 408086,
      "file_name": "Screen_Shot_2019-01-17_at_11.24.35_AM.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/408/086/60f58eb7776d0d0ab1acb6081296d517815f01d1/Screen_Shot_2019-01-17_at_11.24.35_AM.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-01-17_at_11.24.35_AM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-01-17_at_11.24.35_AM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRWDIYOMA%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T074551Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEC8aCXVzLXdlc3QtMiJHMEUCIFNLdnPGtLwKMqDt0NQfrZo0FnfieCdt70b8x7mZltnYAiEAvoj8eBF%2Fz9RmxiwioQTjaAkY5y8glP7YJHIdVEiSRjIqsgUIKBADGgwwMTM2MTkyNzQ4NDkiDKwmuAj4%2Be1s5lbylSqPBcomyuxhildk0NUANV3%2BftlYYJCWX1M%2B1xqa23Q06%2By7YS%2BQATcLYhjMRKLHIGZfd3bianhW%2FgdFm4gpQAmwDHRw2igbV1zSavkNvXqacnFdw4Oln9SHRd2e4zuwk%2F2GviKwn1nZunhhdOuu6g7A2DA%2FQefyAlyQYpy%2FHRGl7J9kIPlFGlBK9CAul0kzKyTjlygr3Hz7DB5F6X4FcS71gvzmFC%2Fa6bf1tdfq46kICi9nBXV8Yep%2FEmkoi%2FkPVN6jpqZHrrqGL%2BeKOCEw6yXkZefklvRs%2Bmud%2BPdLs6D35uN9GpF0h2lyRl7mI1tGYSVdAxrxhb%2FnLZ%2BBbcvE%2FzPbIbOkYt%2F4kzBjPA33r7a6gRZo6xBI%2BqcHTUEoZlsC%2FePoA0bzI%2BY%2B9Kn7r266PdCrFtOI0TtLDtrt1a%2FsYB7r39ZReNeBUZjFy71DofxHhuMplWoZ%2B5suYOSkCpnX8ox%2FexG03tPH%2B%2BYi%2B7JKgMNo8Ywg0LUY4FIgqUOY3m9G4vsQ2yNVvhHzc1zFQ%2BaZDinuNqUJycV22%2Bal4yI7Vu8zRPT0XS8nU9mRxPyMOxBhqiEpipRhHvEk6ruVgSYpVrhEqZHRnwv%2FiS2CGZuiFnzVyfzzNc0a1K3NA%2Bqp8X%2FGc2IrCqLgJiIar1EgInaI6d3yXHytJb5boQ1Ym5HsML5oSphvP1hBCFvgtrkpt3teC9sz%2F02EwDEGzubXTtTxqnHBOiqeNpfNEReBvGYlciW1L%2FxLQxgqD5RpQ5CUBnf67bJivw%2BtoZ%2BpV3UvOdvkG99R3Yb6KV5k2Ly3LruRvseHIOA2KILhuT0Arnm9FUq1BvuB593ehUm8src6x4P2nT6wjhA9E2kekyi7othxiuSueSwwyp66qAY6sQGfl2fsTY6VWTPrJHQD%2BPDh1xgsgnaytGIcrwK1OGEf8WVcLpw6bEJ6BKLFS7l9GZDwFvjz7J48x%2Bl7YfFRkEZXRmoO3ak0duYeBuy3U2I6DbXdUZZIWlnrcVoExjgWQHiADxJVCKngMqQP1GNwrY9M5Of5s5Z3zUQwD3EqxVcljRFvNHznFkHj8b2eCVcdpPMI6JyXX4H9nyjUW4XvHJwg%2F0AQay6G%2BksUHKVQvEI2UA4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=db01ac1ca62cfb83171087c8adbee0ec1838bfcdf8b2f6cb5b72e0f76bd332a1",
      "file_size": 251590,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 20,
  "voters": [
    "drsniper",
    "foobar7",
    "kapytein",
    "sameerphad72",
    "ali",
    "dhakal_ananda",
    "0xc0ffee",
    "savitar0x01",
    "eveeez",
    "lordjerry0x01",
    "and 10 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 413,
    "asset_type": "URL",
    "asset_identifier": "your-store.myshopify.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 3994274,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Basically the attack strategy would be to use a query with cost < 1000 until you see `\"errors\":[{\"message\":\"Throttled\"}]` and then send a negative cost query to refill the balance. ",
      "automated_response": false,
      "created_at": "2019-01-17T17:42:49.470Z",
      "updated_at": "2019-01-17T17:42:49.470Z",
      "actor": {
        "username": "emitrani",
        "cleared": true,
        "verified": true,
        "url": "/emitrani",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/3bab17d5c599dd892d16ec2294c90d31fffec4c913d2a2d1eee99f1b66443b4c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 3994627,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Thank you for your report. Our engineering team is investigating the issue.",
      "automated_response": false,
      "created_at": "2019-01-17T18:43:45.339Z",
      "updated_at": "2019-01-17T18:43:45.339Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 3995733,
      "is_internal": false,
      "editable": false,
      "type": "Activities::NotEligibleForBounty",
      "message": "Hi again @emitrani. Now that we've had a closer look at this report, we've determined that it will unfortunately not be eligible for a bounty. Even though it's a very interesting bug, the impact of exploiting it would be Denial of Service, which is one of the ineligible vulnerability types listed on our [program page](https://hackerone.com/shopify). In fairness to other researchers who have reported similar bugs, we can't pay out a bounty for this type of issue.",
      "automated_response": false,
      "created_at": "2019-01-17T22:23:22.925Z",
      "updated_at": "2019-01-17T22:23:22.925Z",
      "actor": {
        "url": "/shopify",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "Shopify"
        }
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 3995760,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "If I understand the issue correctly this would allow someone to develop an app using the api to bypass the app throttling. \n\nFrom the docs at https://help.shopify.com/en/api/getting-started/api-call-limit\n\n> Designing your app with API call limits in mind is the best way to avoid these errors. For example, you can stagger API requests in a queue and do other processing tasks while waiting for the next queued job to run.\n\nSo a developer can gain an unfair advantage by exploiting this to bypass api call limits.",
      "automated_response": false,
      "created_at": "2019-01-17T22:30:56.757Z",
      "updated_at": "2019-01-17T22:30:56.757Z",
      "actor": {
        "username": "emitrani",
        "cleared": true,
        "verified": true,
        "url": "/emitrani",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/3bab17d5c599dd892d16ec2294c90d31fffec4c913d2a2d1eee99f1b66443b4c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 3995810,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "> a developer can gain an unfair advantage by exploiting this to bypass api call limits\n\nWhile that’s true, the purpose of enforcing API call limits in our platform is to prevent Denial of Service, which is why this issue falls into the Denial of Service category.",
      "automated_response": false,
      "created_at": "2019-01-17T22:45:19.834Z",
      "updated_at": "2019-01-17T22:45:19.834Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 3995819,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Fair enough. Still I had no way of knowing that besides the few 504s I triggered trying different numbers.",
      "automated_response": false,
      "created_at": "2019-01-17T22:46:46.784Z",
      "updated_at": "2019-01-17T22:48:16.871Z",
      "actor": {
        "username": "emitrani",
        "cleared": true,
        "verified": true,
        "url": "/emitrani",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/3bab17d5c599dd892d16ec2294c90d31fffec4c913d2a2d1eee99f1b66443b4c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4000231,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-01-18T14:25:49.915Z",
      "updated_at": "2019-01-18T14:25:49.915Z",
      "additional_data": {
        "old_severity": "Medium",
        "new_severity": "Medium (5.0)",
        "old_severity_id": 281458,
        "new_severity_id": 282336
      },
      "actor": {
        "username": "shopify-peteryaworski",
        "cleared": false,
        "verified": false,
        "url": "/shopify-peteryaworski",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/175/526/7ba4844078e290c91c4c46a345b4f9e7666f3ed4_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4031650,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Thanks again for your report. We've deployed a fix for this issue, and it should no longer be possible to craft queries (or parts of queries) that result in a negative cost.\n\nWe look forward to hearing from you again soon!",
      "automated_response": false,
      "created_at": "2019-01-24T15:24:14.604Z",
      "updated_at": "2019-01-24T15:24:14.604Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "emitrani",
        "url": "/emitrani"
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4031655,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-01-24T15:25:50.187Z",
      "updated_at": "2019-01-24T15:25:50.187Z",
      "first_to_agree": true,
      "actor": {
        "username": "emitrani",
        "cleared": true,
        "verified": true,
        "url": "/emitrani",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/206/181/54e8d7444534dbe32a21bd75c87febb777a18496_original.PNG/3bab17d5c599dd892d16ec2294c90d31fffec4c913d2a2d1eee99f1b66443b4c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4031673,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-01-24T15:28:47.863Z",
      "updated_at": "2019-01-24T15:28:47.863Z",
      "additional_data": {
        "old_severity": "Medium (5.0)",
        "new_severity": "Low",
        "old_severity_id": 282336,
        "new_severity_id": 285780
      },
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4031677,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-01-24T15:29:24.102Z",
      "updated_at": "2019-01-24T15:29:24.102Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 4031678,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-01-24T15:29:24.288Z",
      "updated_at": "2019-01-24T15:29:24.288Z",
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}