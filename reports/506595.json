{
  "id": 506595,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MDY1OTU=",
  "url": "https://hackerone.com/reports/506595",
  "title": "CryptoNote: remote node DoS",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-03-08T03:01:48.309Z",
  "submitted_at": "2019-03-08T03:01:48.309Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "anonimal",
    "url": "/anonimal",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 7731,
    "url": "https://hackerone.com/monero",
    "handle": "monero",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Monero",
      "twitter_handle": "monero",
      "website": "https://getmonero.org",
      "about": " Monero: the secure, private, untraceable cryptocurrency"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-07-03T00:20:02.687Z",
  "bug_reporter_agreed_on_going_public_at": "2019-07-02T23:18:19.808Z",
  "team_member_agreed_on_going_public_at": "2019-07-03T00:20:02.534Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nRemote node DoS. See patch below.\n\n## Releases Affected:\n\nAll Monero versions, including the recent v0.14.0.2. Possibly all CryptoNote implementations that aren't Zano.\n\n## Steps To Reproduce:\n\nSince this is *currently* a theoretical attack, non-code PoC detailed in the patch below.\n\n## Supporting Material/References:\n\nBased against current `master` `49afbd0c53d29656689f319c7d3543204ead4e59`:\n\n```diff\ncommit 6620d099800d8935596f59834ce389868b2851f0 (HEAD -> cryptonote)\ngpg: Signature made Fri 08 Mar 2019 02:57:58 AM UTC\ngpg:                using RSA key 12186272CD48E2539E2DD29B66A76ECF914409F1\ngpg: using pgp trust model\ngpg: Good signature from \"anonimal <anonimal@getmonero.org>\" [ultimate]\ngpg:                 aka \"anonimal <anonimal@kovri.io>\" [ultimate]\ngpg:                 aka \"anonimal <anonimal@sekreta.org>\" [ultimate]\ngpg: binary signature, digest algorithm SHA256, key algorithm rsa4096\nAuthor: anonimal <anonimal@getmonero.org>\nDate:   Fri Mar 8 02:21:38 2019 +0000\n\n    cryptonote_protocol_handler: prevent potential DoS\n    \n    Essentially, one can send such a large amount of IDs that core exhausts\n    all free memory. This issue can theoretically be exploited using very\n    large CN blockchains, such as Monero.\n    \n    Credit given to CryptoNote author 'cryptozoidberg' for the fix.\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex efd986b53..c9e35d2d9 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,6 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n+#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex c8b43fb91..023d1b457 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -889,6 +889,16 @@ namespace cryptonote\n   int t_cryptonote_protocol_handler<t_core>::handle_request_get_objects(int command, NOTIFY_REQUEST_GET_OBJECTS::request& arg, cryptonote_connection_context& context)\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n+\n+    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+      {\n+        LOG_ERROR_CCONTEXT(\n+            \"Requested objects count is too big (\"\n+            << arg.blocks.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+        drop_connection(context, false, false);\n+      }\n+\n     NOTIFY_RESPONSE_GET_OBJECTS::request rsp;\n     if(!m_core.handle_get_objects(arg, rsp, context))\n     {\n```\n\nThis is essentially from https://github.com/hyle-team/zano/blob/master/src/currency_protocol/currency_protocol_handler.inl#L364 and confirmation will be needed that Monero doesn't already mitigate this elsewhere.\n\nI have the above patch in my branch ready for PR but if you want to create your own patch, please give credit to cryptozoidberg and myself (anonimal). Thank you.\n\n## Impact\n\nRemote node DoS.",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2019-08-01T23:18:19.895Z",
  "allow_singular_disclosure_after": -130753427.19389696,
  "singular_disclosure_allowed": true,
  "vote_count": 30,
  "voters": [
    "webhak",
    "mashoud1122",
    "sameerphad72",
    "ali",
    "qtros",
    "savitar0x01",
    "codeanddecode",
    "cr4xerbik4sh",
    "tiago-danin",
    "kurovikking",
    "and 20 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 4284747,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I think this check is only done for RPC at the moment. You should also add a check for number of txes. I don't think anyone go through it all to remove large amount DoSes yet, so there'll be a lot of others. This patch seems fine as a sanity check.\n",
      "automated_response": false,
      "created_at": "2019-03-08T10:50:17.991Z",
      "updated_at": "2019-03-08T10:50:17.991Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4287642,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I've just applied it, and btw your patch drops the connection but still causes the DoS to happen.",
      "automated_response": false,
      "created_at": "2019-03-08T19:00:08.539Z",
      "updated_at": "2019-03-08T19:00:08.539Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4287667,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "BTW, since this is K/V stuff, it's possible to send complex tree-like K/V data, which will be parsed, inlcuding plenty of irrelevant stuff. Then, once parsed successfully, the \"correct\" keys are looked up. So I believe you can DoS this in a large number of ways if you really want to, by sending something which will cause a lot of memory to be allocated (IIRC the vector sanity check is one byte at least per element, which means you can claim a lot of memory beforehand). It might take some non trivial amount of work to make this really DoS resistant.\n",
      "automated_response": false,
      "created_at": "2019-03-08T19:06:35.575Z",
      "updated_at": "2019-03-08T19:06:35.575Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4288951,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": ">btw your patch drops the connection but still causes the DoS to happen.\n\nThe patch causes the DoS? Or the DoS is not mitigated? How and why?\n\n>It might take some non trivial amount of work to make this really DoS resistant.\n\nUnderstood.",
      "automated_response": false,
      "created_at": "2019-03-08T21:26:47.085Z",
      "updated_at": "2019-03-08T21:26:47.085Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4288960,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2019-03-08T21:27:26.714Z",
      "updated_at": "2019-03-08T21:27:26.714Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4288973,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I mean, you call drop_connection, but don't return;, so the core call still gets done.",
      "automated_response": false,
      "created_at": "2019-03-08T21:30:03.023Z",
      "updated_at": "2019-03-08T21:30:03.023Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4289026,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Oops, an obvious blunder. I had assumed there was a hidden throw somewhere down the line (I barely looked at this, was mostly just relaying the message). I'll make the change. Outside of the RPC-only check and adding a check for number of transactions, is anything else needed for this report?",
      "automated_response": false,
      "created_at": "2019-03-08T21:42:03.498Z",
      "updated_at": "2019-03-08T21:55:52.813Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4289114,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "No, the report is clear, thanks.\n",
      "automated_response": false,
      "created_at": "2019-03-08T22:02:54.546Z",
      "updated_at": "2019-03-08T22:02:54.546Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4289384,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I started making the changes but, after speaking with @moneromooo, he said he'd handle it. Could you upload the diff here then, before PR, please?",
      "automated_response": false,
      "created_at": "2019-03-08T23:37:56.024Z",
      "updated_at": "2019-03-08T23:37:56.024Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4289554,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "What I have now is (including your patch). I'll look again tomorrow when less tired, and post if I change anything.\n\n```\ncommit 08e8275e96f42e99579ac5e94706012ee80d749e (HEAD -> crash)\nAuthor: moneromooo-monero <moneromooo-monero@users.noreply.github.com>\nDate:   Fri Mar 8 19:17:20 2019 +0000\n\n    cryptonote_protocol: expand basic DoS protection\n    \n    Count txes as well, and actually return before executing the DoS\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex 59a361ee0..1c10ced55 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,7 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n-#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n+#define CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex 316b6a1c4..811fab77c 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -893,13 +893,14 @@ namespace cryptonote\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n \n-    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+    if (arg.blocks.size() + arg.txs.size() > CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT)\n       {\n         LOG_ERROR_CCONTEXT(\n             \"Requested objects count is too big (\"\n-            << arg.blocks.size() << \") expected not more then \"\n-            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+            << arg.blocks.size() + arg.txs.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT);\n         drop_connection(context, false, false);\n+        return 1;\n       }\n \n     NOTIFY_RESPONSE_GET_OBJECTS::request rsp;\n\ncommit 86c9c3613ec99762b56fc76939bd22a42c50cf74\nAuthor: anonimal <anonimal@getmonero.org>\nDate:   Fri Mar 8 18:56:26 2019 +0000\n\n    cryptonote_protocol_handler: prevent potential DoS\n    \n    Essentially, one can send such a large amount of IDs that core exhausts\n    all free memory. This issue can theoretically be exploited using very\n    large CN blockchains, such as Monero.\n    \n    Credit given to CryptoNote author 'cryptozoidberg' for the fix.\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex de5593dc5..59a361ee0 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,6 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n+#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex f2297eeba..316b6a1c4 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -892,6 +892,16 @@ namespace cryptonote\n   int t_cryptonote_protocol_handler<t_core>::handle_request_get_objects(int command, NOTIFY_REQUEST_GET_OBJECTS::request& arg, cryptonote_connection_context& context)\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n+\n+    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+      {\n+        LOG_ERROR_CCONTEXT(\n+            \"Requested objects count is too big (\"\n+            << arg.blocks.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+        drop_connection(context, false, false);\n+      }\n+\n     NOTIFY_RESPONSE_GET_OBJECTS::request rsp;\n     if(!m_core.handle_get_objects(arg, rsp, context))\n     {\n\n```",
      "automated_response": false,
      "created_at": "2019-03-09T00:31:28.706Z",
      "updated_at": "2019-03-09T00:31:28.706Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4290430,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Sure, I'll use that one.",
      "automated_response": false,
      "created_at": "2019-03-09T08:15:32.248Z",
      "updated_at": "2019-03-09T08:15:32.248Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 4290873,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I had a look, and the memory usage is not bad actually. There's an insert which probably doubles usage, but nowhere as bad the RPC used to be. I also patched the fluffy block missing tx handler where you could ask for the same tx N times. So we end up with:\n\n```\ncommit 0096c2f136cf4efecdfe2e69ecfafabc874e926b (HEAD -> crash)\nAuthor: moneromooo-monero <moneromooo-monero@users.noreply.github.com>\nDate:   Sat Mar 9 09:08:53 2019 +0000\n\n    cryptonote_protocol: fix another potential P2P DoS\n    \n    When asking for txes in a fluffy transaction, one might ask\n    for the same (large) tx many times\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex 811fab77c..c7e27ee61 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -790,12 +790,27 @@ namespace cryptonote\n     NOTIFY_NEW_FLUFFY_BLOCK::request fluffy_response;\n     fluffy_response.b.block = t_serializable_object_to_blob(b);\n     fluffy_response.current_blockchain_height = arg.current_blockchain_height;\n+    std::vector<bool> seen(b.tx_hashes.size(), false);\n     for(auto& tx_idx: arg.missing_tx_indices)\n     {\n       if(tx_idx < b.tx_hashes.size())\n       {\n         MDEBUG(\"  tx \" << b.tx_hashes[tx_idx]);\n+        if (seen[tx_idx])\n+        {\n+          LOG_ERROR_CCONTEXT\n+          (\n+            \"Failed to handle request NOTIFY_REQUEST_FLUFFY_MISSING_TX\"\n+            << \", request is asking for duplicate tx \"\n+            << \", tx index = \" << tx_idx << \", block tx count \" << b.tx_hashes.size()\n+            << \", block_height = \" << arg.current_blockchain_height\n+            << \", dropping connection\"\n+          );\n+          drop_connection(context, true, false);\n+          return 1;\n+        }\n         txids.push_back(b.tx_hashes[tx_idx]);\n+        seen[tx_idx] = true;\n       }\n       else\n       {\n\ncommit 0d0e76af6e89a3ce2dbfcc6be0315ccd4c5b620a\nAuthor: moneromooo-monero <moneromooo-monero@users.noreply.github.com>\nDate:   Fri Mar 8 19:17:20 2019 +0000\n\n    cryptonote_protocol: expand basic DoS protection\n    \n    Count transactions as well\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex 59a361ee0..1c10ced55 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,7 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n-#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n+#define CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex 5a67ff8b0..811fab77c 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -893,12 +893,12 @@ namespace cryptonote\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n \n-    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+    if (arg.blocks.size() + arg.txs.size() > CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT)\n       {\n         LOG_ERROR_CCONTEXT(\n             \"Requested objects count is too big (\"\n-            << arg.blocks.size() << \") expected not more then \"\n-            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+            << arg.blocks.size() + arg.txs.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_OBJECT_REQUEST_COUNT);\n         drop_connection(context, false, false);\n         return 1;\n       }\n\ncommit e0530c809c3775ce4e392a1dc3f61eaf53988763\nAuthor: anonimal <anonimal@getmonero.org>\nDate:   Sat Mar 9 09:11:44 2019 +0000\n\n    cryptonote_protocol_handler: prevent potential DoS\n    \n    Essentially, one can send such a large amount of IDs that core exhausts\n    all free memory. This issue can theoretically be exploited using very\n    large CN blockchains, such as Monero.\n    \n    This is a partial fix. Thanks and credit given to CryptoNote author\n    'cryptozoidberg' for collaboration and the fix. Also thanks to\n    'moneromooo'. Referencing HackerOne report #506595.\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex de5593dc5..59a361ee0 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,6 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n+#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex f2297eeba..5a67ff8b0 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -892,6 +892,17 @@ namespace cryptonote\n   int t_cryptonote_protocol_handler<t_core>::handle_request_get_objects(int command, NOTIFY_REQUEST_GET_OBJECTS::request& arg, cryptonote_connection_context& context)\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n+\n+    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+      {\n+        LOG_ERROR_CCONTEXT(\n+            \"Requested objects count is too big (\"\n+            << arg.blocks.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+        drop_connection(context, false, false);\n+        return 1;\n+      }\n+\n     NOTIFY_RESPONSE_GET_OBJECTS::request rsp;\n     if(!m_core.handle_get_objects(arg, rsp, context))\n     {\n\n```",
      "automated_response": false,
      "created_at": "2019-03-09T09:18:11.400Z",
      "updated_at": "2019-03-09T09:18:11.400Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5241266,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportTitleUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-02T20:23:05.843Z",
      "updated_at": "2019-07-02T20:23:05.843Z",
      "additional_data": {
        "old_title": "CryptoNote: theoretical remote node DoS",
        "new_title": "CryptoNote: remote node DoS"
      },
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5241914,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Resolved in https://github.com/monero-project/monero/commit/1d5e8f461de0a04891e5e18b0f50e9cf2cf534e1 and in the latest 0.14.1.0 release.  Thank you @moneromooo.\n\nI am declining any bounty payout for this report.",
      "automated_response": false,
      "created_at": "2019-07-02T23:17:37.383Z",
      "updated_at": "2019-07-02T23:17:37.383Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5241916,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-02T23:17:55.162Z",
      "updated_at": "2019-07-02T23:17:55.162Z",
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "anonimal",
        "url": "/anonimal"
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5241919,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-02T23:18:19.837Z",
      "updated_at": "2019-07-02T23:18:19.837Z",
      "first_to_agree": true,
      "actor": {
        "username": "anonimal",
        "cleared": false,
        "verified": false,
        "url": "/anonimal",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/040/857/f23cc3be09a21e17bc43975987c10ba2b6427239_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5242165,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-03T00:20:02.609Z",
      "updated_at": "2019-07-03T00:20:02.609Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    },
    {
      "id": 5242166,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2019-07-03T00:20:02.716Z",
      "updated_at": "2019-07-03T00:20:02.716Z",
      "actor": {
        "username": "moneromooo",
        "cleared": false,
        "verified": false,
        "url": "/moneromooo",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "monero"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}