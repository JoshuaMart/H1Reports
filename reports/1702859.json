{
  "id": 1702859,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzAyODU5",
  "url": "https://hackerone.com/reports/1702859",
  "title": "Unexpected deserialization in Kredis",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-09-17T07:55:51.178Z",
  "submitted_at": "2022-09-17T07:55:51.251Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ooooooo_q",
    "url": "/ooooooo_q",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/9a55e00ecd2cdf18a7f40678e6836e4cdc90bf95eb4b50c43f5fb775da40bb65"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22,
    "url": "https://hackerone.com/rails",
    "handle": "rails",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ruby on Rails",
      "twitter_handle": "rails",
      "website": "http://rubyonrails.org/security",
      "about": "Web development that doesn't hurt."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-27531"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-08-16T04:50:31.204Z",
  "bug_reporter_agreed_on_going_public_at": "2023-07-17T04:50:29.006Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Unexpected classes may be deserialized because `JSON.load` is used to cast json in [Kredis](https://github.com/rails/kredis).\n\nhttps://github.com/rails/kredis/blob/v1.3.0/lib/kredis/type/json.rb\n\n```ruby\nmodule Kredis\n  module Type\n    class Json < ActiveModel::Type::Value\n      def type\n        :json\n      end\n\n      def cast_value(value)\n        JSON.load(value)\n      end\n```      \n\n### PoC\n\nprepare kredis with rails\n\n```\n❯ rails new rails_server -G -M -O -C -A -J -T\n# Rails 7.0.4 install\n\n❯ cd rails_server\n\n# Edit Gemfile to uncomment `gem \"kredis\"` \n❯ bundle install\n# kredis 1.3.0 install\n\n❯ rails kredis:install\n```\n\n```ruby\n❯ bundle exec rails c\nLoading development environment (Rails 7.0.4)\nirb(main):001:0> abc = 'abc'.to_json_raw_object\n=> {\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}\n\nirb(main):002:0> json = Kredis.json \"json_load\"\n=>\n#<Kredis::Types::Scalar:0x00000001099ea250\n...\n\nirb(main):003:0> json.value = abc\n=> {\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}\n\nirb(main):004:0> json.value\n=> \"abc\"\n```\n\nThe return value of `json.value` should be a hash object, but it is deserialized as a string object.\n\n```ruby\nirb(main):005:0> json.value = /test/\n=> /test/\n\nirb(main):006:0> json.value\n=> \"(?-mix:test)\"\n\nirb(main):007:0> json.value = /test/.as_json\n=> \"(?-mix:test)\"\n\nirb(main):008:0> json.value\n=> \"(?-mix:test)\"\n\nirb(main):009:0> require 'json/add/core'\n=> true\n\nirb(main):010:0> json.value = /test/.as_json\n=> {\"json_class\"=>\"Regexp\", \"o\"=>0, \"s\"=>\"test\"}\n\nirb(main):011:0> json.value\n=> /test/\n```\n\nIf [json/add/core](https://github.com/flori/json/tree/master/lib/json/add)  is loaded, classes such as regular expressions can also be deserialized.\n\n## Impact\n\nIf a hash is passed to `Kredis.json` by user input, reading the value may cause unexpected problems.\n\nThe only deserializable classes are those with `self.json_create` declared, usually String class are possible.(https://github.com/flori/json/blob/v2.6.2/lib/json/pure/generator.rb#L434)\n\n\nIf `json/add/core` is loaded, it is possible to deserialize RegExp, etc., thus risking ReDoS, etc.",
  "weakness": {
    "id": 52,
    "name": "Deserialization of Untrusted Data"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2023-08-16T04:50:29.077Z",
  "allow_singular_disclosure_after": -3290590.295737649,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "7odamoo",
    "yxw21",
    "zy9ard3",
    "kerolesmagdy",
    "yau_",
    "b4d_r3qu3s7",
    "keepsmilling",
    "y1ld1r1m",
    "williwaw"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 160,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/rails/rails",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 18417975,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Patch using `JSON.parse`.\n\n```diff\ndiff --git a/lib/kredis/type/json.rb b/lib/kredis/type/json.rb\nindex 4183d5f..d78b604 100644\n--- a/lib/kredis/type/json.rb\n+++ b/lib/kredis/type/json.rb\n@@ -8,7 +8,7 @@ module Kredis\n       end\n\n       def cast_value(value)\n-        JSON.load(value)\n+        JSON.parse(value)\n       end\n\n       def serialize(value)\ndiff --git a/test/types/scalar_test.rb b/test/types/scalar_test.rb\nindex 03a3ddc..6abd5d9 100644\n--- a/test/types/scalar_test.rb\n+++ b/test/types/scalar_test.rb\n@@ -60,6 +60,8 @@ class ScalarTest < ActiveSupport::TestCase\n     json = Kredis.json \"myscalar\"\n     json.value = { \"one\" => 1, \"string\" => \"hello\" }\n     assert_equal({ \"one\" => 1, \"string\" => \"hello\" }, json.value)\n+    json.value = {\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}\n+    assert_equal({\"json_class\"=>\"String\", \"raw\"=>[97, 98, 99]}, json.value)\n   end\n\n   test \"invalid type\" do\n```",
      "automated_response": false,
      "created_at": "2022-09-18T02:56:30.914Z",
      "updated_at": "2022-09-18T02:56:30.914Z",
      "actor": {
        "username": "ooooooo_q",
        "cleared": false,
        "verified": false,
        "url": "/ooooooo_q",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/d9cda3948dbcdef886be5f7bc601358556d87dbd736cb28585026b898b9f4b13"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 18736025,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@ooooooo_q great, thank you.  We will ship this!",
      "automated_response": false,
      "created_at": "2022-10-11T20:45:38.498Z",
      "updated_at": "2022-10-11T20:45:38.498Z",
      "actor": {
        "username": "tenderlove",
        "cleared": false,
        "verified": false,
        "url": "/tenderlove",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 18736029,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2022-10-11T20:46:26.643Z",
      "updated_at": "2022-10-11T20:46:26.643Z",
      "additional_data": {
        "old_severity": "Low",
        "new_severity": "High",
        "old_severity_id": 1663451,
        "new_severity_id": 1695985
      },
      "actor": {
        "username": "tenderlove",
        "cleared": false,
        "verified": false,
        "url": "/tenderlove",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 18736035,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "",
      "automated_response": false,
      "created_at": "2022-10-11T20:46:55.830Z",
      "updated_at": "2022-10-11T20:46:55.830Z",
      "actor": {
        "username": "tenderlove",
        "cleared": false,
        "verified": false,
        "url": "/tenderlove",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 20690828,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2023-03-07T21:44:46.695Z",
      "updated_at": "2023-03-07T21:44:46.695Z",
      "cve_ids": [
        "CVE-2023-27531"
      ],
      "actor": {
        "username": "tenderlove",
        "cleared": false,
        "verified": false,
        "url": "/tenderlove",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/318/60d828744b5d16813ecbf975fdc453dc4a933f4f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 20781449,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hi @ooooooo_q - we've released this (https://discuss.rubyonrails.org/t/cve-2023-27531-possible-deserialization-of-untrusted-data-vulnerability-in-kredis-json/82467).\n\nThank you for the patch! \n",
      "automated_response": false,
      "created_at": "2023-03-13T18:40:05.647Z",
      "updated_at": "2023-03-13T18:40:05.647Z",
      "actor": {
        "username": "eileencodes",
        "cleared": false,
        "verified": false,
        "url": "/eileencodes",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/0lbh3stq6nu4y0nk4ihlmjtfqsgm/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "ooooooo_q",
        "url": "/ooooooo_q"
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 20872255,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@eileencodes \nThank you for the release and credit.\nBut can you please correct the typo that credit is typo'd as ooooooo_k? (k -> q)\nIf possible, please fix some of the other vulnerabilities I've reported that are also typo'd.\n",
      "automated_response": false,
      "created_at": "2023-03-19T00:31:25.339Z",
      "updated_at": "2023-03-19T00:31:25.339Z",
      "actor": {
        "username": "ooooooo_q",
        "cleared": false,
        "verified": false,
        "url": "/ooooooo_q",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/d9cda3948dbcdef886be5f7bc601358556d87dbd736cb28585026b898b9f4b13"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 20887583,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Sorry about that @ooooooo_q! I've fixed the announcements I could find that were wrong on https://discuss.rubyonrails.org/. Let me know if I missed any!",
      "automated_response": false,
      "created_at": "2023-03-20T13:52:22.651Z",
      "updated_at": "2023-03-20T13:52:22.651Z",
      "actor": {
        "username": "eileencodes",
        "cleared": false,
        "verified": false,
        "url": "/eileencodes",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/0lbh3stq6nu4y0nk4ihlmjtfqsgm/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 21074964,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@eileencodes \nI have confirmed that it has been corrected here as well. Thank you very much.",
      "automated_response": false,
      "created_at": "2023-04-01T12:30:42.908Z",
      "updated_at": "2023-04-01T12:30:42.908Z",
      "actor": {
        "username": "ooooooo_q",
        "cleared": false,
        "verified": false,
        "url": "/ooooooo_q",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/d9cda3948dbcdef886be5f7bc601358556d87dbd736cb28585026b898b9f4b13"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 22857576,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-07-17T04:50:29.040Z",
      "updated_at": "2023-07-17T04:50:29.040Z",
      "first_to_agree": true,
      "actor": {
        "username": "ooooooo_q",
        "cleared": false,
        "verified": false,
        "url": "/ooooooo_q",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/d9cda3948dbcdef886be5f7bc601358556d87dbd736cb28585026b898b9f4b13"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    },
    {
      "id": 23328689,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-08-16T04:50:31.410Z",
      "updated_at": "2023-08-16T04:50:31.410Z",
      "actor": {
        "url": "/rails",
        "ibb": true,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Ruby on Rails"
        }
      },
      "genius_execution_id": null,
      "team_handle": "rails"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}