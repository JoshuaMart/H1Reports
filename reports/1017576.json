{
  "id": 1017576,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDE3NTc2",
  "url": "https://hackerone.com/reports/1017576",
  "title": "Order lookup features of Shopify Chat Application leads to customer orders enumeration due to lack of user input validation",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2020-10-24T04:07:57.621Z",
  "submitted_at": "2020-10-24T04:07:57.631Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "imgnotfound",
    "url": "/imgnotfound",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-11-19T22:28:12.139Z",
  "bug_reporter_agreed_on_going_public_at": "2020-11-19T22:28:12.088Z",
  "team_member_agreed_on_going_public_at": "2020-11-19T19:12:49.381Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "It came to my attention that the Shopify Chat application allows a customer to retrieve its order status by only providing the order email and number. \n\nNoticing that it results in being provided the order status page link, I started playing a bit with both parameters and I found out that it is possible to:\n1. Access any customer first order without having to provide any actual order number\n1. Provide multiple order number within the same payload resulting in orders \"enumeration\"\n\nAs it stands, I'm not sure if it has to do with _SQL injection_. I'll keep digging.\n\n## Steps to reproduce\n1. Having a shop with Shopify Chat application installed (with OrderLookup feature), open up `https://{shop}.myshopify.com/?chat`\n1. Within the Shopify Chat Widget, click on **I need an update on my order**\n1. Click on **Enter order information** and fill in the form by entering any customer email and order number\n1. Using Burp Client and/or any other way to intercept the request that is being made to `https://shopify-chat.shopifycloud.com/api/storefront/conversations/{id}/order_lookup` and copy its content so it can be replayed\n\nThe intercepted payload should looks like this:\n```\n{\n\t\"order_lookup\":\n\t{\n\t\t\"email\": \"francisbeaudoin@wearehackerone.com\",\n\t\t\"order_number\":\"1000\"\n\t}\n}\n```\n\nAs mentioned earlier, there's two different exploit.\n\n### First one: Access any customer's first order details\nFrom the above payload:\n  1. Update `email` value to the targeted customer email address\n  1. Update `order_number` value to `1 OR 2`\n\nIf the targeted customer email address have made any order, you'll be given the link to access his first order details.\n\n### Second one: Enumerate orders by providing multiple order numbers at once\nFrom the above payload:\n1. Update `email` value to the targeted customer email address\n1. Update `order_number` value to `1000 OR 1001 OR 1002 OR 1003 OR 1004 OR 1005`. \n\nGiven that the customer does have any order having a number between 1000 and 1005, you'll be given the link to access the **first matching one**. If any, all you have to do to get the next one is to remove that specific order number from the payload and resend the request once again.\n\nWhile testing, I used a payload with around 50 different numbers and it did work. My assumption there is that we can input a big payload but didn't go much deeper just in case it ends up being evaluated in SQL.\n\nOn a site note, I think that order lookup should have some kind of rate-limiting to prevent any abuse. \n\n## Demo\n██████████\n\n## Impact\n\nRetrieve customers orders informations",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 7,
  "voters": [
    "xploiterr",
    "drsniper",
    "th4nu_0x0",
    "ali",
    "yinvi777",
    "anshraj_srivastava",
    "enwuft"
  ],
  "structured_scope": {
    "databaseId": 413,
    "asset_type": "URL",
    "asset_identifier": "your-store.myshopify.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 9628434,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Small update:\n\nMade some deeper testing and it doesn't seem like SQL injection is possible.",
      "automated_response": false,
      "created_at": "2020-10-25T13:39:38.417Z",
      "updated_at": "2020-10-25T13:39:38.417Z",
      "actor": {
        "username": "imgnotfound",
        "cleared": false,
        "verified": true,
        "url": "/imgnotfound",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9642779,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "So, I needed to fully understand how this is happening and I finally found it.\n\nThe Shopify Chat Application is using the **OrderListData** GraphQL operation (or something similar) to retrieve its data. Therefore, it is way simpler to iterate a targeted customer orders by making use of the **Shopify API search syntax** as described in https://shopify.dev/concepts/about-apis/search-syntax \n\n### First order lookup\n```\n{\n    \"order_lookup\":\n    {\n        \"email\": \"francisbeaudoin@wearehackerone.com\",\n        \"order_number\":\". OR francisbeaudoin@wearehackerone.com\"\n    }\n}\n```\n\n### Any other orders \nThen, to iterate other orders, all you have to do is exclude known numbers by using the `NOT` operator. \n\nFor example, the following would exclude order numbers 1005 and 1035.\n```\n{\n    \"order_lookup\":\n    {\n        \"email\": \"francisbeaudoin@wearehackerone.com\",\n        \"order_number\":\". OR francisbeaudoin@wearehackerone.com AND NOT 1005 AND NOT 1035\"\n    }\n}\n```\n\nThat said, sorry for writing _SQL injection_ within the report title.",
      "automated_response": false,
      "created_at": "2020-10-27T01:01:07.780Z",
      "updated_at": "2020-10-27T01:01:07.780Z",
      "actor": {
        "username": "imgnotfound",
        "cleared": false,
        "verified": true,
        "url": "/imgnotfound",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9652860,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hi @francisbeaudoin,\n\nThank you for your report. We have reproduced the issue and our engineering team is working on a fix.",
      "automated_response": false,
      "created_at": "2020-10-27T20:02:25.291Z",
      "updated_at": "2020-10-27T20:02:25.291Z",
      "actor": {
        "username": "benoit_cotejodoin",
        "cleared": false,
        "verified": false,
        "url": "/benoit_cotejodoin",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/470/019/97f3be894b8bd3c19e2bcc22458e02b30349bd60_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9660513,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Hello @francisbeaudoin,\n\nThanks again for your report. We recently deployed a fix for this issue and it should not longer be possible to reproduce it. Thank you for making Shopify more secure!",
      "automated_response": false,
      "created_at": "2020-10-28T14:19:12.847Z",
      "updated_at": "2020-10-28T14:19:12.847Z",
      "actor": {
        "username": "benoit_cotejodoin",
        "cleared": false,
        "verified": false,
        "url": "/benoit_cotejodoin",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/470/019/97f3be894b8bd3c19e2bcc22458e02b30349bd60_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "imgnotfound",
        "url": "/imgnotfound"
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9683598,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportTitleUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2020-10-30T13:24:53.375Z",
      "updated_at": "2020-10-30T13:24:53.375Z",
      "additional_data": {
        "old_title": "Order lookup features of Shopify Chat Application leads to customer orders enumeration due to lack of user input validation (SQL injection?)",
        "new_title": "Order lookup features of Shopify Chat Application leads to customer orders enumeration due to lack of user input validation"
      },
      "actor": {
        "username": "clayton",
        "cleared": false,
        "verified": false,
        "url": "/clayton",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/YKjJrQvn996bd2n67ELXwtHt/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9686600,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Hi @francisbeaudoin,\n\nThanks again for your report! We’re awarding a $1300 bounty for this issue. Please find below our rationale generated using our [CVSS calculator](https://shopify.github.io/appsec/cvss_calculator/). We've set Attack Complexity to High to reflect the fact that an attacker would need to either know their target's email address or enumerate a large number of email addresses to obtain order information.\n\n## Base Score CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N 5.9\n## Environment: Non-Core (Modified by CR:L/IR:L/AR:L) 4.1\n\n#### Attack Complexity: H\n* Specific conditions to exploit?: Yes\n* Extensive effort to exploit?: Yes\n\n#### Privileges Required: N\n* Requires privileged account (not self-registered)?: No\n\n#### User Interaction: N\n* Requires victim to perform some action during exploit?: No\n\n#### Scope: U\n* Can the attacker impact a separate service?: No\n\n#### Confidentiality: H\n* How much data could be accessed?: Most or All\n* How much of Shopify is impacted?: Most or All\n\n#### Integrity: N\n* How much data could be changed?: None\n\n#### Availability: N\n* Level of disruption to network service?: None",
      "automated_response": false,
      "created_at": "2020-10-30T18:09:18.212Z",
      "updated_at": "2020-10-30T18:09:18.212Z",
      "actor": {
        "url": "/shopify",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "Shopify"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "shopify",
      "collaborator": {
        "username": "imgnotfound",
        "url": "/imgnotfound"
      }
    },
    {
      "id": 9686750,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Awesome, thanks for the bounty! ",
      "automated_response": false,
      "created_at": "2020-10-30T18:27:42.772Z",
      "updated_at": "2020-10-30T18:27:42.772Z",
      "actor": {
        "username": "imgnotfound",
        "cleared": false,
        "verified": true,
        "url": "/imgnotfound",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9871544,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-11-19T19:12:49.424Z",
      "updated_at": "2020-11-19T19:12:49.424Z",
      "first_to_agree": true,
      "actor": {
        "username": "jack_mccracken",
        "cleared": false,
        "verified": false,
        "url": "/jack_mccracken",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/164/342/6543dc397b4dbb2c24dc81f92a42de654a3e6a99_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9873053,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-11-19T22:28:12.113Z",
      "updated_at": "2020-11-19T22:28:12.113Z",
      "actor": {
        "username": "imgnotfound",
        "cleared": false,
        "verified": true,
        "url": "/imgnotfound",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    },
    {
      "id": 9873054,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2020-11-19T22:28:12.167Z",
      "updated_at": "2020-11-19T22:28:12.167Z",
      "actor": {
        "username": "imgnotfound",
        "cleared": false,
        "verified": true,
        "url": "/imgnotfound",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "shopify"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}