{
  "id": 1069487,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY5NDg3",
  "url": "https://hackerone.com/reports/1069487",
  "title": "DNS rebinding in --inspect (insufficient fix of CVE-2018-7160)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-12-31T23:31:42.932Z",
  "submitted_at": "2020-12-31T23:31:42.993Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "v6ak",
    "url": "/v6ak",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2021-22884",
    "CVE-2018-7160"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-02-23T16:35:51.348Z",
  "bug_reporter_agreed_on_going_public_at": "2021-02-23T16:35:51.281Z",
  "team_member_agreed_on_going_public_at": "2021-02-23T14:44:09.552Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** While the debugger (i.e., the --inspect option) tries to prevent DNS rebinding, the whitelist is excessive.\n\n**Description:** The whitelist includes “localhost6”, which is not that widespread.  When “localhost6” is not present in /etc/hosts, it is just an ordinary domain that is resolved via DNS, i.e., over network. If the attacker controls victim's DNS server or can spoof its responses, the DNS rebinding protection can be bypassed by using the “localhost6” domain. As long as the attacker uses the “localhost6” domain, they can still apply the attack described in CVE-2018-7160.\n\nReasoning why localhost6 is not so common and Node.js should not rely on its presence in the hosts file:\n\n* It is not even present in the node:latest Docker image (sha256:aa1930b56896a43dedb227526d5d40f4a6e9157f9d8703f9584650cde510438a)\n* I haven't seen it in Windows 10.\n* Unlike RFC 6761 for localhost, I have found no RFC that mentions localhost6 (see https://www.google.com/search?q=localhost6+site%3Atools.ietf.org ).\n\n## Steps To Reproduce:\n\nPreconditions: Victim has no entry for localhost6 in hosts and attacker controls DNS responses. (It does not matter if the attacker control the DNS server or the network communication between the DNS server and the victim.)\n\n  1. Victim runs node with --inspect option\n  2. Victim visits attacker's webpage\n  3. The attacker's webpage opens http://localhost6:9229\n  4. Victim finds no “localhost6” entry in hosts file, so it asks the DNS server and gets <attacker's-IP>. (Maybe the response will have a short TTL. There are multiple tricks to make DNS rebinding successful in a short time, but I am not going to be exhaustive.)\n  5. Victim loads webpage http://localhost6:9229 from <attacker's-IP>.\n  6. The webpage http://localhost6:9229 tries to load http://localhost6:9229/json from attacker's server. (If the IP address of “localhost6” is still cached, attacker needs to retry. There are techniques that can speed it up, like using RST packet.)\n  7. Due to a short TTL, the DNS server will be soon asked again about an entry for “localhost6”. This time, the DNS server responds “127.0.0.1”.\n  8. The http://localhost6:9229 website (i.e., the one hosted on <attacker's IP>) will retrieve http://localhost6:9229/json from 127.0.0.1, including webSocketDebuggerUrl.\n  9. Now, the attacker knows the webSocketDebuggerUrl and can connect to is using WebSocket. Note that WebSocket is not restricted by same-origin-policy. By doing so, they can gain the privileges of the Node.js instance.\n\nVulnerable code: https://github.com/nodejs/node/blob/fdf0a84e826d3a9ec0ce6f5a3f5adc967fe99408/src/inspector_socket.cc#L584\n\n## Impact:\n\nAttacker can gain access to the Node.js debugger, which can result in remote code execution.\n\n## Supporting Material/References:\n\n  * Original vulnerability: https://nvd.nist.gov/vuln/detail/CVE-2018-7160\n  * Vulnerable code: https://github.com/nodejs/node/blob/fdf0a84e826d3a9ec0ce6f5a3f5adc967fe99408/src/inspector_socket.cc#L584\n  * Documentation that mentions the vulnerable behavior: https://nodejs.org/en/docs/guides/debugging-getting-started/\n\n## Impact\n\nAttacker can gain access to the Node.js debugger, which can result in remote code execution.",
  "bounty_amount": "500.0",
  "formatted_bounty": "$500",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2021-03-25T14:44:09.635Z",
  "allow_singular_disclosure_after": -78769945.64106877,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "mr-medi",
    "ali",
    "bugplz",
    "vivek111"
  ],
  "severity": {
    "rating": "high",
    "score": 7.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 10248018,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thanks for the report. We'll analyze this report as soon as possible as most of the team is taking some vacation time right now.\n\nOne quick question: as far as I understand DNS, for this to work it would require access to the same network or be anyway be able to control a DNS server that the developer machine is already using. Can you include some step-by-step documentation that would allow us to reproduce this issue? I think most of us are not familiar on how to make a DNS rebind for localhost6. ",
      "automated_response": false,
      "created_at": "2021-01-01T10:37:47.274Z",
      "updated_at": "2021-01-01T10:37:47.274Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10249078,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "On DNS access: You are right. This is doable for local network adversary that can intercept all your traffic or for your DNS provider.\n\nOn reproduction: There are multiple approachs:\n\nA. Simulation: This approach does not rely much on environment. It skips DNS server, web browser and /etc/hosts, so it does not actually perform the DNS rebinding, it just simulates its outcome from Node.js perspective: A client from trusted network (i.e., loopback in this case) tries to access a security-sensitive resource, but the Host HTTP header actually corresponds with an attacker's domain (i.e., “localhost6” in this case). It can be easily done with curl oneliner:\n\ncurl 127.0.0.1:9229/json -H \"Host: localhost6\"\n\nAdvantages: Easy to do, does not depend much on environment.\n\nDisadvantages: The simulation does not explain the principle of the attack. It also does not test doability under a specific environment.\n\nB. Basic attack scenario: Just getting http://127.0.0.1:9229/json by an actual DNS rebinding attack. I can dockerize some DNS rebinding script that demonstrates actual attack. Maybe I cannot dockerize DNS spoofing, but if you voluntarily use the malicious DNS server, you can reproduce the attack.\n\nC. Doing complete attack scenario. This requires to perform B first. Then, you can connect to the webSocketDebuggerUrl and debug the Node.js application. With enough understanding of the protocol (or with a WebSocket reverse proxy and manual work), the attacker can obtain debug console and execute some demo command, e.g., child_process.exec(\"xterm\") or child_process.exec(\"calc.exe\"). For doing so, it seems that we need to send something like this:\n{\"id\":<sequential id>,\"method\":\"Runtime.evaluate\",\"params\":{\"expression\":\"child_process.exec(\\\"xterm\\\")\",\"objectGroup\":\"console\",\"includeCommandLineAPI\":true,\"silent\":false,\"contextId\":1,\"returnByValue\":false,\"generatePreview\":true,\"userGesture\":true,\"awaitPromise\":false,\"replMode\":true}}\n\nMaybe we will need to do perform some handshake first or create some context, not sure. I haven't tried that.\n\nShould I proceed with doing B or even C?",
      "automated_response": false,
      "created_at": "2021-01-01T16:44:23.361Z",
      "updated_at": "2021-01-01T16:44:23.361Z",
      "actor": {
        "username": "v6ak",
        "cleared": false,
        "verified": false,
        "url": "/v6ak",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10251787,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I think that's enough details. We'll confirm this asap.",
      "automated_response": false,
      "created_at": "2021-01-02T11:47:18.789Z",
      "updated_at": "2021-01-02T11:47:18.789Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10251799,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@chalker @mylesborins you were involved in the original discussion in https://github.com/nodejs-private/security/issues/181 and https://github.com/nodejs-private/node-private/pull/102.\n\nI've found this text in https://github.com/nodejs-private/node-private/pull/102#issuecomment-371453420:\n\n> Domains localhost, localhost6 are fine. DNS rebinding not possible.\n\n@chalker Can you confirm this? Even if `localhost6` is not defined?\n\n> Safeguard to make sure when they resolve to a loopback ipv4/ipv6 address seems reasonable, even a simple check for 127.0.0.1 / ::1 / :ffff:127.0.0.1 should be ok, I guess.\n\nThis was present in https://github.com/nodejs-private/node-private/pull/102/commits/becd88ad2686e020d2f40dcd1d2bfdd51d215662, but then it was removed from the final commit.\n\nShould we add it back?",
      "automated_response": false,
      "created_at": "2021-01-02T11:52:17.859Z",
      "updated_at": "2021-01-02T11:52:17.859Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10252848,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "While verifying that localhost/localhost6 corresponds to the right IP address might look like a good idea, I find this mechanism quite fragile. There are two requirements:\n\n1. It needs to be permanent.\n2. You need to check the point of view of all browsers rather than Node.js's PoV.\n\nIn real world, there are multiple issues (both theoretical and practical) with ensuring any of those requirement:\n\n* Obviously, you shouldn't ask DNS, as it would break (1) – doing so would make the attack still possible, just a little harder. Maybe you would need to just check the hosts file.\n* Format ambiguities (rather theoretical) could break (2) – when having multiple parsers of hosts file, there can be some edge cases that can lead to Node.js thinking that there is a proper record for localhost6, while some browser would ignore that.\n* Updates (rather theoretical) – a system update can break (1) by removing localhost6 from\n* Sandboxing can break (2). Docker images can have a different /etc/hosts, so it can break. And while Flatpak/Snap look safe, there are potential more sandboxing mechanisms that I haven't explored or that will be created in future.\n* Trusted local subnetwork can break (2). (The trusted subnetwork might be virtual, i.e., inside a single virtual computer, which is a special case of the previous point.) When you allow other (maybe virtual) computers within this network to access the host, they might be also abused for this attack, as they might have a different hosts file.\n\n-----\nIn my opinion, adding further measures that would allow keeping “localhost6” entry in the whitelist is hard (or even impossible) to do it right. On the other side, I see little benefit (or maybe no benefit at all) of keeping “localhost6” in the whitelist.",
      "automated_response": false,
      "created_at": "2021-01-02T16:52:35.359Z",
      "updated_at": "2021-01-02T16:52:35.359Z",
      "actor": {
        "username": "v6ak",
        "cleared": false,
        "verified": false,
        "url": "/v6ak",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10350295,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "> In my opinion, adding further measures that would allow keeping “localhost6” entry in the whitelist is hard (or even impossible) to do it right. On the other side, I see little benefit (or maybe no benefit at all) of keeping “localhost6” in the whitelist.\n\nThanks! I think it's pretty clear what will should do. We'll try to include this in the next security release.",
      "automated_response": false,
      "created_at": "2021-01-13T11:47:55.816Z",
      "updated_at": "2021-01-13T11:47:55.816Z",
      "actor": {
        "username": "mcollina",
        "cleared": false,
        "verified": false,
        "url": "/mcollina",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/230/980/61a26e6fa4ec002fca494b3b7b43aa251eef3453_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10706958,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-02-18T09:19:12.078Z",
      "updated_at": "2021-02-18T09:19:12.078Z",
      "cve_ids": [
        "CVE-2021-22884"
      ],
      "actor": {
        "username": "danbev",
        "cleared": false,
        "verified": false,
        "url": "/danbev",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071635Z&X-Amz-Expires=1506&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d1aa7b1aa6aeb66d7ea900a0ea619b2438195d0d0ce993dca80e8c81b999b438"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10755166,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "@v6ak Thank you for the report!  This has now been included in this [security release](https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/).",
      "automated_response": false,
      "created_at": "2021-02-23T14:41:59.741Z",
      "updated_at": "2021-02-23T14:41:59.741Z",
      "actor": {
        "username": "danbev",
        "cleared": false,
        "verified": false,
        "url": "/danbev",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071635Z&X-Amz-Expires=1506&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d1aa7b1aa6aeb66d7ea900a0ea619b2438195d0d0ce993dca80e8c81b999b438"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "v6ak",
        "url": "/v6ak"
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10755199,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-02-23T14:44:09.573Z",
      "updated_at": "2021-02-23T14:44:09.573Z",
      "first_to_agree": true,
      "actor": {
        "username": "danbev",
        "cleared": false,
        "verified": false,
        "url": "/danbev",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071635Z&X-Amz-Expires=1506&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d1aa7b1aa6aeb66d7ea900a0ea619b2438195d0d0ce993dca80e8c81b999b438"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10756600,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-02-23T16:35:51.314Z",
      "updated_at": "2021-02-23T16:35:51.314Z",
      "actor": {
        "username": "v6ak",
        "cleared": false,
        "verified": false,
        "url": "/v6ak",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10756601,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2021-02-23T16:35:51.383Z",
      "updated_at": "2021-02-23T16:35:51.383Z",
      "actor": {
        "username": "v6ak",
        "cleared": false,
        "verified": false,
        "url": "/v6ak",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10765325,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "I have originally just skimmed the text, so I had missed few things in the release notes:\n\n* The attack is described as “denial of service”. Why?\n* The description also contains “when the whitelist includes \\“localhost6\\””. This is technically true, but the problem is in the hardcoded whitelist. So, this condition is always true on the vulnerable versions.",
      "automated_response": false,
      "created_at": "2021-02-24T09:22:33.588Z",
      "updated_at": "2021-02-24T09:22:33.588Z",
      "actor": {
        "username": "v6ak",
        "cleared": false,
        "verified": false,
        "url": "/v6ak",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10765911,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "```The attack is described as “denial of service”. Why?```\nSorry about that, that was a mistake on my part when creating the blog. I've created a pull request to fix this and it should be updated soon. ",
      "automated_response": false,
      "created_at": "2021-02-24T10:04:30.309Z",
      "updated_at": "2021-02-24T10:04:30.309Z",
      "actor": {
        "username": "danbev",
        "cleared": false,
        "verified": false,
        "url": "/danbev",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/p1loeyp5eg3uertcvieae0lp6nch/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89?response-content-disposition=inline%3B%20filename%3D%22danbev.jpeg%22%3B%20filename%2A%3DUTF-8%27%27danbev.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T071635Z&X-Amz-Expires=1506&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d1aa7b1aa6aeb66d7ea900a0ea619b2438195d0d0ce993dca80e8c81b999b438"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "nodejs"
    },
    {
      "id": 10780996,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2021-02-25T07:04:17.302Z",
      "updated_at": "2021-02-25T07:04:17.302Z",
      "actor": {
        "url": "/nodejs",
        "ibb": true,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Node.js"
        }
      },
      "bounty_amount": "500.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "nodejs",
      "collaborator": {
        "username": "v6ak",
        "url": "/v6ak"
      }
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}